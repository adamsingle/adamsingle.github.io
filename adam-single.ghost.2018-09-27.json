{"db":[{"meta":{"exported_on":1538021352118,"version":"004"},"data":{"app_fields":[],"app_settings":[],"apps":[],"client_trusted_domains":[],"permissions":[{"id":1,"uuid":"9f1e3de8-1598-4fb3-a98f-8fac970def6e","name":"Export database","object_type":"db","action_type":"exportContent","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":2,"uuid":"94983e0b-3906-4f63-8904-cff7f7fa21a2","name":"Import database","object_type":"db","action_type":"importContent","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":3,"uuid":"2299b87e-90d9-4001-a5b1-d2519ceb23cb","name":"Delete all content","object_type":"db","action_type":"deleteAllContent","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":4,"uuid":"7a80030e-b56a-4ae8-9cee-8b312d3abad1","name":"Send mail","object_type":"mail","action_type":"send","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":5,"uuid":"48eb205c-4e2e-4941-a97a-50dda0e192e6","name":"Browse notifications","object_type":"notification","action_type":"browse","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":6,"uuid":"769fab92-f6df-4780-93d9-79df10c31467","name":"Add notifications","object_type":"notification","action_type":"add","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":7,"uuid":"f065d519-9b9a-47d0-a10e-414e5a864dd1","name":"Delete notifications","object_type":"notification","action_type":"destroy","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":8,"uuid":"5d22d1b5-d3ad-4614-b258-7307602579b8","name":"Browse posts","object_type":"post","action_type":"browse","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":9,"uuid":"ffaa3eb2-6ffe-486a-b95d-0f95f77e1870","name":"Read posts","object_type":"post","action_type":"read","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":10,"uuid":"9bbf0314-ac95-4197-a8f3-206a60a62934","name":"Edit posts","object_type":"post","action_type":"edit","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":11,"uuid":"7e68bc95-23a6-45ae-be53-d105ddbd1ffe","name":"Add posts","object_type":"post","action_type":"add","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":12,"uuid":"35e9ac2a-cbca-48a6-9cda-837572a15843","name":"Delete posts","object_type":"post","action_type":"destroy","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":13,"uuid":"e427d556-045e-489a-a663-54815c64396e","name":"Browse settings","object_type":"setting","action_type":"browse","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":14,"uuid":"98cd4574-73fd-4e10-b7e7-493b289d53ed","name":"Read settings","object_type":"setting","action_type":"read","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":15,"uuid":"12cd3a5a-e092-479e-80bf-f71dfd8f1de6","name":"Edit settings","object_type":"setting","action_type":"edit","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":16,"uuid":"40e267df-c952-423c-b11a-ce6822fc3eeb","name":"Generate slugs","object_type":"slug","action_type":"generate","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":17,"uuid":"6eed4da5-1fb6-4cc9-bd3f-a0f84d6ee167","name":"Browse tags","object_type":"tag","action_type":"browse","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":18,"uuid":"f225811a-c582-4bf1-825b-548068be8f6c","name":"Read tags","object_type":"tag","action_type":"read","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":19,"uuid":"865c3a28-14ac-4123-819f-c906baaaeb59","name":"Edit tags","object_type":"tag","action_type":"edit","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":20,"uuid":"494310a6-3a9d-4031-8d19-ff5052ebc654","name":"Add tags","object_type":"tag","action_type":"add","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":21,"uuid":"d45d6302-9ada-4656-a595-19ed09916f00","name":"Delete tags","object_type":"tag","action_type":"destroy","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":22,"uuid":"3b158fa6-f21d-452f-a567-c165a5958286","name":"Browse themes","object_type":"theme","action_type":"browse","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":23,"uuid":"1b15b0cd-62c6-4c6a-9e52-8bc08c1454ff","name":"Edit themes","object_type":"theme","action_type":"edit","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":24,"uuid":"ce6cefb9-9149-4966-8a70-3d45a35a1c62","name":"Browse users","object_type":"user","action_type":"browse","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":25,"uuid":"40ca53c8-50de-447b-9845-d2c21e043cff","name":"Read users","object_type":"user","action_type":"read","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":26,"uuid":"30815207-1343-4bcf-b436-fb0d32151ba2","name":"Edit users","object_type":"user","action_type":"edit","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":27,"uuid":"2aceed1d-5b04-4928-b940-3a9bc318f1bc","name":"Add users","object_type":"user","action_type":"add","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":28,"uuid":"b2997036-1d05-4d2e-9927-0a540f97d843","name":"Delete users","object_type":"user","action_type":"destroy","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":29,"uuid":"c2f5417c-d33b-4662-8a4b-e466fc281eb7","name":"Assign a role","object_type":"role","action_type":"assign","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1},{"id":30,"uuid":"dfbb657e-8131-4c6a-b574-a227eace52d2","name":"Browse roles","object_type":"role","action_type":"browse","object_id":null,"created_at":"2015-09-29T01:55:26.000Z","created_by":1,"updated_at":"2015-09-29T01:55:26.000Z","updated_by":1}],"permissions_apps":[],"permissions_roles":[{"id":1,"role_id":1,"permission_id":1},{"id":2,"role_id":1,"permission_id":2},{"id":3,"role_id":1,"permission_id":3},{"id":4,"role_id":1,"permission_id":4},{"id":5,"role_id":1,"permission_id":5},{"id":6,"role_id":1,"permission_id":6},{"id":7,"role_id":1,"permission_id":7},{"id":8,"role_id":1,"permission_id":8},{"id":9,"role_id":1,"permission_id":9},{"id":10,"role_id":1,"permission_id":10},{"id":11,"role_id":1,"permission_id":11},{"id":12,"role_id":1,"permission_id":12},{"id":13,"role_id":1,"permission_id":13},{"id":14,"role_id":1,"permission_id":14},{"id":15,"role_id":1,"permission_id":15},{"id":16,"role_id":1,"permission_id":16},{"id":17,"role_id":1,"permission_id":17},{"id":18,"role_id":1,"permission_id":18},{"id":19,"role_id":1,"permission_id":19},{"id":20,"role_id":1,"permission_id":20},{"id":21,"role_id":1,"permission_id":21},{"id":22,"role_id":1,"permission_id":22},{"id":23,"role_id":1,"permission_id":23},{"id":24,"role_id":1,"permission_id":24},{"id":25,"role_id":1,"permission_id":25},{"id":26,"role_id":1,"permission_id":26},{"id":27,"role_id":1,"permission_id":27},{"id":28,"role_id":1,"permission_id":28},{"id":29,"role_id":1,"permission_id":29},{"id":30,"role_id":1,"permission_id":30},{"id":31,"role_id":2,"permission_id":8},{"id":32,"role_id":2,"permission_id":9},{"id":33,"role_id":2,"permission_id":10},{"id":34,"role_id":2,"permission_id":11},{"id":35,"role_id":2,"permission_id":12},{"id":36,"role_id":2,"permission_id":13},{"id":37,"role_id":2,"permission_id":14},{"id":38,"role_id":2,"permission_id":16},{"id":39,"role_id":2,"permission_id":17},{"id":40,"role_id":2,"permission_id":18},{"id":41,"role_id":2,"permission_id":19},{"id":42,"role_id":2,"permission_id":20},{"id":43,"role_id":2,"permission_id":21},{"id":44,"role_id":2,"permission_id":24},{"id":45,"role_id":2,"permission_id":25},{"id":46,"role_id":2,"permission_id":26},{"id":47,"role_id":2,"permission_id":27},{"id":48,"role_id":2,"permission_id":28},{"id":49,"role_id":2,"permission_id":29},{"id":50,"role_id":2,"permission_id":30},{"id":51,"role_id":3,"permission_id":8},{"id":52,"role_id":3,"permission_id":9},{"id":53,"role_id":3,"permission_id":11},{"id":54,"role_id":3,"permission_id":13},{"id":55,"role_id":3,"permission_id":14},{"id":56,"role_id":3,"permission_id":16},{"id":57,"role_id":3,"permission_id":17},{"id":58,"role_id":3,"permission_id":18},{"id":59,"role_id":3,"permission_id":20},{"id":60,"role_id":3,"permission_id":24},{"id":61,"role_id":3,"permission_id":25},{"id":62,"role_id":3,"permission_id":30}],"permissions_users":[],"posts":[{"id":3,"uuid":"9907fc60-35b3-4c51-badd-a665fb25520b","title":"Contact","slug":"contact","markdown":"\nIf you have a game or application youâ€™d like to take to the next stage of conception, feel free to drop me a line and weâ€™ll discuss it.\n\nIf you need an extra set of coder hands to finish off a Unity project, let me know, Iâ€™m sure we can work something out.\n\nIf youâ€™d just like to contact me for a chat, donâ€™t hesitate, Iâ€™m always happy to talk about games.\n\n [contact-form-7 404 \"Not Found\"] \n","html":"<p>If you have a game or application youâ€™d like to take to the next stage of conception, feel free to drop me a line and weâ€™ll discuss it.</p>\n\n<p>If you need an extra set of coder hands to finish off a Unity project, let me know, Iâ€™m sure we can work something out.</p>\n\n<p>If youâ€™d just like to contact me for a chat, donâ€™t hesitate, Iâ€™m always happy to talk about games.</p>\n\n<p>[contact-form-7 404 \"Not Found\"] </p>","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2011-10-03T12:18:58.000Z","created_by":1,"updated_at":"2012-12-19T21:41:10.000Z","updated_by":1,"published_at":"2011-10-03T12:18:58.000Z","published_by":1},{"id":4,"uuid":"be40e506-aaef-4734-a5ed-0b6e44b796c9","title":"#MyOUYAGame","slug":"myouyagame","markdown":"\n- [Time Management for the full time Dev, full time parent, part time Indie](http://adamsingle.com/time-management-sleep/ \"Time Management for the full time Dev, full time parent, part time Indie\")\n- [Robot University â€“ The Kinects](http://adamsingle.com/robot-university-kinects/ \"Robot University â€“ The Kinects\")\n- [Robot University â€“ Input](http://adamsingle.com/robot-university-input/ \"Robot University â€“ Input\")\n- [Robot University â€“ Camera set up [Final]](http://adamsingle.com/robot-university-camera-setup-final/ \"Robot University â€“ Camera set up [Final]\")\n- [Robot University â€“ Camera Set Up](http://adamsingle.com/robot-university-camera-set-2/ \"Robot University â€“ Camera Set Up\")\n- [Robot University â€“ On Site Induction](http://adamsingle.com/robot-university-on-site-induction/ \"Robot University â€“ On Site Induction\")\n- [Robot University](http://adamsingle.com/robot-university/ \"Robot University\")\n- [Disneyâ€™s Electric Beat](http://adamsingle.com/disneys-electric-beat/ \"Disneyâ€™s Electric Beat\")\n- [Introduction to Binary and Bitstrings with C#](http://adamsingle.com/intro-to-bitstrings/ \"Introduction to Binary and Bitstrings with C#\")\n- [Setting up Unity3D with GIT, SourceTree and BitBucket on a Mac](http://adamsingle.com/unitygitsourcetreebitbucketmactute/ \"Setting up Unity3D with GIT, SourceTree and BitBucket on a Mac\")\n- [A new company, dev update and Gurnett Chess](http://adamsingle.com/20130509devupdate/ \"A new company, dev update and Gurnett Chess\")\n- [An open design challenge](http://adamsingle.com/designchallenge1/ \"An open design challenge\")\n- [Dev Update Sub Pre Alpha v0.001](http://adamsingle.com/dev-update-sub-pre-alpha-v0-001/ \"Dev Update Sub Pre Alpha v0.001\")\n- [Rest In Peace Roger Ebert](http://adamsingle.com/rest-in-peace-roger-ebert/ \"Rest In Peace Roger Ebert\")\n- [Dovieâ€™andi se tovya sagain](http://adamsingle.com/dovieandi-se-tovya-sagain/ \"Dovieâ€™andi se tovya sagain\")\n- [7Bit Hero](http://adamsingle.com/7bit-hero/ \"7Bit Hero\")\n- [#1GAM â€“ Update 2: Not going to make it](http://adamsingle.com/1gam-update-2/ \"#1GAM â€“ Update 2: Not going to make it\")\n- [Destinyâ€™s Push](http://adamsingle.com/destinys-push/ \"Destinyâ€™s Push\")\n- [Nerd Fitness and my inner super hero](http://adamsingle.com/nerd-fitness-and-my-inner-super-hero/ \"Nerd Fitness and my inner super hero\")\n- [Of Wolf And Man](http://adamsingle.com/of-wolf-and-man/ \"Of Wolf And Man\")\n- [Valkyrie](http://adamsingle.com/eir-and-fire/ \"Valkyrie\")\n- [Dino Diner](http://adamsingle.com/dino-diner/ \"Dino Diner\")\n- [#OneGameAMonth â€“ January: Herd](http://adamsingle.com/onegameamonth-january-herd/ \"#OneGameAMonth â€“ January: Herd\")\n- [#OneGameAMonth â€“ Update 1](http://adamsingle.com/onegameamonth-update-1/ \"#OneGameAMonth â€“ Update 1\")\n- [Photon](http://adamsingle.com/photon/ \"Photon\")\n- [Zombie Juice](http://adamsingle.com/zombie-juice/ \"Zombie Juice\")\n- [Hot Tail](http://adamsingle.com/hot-tail/ \"Hot Tail\")\n- [#MyOUYAGame](http://adamsingle.com/myouyagame/ \"#MyOUYAGame\")\n\n\n","html":"<ul>\n<li><a href=\"http://adamsingle.com/time-management-sleep/\" title=\"Time Management for the full time Dev, full time parent, part time Indie\">Time Management for the full time Dev, full time parent, part time Indie</a></li>\n<li><a href=\"http://adamsingle.com/robot-university-kinects/\" title=\"Robot University â€“ The Kinects\">Robot University â€“ The Kinects</a></li>\n<li><a href=\"http://adamsingle.com/robot-university-input/\" title=\"Robot University â€“ Input\">Robot University â€“ Input</a></li>\n<li><a href=\"http://adamsingle.com/robot-university-camera-setup-final/\" title=\"Robot University â€“ Camera set up [Final]\">Robot University â€“ Camera set up [Final]</a></li>\n<li><a href=\"http://adamsingle.com/robot-university-camera-set-2/\" title=\"Robot University â€“ Camera Set Up\">Robot University â€“ Camera Set Up</a></li>\n<li><a href=\"http://adamsingle.com/robot-university-on-site-induction/\" title=\"Robot University â€“ On Site Induction\">Robot University â€“ On Site Induction</a></li>\n<li><a href=\"http://adamsingle.com/robot-university/\" title=\"Robot University\">Robot University</a></li>\n<li><a href=\"http://adamsingle.com/disneys-electric-beat/\" title=\"Disneyâ€™s Electric Beat\">Disneyâ€™s Electric Beat</a></li>\n<li><a href=\"http://adamsingle.com/intro-to-bitstrings/\" title=\"Introduction to Binary and Bitstrings with C#\">Introduction to Binary and Bitstrings with C#</a></li>\n<li><a href=\"http://adamsingle.com/unitygitsourcetreebitbucketmactute/\" title=\"Setting up Unity3D with GIT, SourceTree and BitBucket on a Mac\">Setting up Unity3D with GIT, SourceTree and BitBucket on a Mac</a></li>\n<li><a href=\"http://adamsingle.com/20130509devupdate/\" title=\"A new company, dev update and Gurnett Chess\">A new company, dev update and Gurnett Chess</a></li>\n<li><a href=\"http://adamsingle.com/designchallenge1/\" title=\"An open design challenge\">An open design challenge</a></li>\n<li><a href=\"http://adamsingle.com/dev-update-sub-pre-alpha-v0-001/\" title=\"Dev Update Sub Pre Alpha v0.001\">Dev Update Sub Pre Alpha v0.001</a></li>\n<li><a href=\"http://adamsingle.com/rest-in-peace-roger-ebert/\" title=\"Rest In Peace Roger Ebert\">Rest In Peace Roger Ebert</a></li>\n<li><a href=\"http://adamsingle.com/dovieandi-se-tovya-sagain/\" title=\"Dovieâ€™andi se tovya sagain\">Dovieâ€™andi se tovya sagain</a></li>\n<li><a href=\"http://adamsingle.com/7bit-hero/\" title=\"7Bit Hero\">7Bit Hero</a></li>\n<li><a href=\"http://adamsingle.com/1gam-update-2/\" title=\"#1GAM â€“ Update 2: Not going to make it\">#1GAM â€“ Update 2: Not going to make it</a></li>\n<li><a href=\"http://adamsingle.com/destinys-push/\" title=\"Destinyâ€™s Push\">Destinyâ€™s Push</a></li>\n<li><a href=\"http://adamsingle.com/nerd-fitness-and-my-inner-super-hero/\" title=\"Nerd Fitness and my inner super hero\">Nerd Fitness and my inner super hero</a></li>\n<li><a href=\"http://adamsingle.com/of-wolf-and-man/\" title=\"Of Wolf And Man\">Of Wolf And Man</a></li>\n<li><a href=\"http://adamsingle.com/eir-and-fire/\" title=\"Valkyrie\">Valkyrie</a></li>\n<li><a href=\"http://adamsingle.com/dino-diner/\" title=\"Dino Diner\">Dino Diner</a></li>\n<li><a href=\"http://adamsingle.com/onegameamonth-january-herd/\" title=\"#OneGameAMonth â€“ January: Herd\">#OneGameAMonth â€“ January: Herd</a></li>\n<li><a href=\"http://adamsingle.com/onegameamonth-update-1/\" title=\"#OneGameAMonth â€“ Update 1\">#OneGameAMonth â€“ Update 1</a></li>\n<li><a href=\"http://adamsingle.com/photon/\" title=\"Photon\">Photon</a></li>\n<li><a href=\"http://adamsingle.com/zombie-juice/\" title=\"Zombie Juice\">Zombie Juice</a></li>\n<li><a href=\"http://adamsingle.com/hot-tail/\" title=\"Hot Tail\">Hot Tail</a></li>\n<li><a href=\"http://adamsingle.com/myouyagame/\" title=\"#MyOUYAGame\">#MyOUYAGame</a></li>\n</ul>","image":"http://res.cloudinary.com/adamsingle/image/upload/v1443437887/Firing_Squad_xr1l12.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2012-12-20T13:31:30.000Z","created_by":1,"updated_at":"2013-03-13T04:02:24.000Z","updated_by":1,"published_at":"2012-12-20T13:31:30.000Z","published_by":1},{"id":5,"uuid":"908c5d6c-3d06-4167-b54a-70bb760b3447","title":"Hot Tail","slug":"hot-tail","markdown":"\nHot Tail is a fun little â€œforward runnerâ€. Harold is an Ibex. Escaping moments before being sacrificed to a massive fire demon, his tail alight from the close call, he know runs for his life.\n\nThe player must dodge rocks, piles of skulls and other paraphenalia while avoiding the fireballs of the demon chasing them. A â€œforward runnerâ€ is a term I made up, it simply means the player character is running towards the camera. The screen shots and game play video below make it clearer.\n\n[![GameHotTail](http://res.cloudinary.com/adamsingle/image/upload/v1443437744/GameHotTail_fh4ap4.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437744/GameHotTail_fh4ap4.jpg)\n\nHot Tail was the first game I made â€œprofessionallyâ€ and it was actually started while I was still a student. I began an internship with Valhalla Studios (now Bifrost Studios) as a part of my degree. They had an idea for a mobile game and needed a coder.\n\nSo, with no experience making applications for mobile, no experience using a mac and no other coder on the team to assist me, I threw myself into figuring out how to make this game. The artists had already started making assets with no guidelines other than some loose, self imposed limits (which were wrong). I hadnâ€™t even left college yet and I was already facing one of the biggest challenges Iâ€™ve come up against yet.\n\nItâ€™s not the most polished game on the market. The art style went through a number of hands and a number of changes due to technical limitations we discovered as we went. It was my first attempt at using Unity, and my first time as a member of the â€œdesignâ€ team. The amount Iâ€™ve learnt since this project still surprises me. I could confidently recreate this game in a few weeks, much more polished and much more fun. In fact I still maintain the idea is a solid one. nearly three years on and I still havenâ€™t seen another forward runner on the store.\n\nÂ \n\n[nggallery id=7]\n\nÂ \n\n[![Available_on_the_App_Store_Badge_US-UK_135x40](http://res.cloudinary.com/adamsingle/image/upload/v1443438241/Available_on_the_App_Store_Badge_US-UK_135x40_jaoqy6.png)](https://itunes.apple.com/au/app/hot-tail/id435044599?mt=8&uo=4)\n\n[![GetItOnGooglePlayBadgeLarger](http://res.cloudinary.com/adamsingle/image/upload/v1443438242/GetItOnGooglePlayBadgeLarger1_hr7yh2.png)](https://play.google.com/store/apps/details?id=com.BifrostStudios.HotTail&hl=en)\n\nOfficial Game Trailer:\n\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"480\" src=\"https://www.youtube.com/embed/axXV--yHtwE?feature=oembed\" width=\"640\"></iframe>\n\nÂ \n\nÂ \n\nÂ \n\nÂ \n\n\n","html":"<p>Hot Tail is a fun little â€œforward runnerâ€. Harold is an Ibex. Escaping moments before being sacrificed to a massive fire demon, his tail alight from the close call, he know runs for his life.</p>\n\n<p>The player must dodge rocks, piles of skulls and other paraphenalia while avoiding the fireballs of the demon chasing them. A â€œforward runnerâ€ is a term I made up, it simply means the player character is running towards the camera. The screen shots and game play video below make it clearer.</p>\n\n<p><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437744/GameHotTail_fh4ap4.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437744/GameHotTail_fh4ap4.jpg\" alt=\"GameHotTail\" title=\"\" /></a></p>\n\n<p>Hot Tail was the first game I made â€œprofessionallyâ€ and it was actually started while I was still a student. I began an internship with Valhalla Studios (now Bifrost Studios) as a part of my degree. They had an idea for a mobile game and needed a coder.</p>\n\n<p>So, with no experience making applications for mobile, no experience using a mac and no other coder on the team to assist me, I threw myself into figuring out how to make this game. The artists had already started making assets with no guidelines other than some loose, self imposed limits (which were wrong). I hadnâ€™t even left college yet and I was already facing one of the biggest challenges Iâ€™ve come up against yet.</p>\n\n<p>Itâ€™s not the most polished game on the market. The art style went through a number of hands and a number of changes due to technical limitations we discovered as we went. It was my first attempt at using Unity, and my first time as a member of the â€œdesignâ€ team. The amount Iâ€™ve learnt since this project still surprises me. I could confidently recreate this game in a few weeks, much more polished and much more fun. In fact I still maintain the idea is a solid one. nearly three years on and I still havenâ€™t seen another forward runner on the store.</p>\n\n<p>[nggallery id=7]</p>\n\n<p><a href=\"https://itunes.apple.com/au/app/hot-tail/id435044599?mt=8&amp;uo=4\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443438241/Available_on_the_App_Store_Badge_US-UK_135x40_jaoqy6.png\" alt=\"Available<em>on</em>the<em>App</em>Store<em>Badge</em>US-UK_135x40\" title=\"\" /></a></p>\n\n<p><a href=\"https://play.google.com/store/apps/details?id=com.BifrostStudios.HotTail&amp;hl=en\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443438242/GetItOnGooglePlayBadgeLarger1_hr7yh2.png\" alt=\"GetItOnGooglePlayBadgeLarger\" title=\"\" /></a></p>\n\n<p>Official Game Trailer:</p>\n\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"480\" src=\"https://www.youtube.com/embed/axXV--yHtwE?feature=oembed\" width=\"640\"></iframe>","image":"http://res.cloudinary.com/adamsingle/image/upload/v1443437745/BannerHotTail1_yijpb8.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2012-12-21T20:31:42.000Z","created_by":1,"updated_at":"2015-09-28T21:04:03.000Z","updated_by":1,"published_at":"2012-12-21T20:31:42.000Z","published_by":1},{"id":6,"uuid":"5ca1fd72-82a1-4e13-a371-0d5890d63964","title":"Zombie Juice","slug":"zombie-juice","markdown":"\nZombie Juice is a fast paced, zombie slasher. The first of itâ€™s kind on the app stores. When we set out to make Zombie Juice, Zombie games were in full swing. The iOS App Store had a Zombie category on itâ€™s front page. But in none of them could you directly touch the zombies. We wanted to bring all the visceral action of a zombie movie to your phone. And so we have Zombie Juice.\n\nUse your finger as a machete and protect your home. With enough kills you gain the option of other weapons such as exploding garden gnomes, a bb gun and the zombie classic; the lawn mower. But youâ€™ll need to switch weapons fast to keep them all at bay.\n\n[![BannerZombieJuice01Small](http://res.cloudinary.com/adamsingle/image/upload/v1443437743/BannerZombieJuice01Small_abs6kt.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437743/BannerZombieJuice01Small_abs6kt.jpg)\n\nAfter Hot Tail, our team changed, our company name changed, and we were ready to get to work on something uniquely us. An excellent artist we had with us, Zanda Mylonas, was what I call a â€œhardcore casualâ€ gamer. He consumed massive amounts of casual, â€˜arcadeyâ€™, action mobile games at an incredible rate. So when we sat down to come up with our next game, he presented us with Zombie Juice.\n\nI worked very closely with Zanda on every aspect of this game, Menu, AI, gameplay, weapons, art style. It really ignited a passion for game design I didnâ€™t know I had. Of all the games Iâ€™ve made so far, this is still the one Iâ€™m most proud of. I still play it, itâ€™s a really fun game. Iâ€™d love to do a spiritual successor one day.\n\nÂ \n\n[![Available_on_the_App_Store_Badge_US-UK_135x40](http://res.cloudinary.com/adamsingle/image/upload/v1443438241/Available_on_the_App_Store_Badge_US-UK_135x40_jaoqy6.png)](https://itunes.apple.com/au/app/zombie-juice/id446278865?mt=8&uo=4\" target=\"itunes_store\" \"Zombie Juice on iTunes\")\n\n[![GetItOnGooglePlayBadgeLarger](http://res.cloudinary.com/adamsingle/image/upload/v1443438242/GetItOnGooglePlayBadgeLarger1_hr7yh2.png)](https://play.google.com/store/apps/details?id=com.ValhallaStudiosBifrost.ZombieJuice \"Zombie Juice on Google Play\")\n\nOfficial Game Trailer:\n\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/wmT5eaeO5As?feature=oembed\" width=\"640\"></iframe>  \n Â \n\n\n","html":"<p>Zombie Juice is a fast paced, zombie slasher. The first of itâ€™s kind on the app stores. When we set out to make Zombie Juice, Zombie games were in full swing. The iOS App Store had a Zombie category on itâ€™s front page. But in none of them could you directly touch the zombies. We wanted to bring all the visceral action of a zombie movie to your phone. And so we have Zombie Juice.</p>\n\n<p>Use your finger as a machete and protect your home. With enough kills you gain the option of other weapons such as exploding garden gnomes, a bb gun and the zombie classic; the lawn mower. But youâ€™ll need to switch weapons fast to keep them all at bay.</p>\n\n<p><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437743/BannerZombieJuice01Small_abs6kt.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437743/BannerZombieJuice01Small_abs6kt.jpg\" alt=\"BannerZombieJuice01Small\" title=\"\" /></a></p>\n\n<p>After Hot Tail, our team changed, our company name changed, and we were ready to get to work on something uniquely us. An excellent artist we had with us, Zanda Mylonas, was what I call a â€œhardcore casualâ€ gamer. He consumed massive amounts of casual, â€˜arcadeyâ€™, action mobile games at an incredible rate. So when we sat down to come up with our next game, he presented us with Zombie Juice.</p>\n\n<p>I worked very closely with Zanda on every aspect of this game, Menu, AI, gameplay, weapons, art style. It really ignited a passion for game design I didnâ€™t know I had. Of all the games Iâ€™ve made so far, this is still the one Iâ€™m most proud of. I still play it, itâ€™s a really fun game. Iâ€™d love to do a spiritual successor one day.</p>\n\n<p><a href=\"https://itunes.apple.com/au/app/zombie-juice/id446278865?mt=8&amp;uo=4\" title=\" target=&quot;itunes_store&quot; &quot;Zombie Juice on iTunes\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443438241/Available_on_the_App_Store_Badge_US-UK_135x40_jaoqy6.png\" alt=\"Available<em>on</em>the<em>App</em>Store<em>Badge</em>US-UK_135x40\" title=\"\" /></a></p>\n\n<p><a href=\"https://play.google.com/store/apps/details?id=com.ValhallaStudiosBifrost.ZombieJuice\" title=\"Zombie Juice on Google Play\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443438242/GetItOnGooglePlayBadgeLarger1_hr7yh2.png\" alt=\"GetItOnGooglePlayBadgeLarger\" title=\"\" /></a></p>\n\n<p>Official Game Trailer:</p>\n\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/wmT5eaeO5As?feature=oembed\" width=\"640\"></iframe>  ","image":"http://res.cloudinary.com/adamsingle/image/upload/v1443437751/BannerZombieJuice03_kyabuk.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2012-12-21T20:44:40.000Z","created_by":1,"updated_at":"2015-09-28T21:04:03.000Z","updated_by":1,"published_at":"2012-12-21T20:44:40.000Z","published_by":1},{"id":7,"uuid":"fca44e8f-6564-4243-a476-2bbac0ab2af8","title":"Resources","slug":"resources","markdown":"\nHere youâ€™ll find a collection of links to resources that I have found useful or interesting as a game developer, programmer or indie (or any combination of those things).\n\n#### Developer:\n\n[IndieBits](http://www.Indiebits.com \"IndieBits\") â€“ A fantastic site from Epona Schweer, a talented young woman dedicated to discovering, experimenting and sharing insight and advice specifically for Creatives who want to make a living doing what they love.\n\n[#AltDevBlogADay](http://www.altdevblogaday.com/ \"AltDevBlogADay\") â€“ A site that hosts guest blog posts from a large array of talented industry professionals on all areas of game/software development. Also the linked to #AltDevConf a professional quality developers conference that happens entirely online, very handy for those of us that live on the wrong side of the planet for most conferences.\n\n[News for Interactive Developers](http://www.scoop.it/t/news-for-the-interactive-developer-scene) â€“ A nice collection of blog posts and articles of interest to game developers all in one place.\n\n[Amit Patel](http://www-cs-students.stanford.edu/~amitp/) â€“ a massive, massive resource. An oldschool feeling website with page after page on all things game development, including various programming and AI topics.\n\n[The Ultimate Complete Final Social Media Cheat Sheet](http://www.lunametrics.com/blog/2012/11/12/final-social-media-sizing-cheat-sheet/) â€“ Current as of the end of 2012, this page shows the pixel dimensions and character limit of every postable/editable thing on Facebook, Twitter, Google+, YouTube, LinkedIn and Pinterest. Very handy resource.\n\n[Indie Pitch Deck](http://www.bubbleguminteractive.com/news/pitch-deck-for-indie-games-developers/) â€“ This is a template for creating a quality game pitch. It was put together by Bubblegum Interactive, and Iâ€™d encourage you to explore the rest of their blog also.\n\n[Ramblings in Valve Time](http://blogs.valvesoftware.com/abrash/) â€“ The blog of Michael Abrash. If youâ€™re a programmer and donâ€™t know who Michael Abrash is, you should look him up. A great blog discussing some of the things Valve are up to. Itâ€™s always worth knowing what Valve are up to.\n\n#### Game Design:\n\n[Game Tycoon](http://www.edery.org/) â€“ The blog of David Edery, CEO of SpryFox.\n\nLost Garden â€“ The blog of Daniel Cook, CCO of SpryFox. A prolific blog on all things game design. Many, many treasures to be found in here.\n\n[Blocky Pixel Studios](http://www.blockypixel.com/) â€“ The official blog of Blocky Pixel Studios. This blog has a fantastic tendency to analyse existing games, or specific aspects of existing games, discussing why they worked or didnâ€™t.\n\n[Principles of Virtual Sensation](http://www.steveswink.com/principles-of-virtual-sensation/) â€“ A great post discussing player response to virtual sensations and how to create them to best effect. I highly recommend checking out the rest of Steveâ€™s page, including Tune: A game about game design.\n\nÂ \n\n#### Tutorials:\n\n[3DBuzz](http://www.3dbuzz.com/) â€“ A very cool site full of free tutorials for many different pieces of software including Unity3D.\n\n[GameDevTutes+](http://gamedev.tutsplus.com/) â€“ A phenomenal site that pulls together tutorials on so many different and specific topics on game dev. I have never opened that page and not been sucked into the tutorials.\n\n[AIGameDev](http://aigamedev.com/) â€“ This one is a mixed bag. Itâ€™s not all tutorials, some of it is articles. They do a lot of live casts with some very talented AI programmers, but unfortunately these are very early in the morning in Australia and hard to catch. There is also a lot more content behind a paywall that as an indie I just canâ€™t afford. No matter how badly I want to.\n\n[Ray Wenderlich](http://www.raywenderlich.com/) â€“ A scary number of tutorials on many varying dev topics, including multiple engines and languages.\n\nÂ \n\n#### Extras:\n\n[Game Launched](http://gamelaunched.com/) â€“ A fantastic new crowd source service specifically for games. Itâ€™s completely international, has a marketplace for selling funded games and has put together a Launch Team that consists of gaming experts, writers and personalities that you gain access to for advice and guidance.\n\n[Worms World Saga](http://www.wormworldsaga.com/) â€“ Purely an inspiration thing. This is an amazingly beautiful web comic with an innovative approach to itâ€™s layout. Canâ€™t help but feel inspired to create something beautiful after seeing this.\n\n\n","html":"<p>Here youâ€™ll find a collection of links to resources that I have found useful or interesting as a game developer, programmer or indie (or any combination of those things).</p>\n\n<h4 id=\"developer\">Developer:</h4>\n\n<p><a href=\"http://www.Indiebits.com\" title=\"IndieBits\">IndieBits</a> â€“ A fantastic site from Epona Schweer, a talented young woman dedicated to discovering, experimenting and sharing insight and advice specifically for Creatives who want to make a living doing what they love.</p>\n\n<p><a href=\"http://www.altdevblogaday.com/\" title=\"AltDevBlogADay\">#AltDevBlogADay</a> â€“ A site that hosts guest blog posts from a large array of talented industry professionals on all areas of game/software development. Also the linked to #AltDevConf a professional quality developers conference that happens entirely online, very handy for those of us that live on the wrong side of the planet for most conferences.</p>\n\n<p><a href=\"http://www.scoop.it/t/news-for-the-interactive-developer-scene\">News for Interactive Developers</a> â€“ A nice collection of blog posts and articles of interest to game developers all in one place.</p>\n\n<p><a href=\"http://www-cs-students.stanford.edu/~amitp/\">Amit Patel</a> â€“ a massive, massive resource. An oldschool feeling website with page after page on all things game development, including various programming and AI topics.</p>\n\n<p><a href=\"http://www.lunametrics.com/blog/2012/11/12/final-social-media-sizing-cheat-sheet/\">The Ultimate Complete Final Social Media Cheat Sheet</a> â€“ Current as of the end of 2012, this page shows the pixel dimensions and character limit of every postable/editable thing on Facebook, Twitter, Google+, YouTube, LinkedIn and Pinterest. Very handy resource.</p>\n\n<p><a href=\"http://www.bubbleguminteractive.com/news/pitch-deck-for-indie-games-developers/\">Indie Pitch Deck</a> â€“ This is a template for creating a quality game pitch. It was put together by Bubblegum Interactive, and Iâ€™d encourage you to explore the rest of their blog also.</p>\n\n<p><a href=\"http://blogs.valvesoftware.com/abrash/\">Ramblings in Valve Time</a> â€“ The blog of Michael Abrash. If youâ€™re a programmer and donâ€™t know who Michael Abrash is, you should look him up. A great blog discussing some of the things Valve are up to. Itâ€™s always worth knowing what Valve are up to.</p>\n\n<h4 id=\"gamedesign\">Game Design:</h4>\n\n<p><a href=\"http://www.edery.org/\">Game Tycoon</a> â€“ The blog of David Edery, CEO of SpryFox.</p>\n\n<p>Lost Garden â€“ The blog of Daniel Cook, CCO of SpryFox. A prolific blog on all things game design. Many, many treasures to be found in here.</p>\n\n<p><a href=\"http://www.blockypixel.com/\">Blocky Pixel Studios</a> â€“ The official blog of Blocky Pixel Studios. This blog has a fantastic tendency to analyse existing games, or specific aspects of existing games, discussing why they worked or didnâ€™t.</p>\n\n<p><a href=\"http://www.steveswink.com/principles-of-virtual-sensation/\">Principles of Virtual Sensation</a> â€“ A great post discussing player response to virtual sensations and how to create them to best effect. I highly recommend checking out the rest of Steveâ€™s page, including Tune: A game about game design.</p>\n\n<h4 id=\"tutorials\">Tutorials:</h4>\n\n<p><a href=\"http://www.3dbuzz.com/\">3DBuzz</a> â€“ A very cool site full of free tutorials for many different pieces of software including Unity3D.</p>\n\n<p><a href=\"http://gamedev.tutsplus.com/\">GameDevTutes+</a> â€“ A phenomenal site that pulls together tutorials on so many different and specific topics on game dev. I have never opened that page and not been sucked into the tutorials.</p>\n\n<p><a href=\"http://aigamedev.com/\">AIGameDev</a> â€“ This one is a mixed bag. Itâ€™s not all tutorials, some of it is articles. They do a lot of live casts with some very talented AI programmers, but unfortunately these are very early in the morning in Australia and hard to catch. There is also a lot more content behind a paywall that as an indie I just canâ€™t afford. No matter how badly I want to.</p>\n\n<p><a href=\"http://www.raywenderlich.com/\">Ray Wenderlich</a> â€“ A scary number of tutorials on many varying dev topics, including multiple engines and languages.</p>\n\n<h4 id=\"extras\">Extras:</h4>\n\n<p><a href=\"http://gamelaunched.com/\">Game Launched</a> â€“ A fantastic new crowd source service specifically for games. Itâ€™s completely international, has a marketplace for selling funded games and has put together a Launch Team that consists of gaming experts, writers and personalities that you gain access to for advice and guidance.</p>\n\n<p><a href=\"http://www.wormworldsaga.com/\">Worms World Saga</a> â€“ Purely an inspiration thing. This is an amazingly beautiful web comic with an innovative approach to itâ€™s layout. Canâ€™t help but feel inspired to create something beautiful after seeing this.</p>","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-01-04T11:29:02.000Z","created_by":1,"updated_at":"2013-05-11T22:43:19.000Z","updated_by":1,"published_at":"2013-01-04T11:29:02.000Z","published_by":1},{"id":8,"uuid":"897473da-dfb4-447d-99fd-74014845c205","title":"Resume","slug":"resume","markdown":"\n### [Resume â€“ Downloadable Version](http://adamsingle.com/wp-content/uploads/2013/01/Adam-Single-Resume.doc)\n\n[tabgroup]  \n [tab title=â€Skill Summaryâ€]\n\nâ€“ Fluent in C# programming\n\nâ€“ Qualified in C++\n\nâ€“ Over two years experience with Unity 3D\n\nâ€“ Experience publishing games on iOS/Android\n\nâ€“ Delivery of products to tight deadlines\n\nâ€“ Flexibility to manage competing priorities\n\nâ€“ Developing and maintaining stakeholder and business relations/networking\n\nâ€“ Staff management â€“ including recruiting, training and rostering\n\nâ€“ Staff supervision\n\nâ€“ Project Management\n\nâ€“ Conflict resolution and complaint management\n\nâ€“ Research and evaluation\n\nâ€“ Managing workflow and outputs of teams\n\nâ€“ Strategic planning\n\n[/tab]\n\n[tab title=â€Career Objectiveâ€]\n\nI am seeking a role where I have the opportunity to fully utilise and continually improve my programming skills, while expanding my design experience. My ideal role would combine my passion for AI programming and game design, to create truly unique and engaging game play experiences. I am pursuing a role that will challenge me, build on and enhance my skills, capabilities and experience and enable me to facilitate effective outcomes for the company.\n\n[/tab]  \n [tab title=â€Achievementsâ€]\n\nâ€“ Managed a small team and took the lead programmer role in shipping three titles (*Hot Tail*, *Zombie Juice* and *Photon*) to the App Store and Google Play as part of Bifrost Studios.\n\nâ€“ Was a key member of the development team for the highly successful game *Photon*, which has had over 600 000 downloads and was featured by Google Play.\n\nâ€“ Given the position of sole programmer on mobile titles with Valhalla Studios (later Bifrost Studios) after completing an internship as part of my Bachelor of Interactive Entertainment.\n\nâ€“ Received a letter of congratulations from QANTM college in my first trimester for achieving a GPA of 6.5\n\nâ€“ Worked as a part of a team to develop a number of small coding projects including a Squad AI demonstration, and a level editor for the final project in my Interactive Entertainment Degree.\n\nâ€“ Coded as part of a team on the final project for my Interactive Entertainment Degree. I was responsible for some of the visual effects and artificial intelligence.\n\n[/tab]\n\n[tab title= â€œProfessional Experienceâ€]\n\n**Development Manager, Bifrost Studios** â€“ November 2010 â€“ Present\n\nAs development manager at Bifrost Studios, I am responsible for managing multiple staff, projects and priorities to ensure all projects are running to deadline. Part of this role includes ensuring I am up-to-date with the status and issues with all projects under development. I work as part of a small management team to articulate and maintain project timelines, as well as partake in design discussions and company meetings on current and future projects. It is also my responsibility to address any staffing issues as they arise.\n\nI am also the lead programmer at the Brisbane studio, which means I am largely responsible for the coding for the studios mobile games. In this role, I have gained significant experience in using C# and the Unity 3D game engine.\n\n***Main responsibilities:***\n\n- Program mobile games using C# and Unity3D\n- Represent the company at functions, seminars and conferences\n- Manage competing priorities in managing tight deadlines\n- Manage staff\n- Act in a decision-making role in design meetings\n- Participate in company meetings\n- Establish project timelines\n- Maintain communication between members of the development team\n- Act as a conduit between the development team and management\n- Conflict resolution\n\n[/tab]\n\n[tab title= â€œEducation and Trainingâ€]\n\n2010: Completing Bachelor of Interactive Entertainment (Games Programming) at Qantm College, Brisbane.\n\n2000â€“2002: Completed a number of subjects as part of a Bachelor of Information Technology and Bachelor of Microelectronic Engineering, including:\n\n- Introduction to computer systems and networks\n- Introduction to information system development\n- Technical communication\n- Programming 1 (Java)\n- Digital networks and systems\n- Introduction to electronics\n- Electric circuits\n\n[/tab]  \n [/tabgroup]\n\n### [Â ](http://adamsingle.com/wp-content/uploads/2013/01/Adam-Single-Resume.doc)\n\n\n","html":"<h3 id=\"resumedownloadableversionhttpadamsinglecomwpcontentuploads201301adamsingleresumedoc\"><a href=\"http://adamsingle.com/wp-content/uploads/2013/01/Adam-Single-Resume.doc\">Resume â€“ Downloadable Version</a></h3>\n\n<p>[tabgroup] <br />\n [tab title=â€Skill Summaryâ€]</p>\n\n<p>â€“ Fluent in C# programming</p>\n\n<p>â€“ Qualified in C++</p>\n\n<p>â€“ Over two years experience with Unity 3D</p>\n\n<p>â€“ Experience publishing games on iOS/Android</p>\n\n<p>â€“ Delivery of products to tight deadlines</p>\n\n<p>â€“ Flexibility to manage competing priorities</p>\n\n<p>â€“ Developing and maintaining stakeholder and business relations/networking</p>\n\n<p>â€“ Staff management â€“ including recruiting, training and rostering</p>\n\n<p>â€“ Staff supervision</p>\n\n<p>â€“ Project Management</p>\n\n<p>â€“ Conflict resolution and complaint management</p>\n\n<p>â€“ Research and evaluation</p>\n\n<p>â€“ Managing workflow and outputs of teams</p>\n\n<p>â€“ Strategic planning</p>\n\n<p>[/tab]</p>\n\n<p>[tab title=â€Career Objectiveâ€]</p>\n\n<p>I am seeking a role where I have the opportunity to fully utilise and continually improve my programming skills, while expanding my design experience. My ideal role would combine my passion for AI programming and game design, to create truly unique and engaging game play experiences. I am pursuing a role that will challenge me, build on and enhance my skills, capabilities and experience and enable me to facilitate effective outcomes for the company.</p>\n\n<p>[/tab] <br />\n [tab title=â€Achievementsâ€]</p>\n\n<p>â€“ Managed a small team and took the lead programmer role in shipping three titles (<em>Hot Tail</em>, <em>Zombie Juice</em> and <em>Photon</em>) to the App Store and Google Play as part of Bifrost Studios.</p>\n\n<p>â€“ Was a key member of the development team for the highly successful game <em>Photon</em>, which has had over 600 000 downloads and was featured by Google Play.</p>\n\n<p>â€“ Given the position of sole programmer on mobile titles with Valhalla Studios (later Bifrost Studios) after completing an internship as part of my Bachelor of Interactive Entertainment.</p>\n\n<p>â€“ Received a letter of congratulations from QANTM college in my first trimester for achieving a GPA of 6.5</p>\n\n<p>â€“ Worked as a part of a team to develop a number of small coding projects including a Squad AI demonstration, and a level editor for the final project in my Interactive Entertainment Degree.</p>\n\n<p>â€“ Coded as part of a team on the final project for my Interactive Entertainment Degree. I was responsible for some of the visual effects and artificial intelligence.</p>\n\n<p>[/tab]</p>\n\n<p>[tab title= â€œProfessional Experienceâ€]</p>\n\n<p><strong>Development Manager, Bifrost Studios</strong> â€“ November 2010 â€“ Present</p>\n\n<p>As development manager at Bifrost Studios, I am responsible for managing multiple staff, projects and priorities to ensure all projects are running to deadline. Part of this role includes ensuring I am up-to-date with the status and issues with all projects under development. I work as part of a small management team to articulate and maintain project timelines, as well as partake in design discussions and company meetings on current and future projects. It is also my responsibility to address any staffing issues as they arise.</p>\n\n<p>I am also the lead programmer at the Brisbane studio, which means I am largely responsible for the coding for the studios mobile games. In this role, I have gained significant experience in using C# and the Unity 3D game engine.</p>\n\n<p><strong><em>Main responsibilities:</em></strong></p>\n\n<ul>\n<li>Program mobile games using C# and Unity3D</li>\n<li>Represent the company at functions, seminars and conferences</li>\n<li>Manage competing priorities in managing tight deadlines</li>\n<li>Manage staff</li>\n<li>Act in a decision-making role in design meetings</li>\n<li>Participate in company meetings</li>\n<li>Establish project timelines</li>\n<li>Maintain communication between members of the development team</li>\n<li>Act as a conduit between the development team and management</li>\n<li>Conflict resolution</li>\n</ul>\n\n<p>[/tab]</p>\n\n<p>[tab title= â€œEducation and Trainingâ€]</p>\n\n<p>2010: Completing Bachelor of Interactive Entertainment (Games Programming) at Qantm College, Brisbane.</p>\n\n<p>2000â€“2002: Completed a number of subjects as part of a Bachelor of Information Technology and Bachelor of Microelectronic Engineering, including:</p>\n\n<ul>\n<li>Introduction to computer systems and networks</li>\n<li>Introduction to information system development</li>\n<li>Technical communication</li>\n<li>Programming 1 (Java)</li>\n<li>Digital networks and systems</li>\n<li>Introduction to electronics</li>\n<li>Electric circuits</li>\n</ul>\n\n<p>[/tab] <br />\n [/tabgroup]</p>\n\n<h3 id=\"httpadamsinglecomwpcontentuploads201301adamsingleresumedoc\"><a href=\"http://adamsingle.com/wp-content/uploads/2013/01/Adam-Single-Resume.doc\">Â </a></h3>","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-01-04T13:08:45.000Z","created_by":1,"updated_at":"2013-01-22T18:41:49.000Z","updated_by":1,"published_at":"2013-01-04T13:08:45.000Z","published_by":1},{"id":9,"uuid":"3455c40e-4f35-4631-9c59-0aeb1db116ed","title":"Photon","slug":"photon","markdown":"\nPhoton is a connect 3 game unlike the others on the app stores. Not tiles, gems or grids here. In photon you must connect coloured discs. These discs bounce and roll of each other creating a chaotic tension. Clear the discs before the screen fills up. In classic mode you keep playing till you canâ€™t last any longer, while Arcade mode gives you 90 seconds and a fusion meter to achieve maximum points.\n\nEasily the most successful game Iâ€™ve worked on, Photon is a deceptively simple puzzle game in the â€˜match 3â€™ style.Â Photon was featured on Google Play and has had more than 600 000 downloads. Originally written by a single intern programmer and a single intern artist (and managed by Zanda Mylonas), I acted as mentor, and came through later in production cycle to update and bug fix. Towards the end of my time at Bifrost Studios I got about 80% through a serious update for Photon. In fact, so serious, itâ€™d probably be a sequel. Whether or not that ever sees release is up to the Bifrost Team now, but I hope so. Really neatened up the experience, opened up the gameplay and made some big improvements to performance.\n\nÂ \n\n[![Available_on_the_App_Store_Badge_US-UK_135x40](http://res.cloudinary.com/adamsingle/image/upload/v1443438241/Available_on_the_App_Store_Badge_US-UK_135x40_jaoqy6.png)](https://itunes.apple.com/au/app/photon/id491810249?mt=8&uo=4\" target=\"itunes_store\" \"Photon on itunes\")\n\n![GetItOnGooglePlayBadgeLarger](http://res.cloudinary.com/adamsingle/image/upload/v1443438242/GetItOnGooglePlayBadgeLarger1_hr7yh2.png)\n\nÂ \n\nThe official game trailer:\n\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/sDJe64pUl8M?feature=oembed\" width=\"640\"></iframe>  \n And below is a video of one of the designers at Bifrost, Denis, whoâ€™s colourblind, playing Photon before we added the colourblind mode:\n\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/5TAAPwp033w?feature=oembed\" width=\"640\"></iframe>\n\nÂ \n\n\n","html":"<p>Photon is a connect 3 game unlike the others on the app stores. Not tiles, gems or grids here. In photon you must connect coloured discs. These discs bounce and roll of each other creating a chaotic tension. Clear the discs before the screen fills up. In classic mode you keep playing till you canâ€™t last any longer, while Arcade mode gives you 90 seconds and a fusion meter to achieve maximum points.</p>\n\n<p>Easily the most successful game Iâ€™ve worked on, Photon is a deceptively simple puzzle game in the â€˜match 3â€™ style.Â Photon was featured on Google Play and has had more than 600 000 downloads. Originally written by a single intern programmer and a single intern artist (and managed by Zanda Mylonas), I acted as mentor, and came through later in production cycle to update and bug fix. Towards the end of my time at Bifrost Studios I got about 80% through a serious update for Photon. In fact, so serious, itâ€™d probably be a sequel. Whether or not that ever sees release is up to the Bifrost Team now, but I hope so. Really neatened up the experience, opened up the gameplay and made some big improvements to performance.</p>\n\n<p><a href=\"https://itunes.apple.com/au/app/photon/id491810249?mt=8&amp;uo=4\" title=\" target=&quot;itunes_store&quot; &quot;Photon on itunes\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443438241/Available_on_the_App_Store_Badge_US-UK_135x40_jaoqy6.png\" alt=\"Available<em>on</em>the<em>App</em>Store<em>Badge</em>US-UK_135x40\" title=\"\" /></a></p>\n\n<p><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443438242/GetItOnGooglePlayBadgeLarger1_hr7yh2.png\" alt=\"GetItOnGooglePlayBadgeLarger\" /></p>\n\n<p>The official game trailer:</p>\n\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/sDJe64pUl8M?feature=oembed\" width=\"640\"></iframe>  \n\n<p>And below is a video of one of the designers at Bifrost, Denis, whoâ€™s colourblind, playing Photon before we added the colourblind mode:</p>\n\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/5TAAPwp033w?feature=oembed\" width=\"640\"></iframe>","image":"http://res.cloudinary.com/adamsingle/image/upload/v1443437893/BannerPhotonFinal_x3da4i.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-01-04T14:03:09.000Z","created_by":1,"updated_at":"2015-09-28T21:04:03.000Z","updated_by":1,"published_at":"2013-01-04T14:03:09.000Z","published_by":1},{"id":10,"uuid":"33c394ac-d4a3-4fea-8233-f330e29204fd","title":"#OneGameAMonth - Update 1","slug":"onegameamonth-update-1","markdown":"\nTime to discuss my plans for the One Game A Month challenge. Today is January 1st and the competition is officially under way. After this post, at some stage today, I will write another with more specfic details on my goals for the first game. For this post, I want to discuss what I want to achieve, some of the cool things that will hopefully come out of this, and some of the rules and goals of the competition. The spirit of the comp.\n\nFirstly, lets discuss some of the rules. Basically, there arenâ€™t many. The idea is to publish a game every month for a year. That does not mean make a game in a month. For instance, I intend my first two games to be quite small, and fingers crossed, take a lot less than the allocated month. This will give me time to start working on some of the larger games I have planned for later in the year. The spirit of this challenge is to finish games, not start them. So the plan is to finish a game every month. Simple as that.\n\nNow these games donâ€™t need to be completely original. I donâ€™t intend to make any money off these games, so I donâ€™t need to worry about copyright or infringement. Each of these games is an exercise and learning experience. Some of them will be mechanics pulled form other games, some will be bare bones and under-featured.\n\nThatâ€™s about it for rules I believe.\n\nNext, letâ€™s list my game ideas. These are in no particular order and definitely arenâ€™t the order they will be made in. They also definitely arenâ€™t final. Some of these may well be dropped for others.\n\n#1 Herding game based on flocking behaviour\n\nreasons:\n\nâ€“ A chance to write some AI again.\n\nâ€“ Should be quick and easy to write.\n\nâ€“ Gives me time to test and setup various publishing channels. Accounts have been set up for IndieDB, Kongregate and Newgrounds, so Iâ€™ll need time to figure out how to get a game on each of those.\n\n#2 Turn based fighter (think turn based Street Fighter)\n\nreasons:\n\nâ€“ This is the game that I used to write over and over again as a kid. They were text based, and intended to be RPGâ€™s eventually, but I never got past the fighting. If I can find an engine that is easy to learn and good for text based games, Iâ€™ll use that, but Iâ€™m keen to try writing one of these again.\n\n#3 Endless platformer\n\nreasons:\n\nâ€“ I want to have a go at writing procedurally generated platformer levels and I want to finally nail 2D platformer movement. Iâ€™ll be using the Principals of Virtual Sensation to define, test and iterate my attempts.\n\n#4 Hex Battle (Think the combat from Heroes of Might and Magic 3)\n\nreasons:\n\nâ€“ This is for a couple of reasons. I love turn based strategy games and this one can be done very simply to start with, just one â€œarmyâ€ with a few units available for different points. Allow players to build armies of equal point value to allow for player strategies and variation. Many, many options for expansion in the future if itâ€™s fun enough.\n\nâ€“ The second main reason is I want to test out the tile map solution I bough on the big asset store sale. It handles hex and is supposed to be very fast to set up. We shall see.\n\n#5 Tower Defence\n\nreasons:\n\nâ€“ Ok, Iâ€™ve never made a tower defence, so it might be fun to make, but Iâ€™m not convinced Iâ€™m going to do it. The main goal here is to use Unityâ€™s built in nav mesh generation and see just how easy it is to set up and use. But if I can think of a more interesting game that would use it, I will.\n\n#6 Rhythm game (based on patapon)\n\nreasons:\n\nâ€“ I love patapon, though I havenâ€™t played it as much as Iâ€™d like. Iâ€™ll be borrowing it from a friend shortly to get some play time on it and analyse exactly how it handles itâ€™s mechanic so I can have a go at replicating it. Basically you are given simple, small combos of buttons to press. I think they are in threes at the start. One is for movement, one is for attacking. You have a couple of stylised tribesman and you must maintain a rhythm of repeating the movement combo to march at a steady pace. When you are in range, you must switch to the attack pattern to attack wild animals for food. If they run, you must switch back to movement to catch up, and then back to attack on the right beat before you lose the animal. Itâ€™s a great dynamic, fun, but hard to master. Iâ€™m yet to see it in any other games (though that doesnâ€™t mean a lot, I donâ€™t see a lot of games) so I want to have a go at applying it somehow. Iâ€™m not sure how my game will manifest exactly, but Iâ€™ll post about it when I do.\n\n#7 Shadowrun Matrix\n\nreasons:\n\n-Iâ€™ve always wanted to play this. It was my fave part of the Shadowrun pen and paper roleplaying game. No doubt it will be in the new Shadowrun game that recently was funded on Kickstarter, but it hasnâ€™t existed as a proper port from the tabletop game before now as far as I know. If you donâ€™t know how the Matrix (they called it that long before the movie despite the parallels) and hacking works in Shadowrun, you could look it up, or keep an eye out for my post on this game in the coming months. Iâ€™ll probably do this game early on as it should be a fairly simple one to make.\n\n# 8 Sea Battles\n\nreasons:\n\nâ€“ Another turn based game. This one mainly based around movement and steering, like the flocking game. A simple pirates ship battles, with cannons and what not. Itâ€™ll be multiplayer to begin with to avoid writing AI for it, but if I have time I would very much like to have a go at this type of AI. Iâ€™ve never written it before.\n\n# 9 Japanese Garden\n\nreasons:\n\nâ€“ This one will be a point and click. My first, despite having wanted to write one for years. This one was inspired by a recent discussion with my brother. He put me onto some Japanese aesthetic concepts. One of which was Yugen. Yugen refers to the deeper mysteries of life and existance that are felt, if not understood, when certain scenes are witnessed. An example might be watching the sun sink behind a flower clad hill or to stand on a shore and gaze upon a boat as it disappears over the horizon. So I am going to attempt to create a point and click that is a series of these types of situations set in a japanese garden. There will be somewhere to get to, an end of sorts, but itâ€™s more about the exploration. It will have a day/night cycle hopefully, which will result in multiple Yugen experiences in each part of the garden. The music will be a big part of this one so Iâ€™m relying pretty heavily on my good friend Andy McLucas. Originally I was planning on just doing it in traditional point and click pixel art, but I have rethought that. Iâ€™m going to attempt to convince a very good friend of mine, whoâ€™s also a very talented artist, to create much higher fidelity art for this game. This is by far the biggest scoped game and will quite possibly be my cressendo, my piece de resistance released in December.\n\nAnd that leaves a few empty slots. Two of those have been taken up, but I have no idea what they will be. I have come to an agreement with some tweeps (thatâ€™s twitter friends that I havenâ€™t met in person for those playing at home). One of them is composing some music for myself and the other tweep. We are going to create one game each from one track (that is weâ€™ll both interpret the same track individually) and then be given separate tracks that are from the same â€œalbumâ€ and together decide on a theme and make a game each that are meant to feel as if they came from the same â€œalbum of gamesâ€. Iâ€™m looking forward to getting these tracks and figuring out how to interpret them as a game.\n\nOK. I think thatâ€™s about all for now, itâ€™s late, much later than intended. I wonâ€™t get a chance to write the post on the flocking game tonight, or get started on that game like I was hoping, so fingers crossed I get to it tomorrow night.\n\nIf you have any questions, thoughts or feedback on my ideas, or even the challenge itself, please feel free to leave a comment below, Iâ€™m usually pretty good at replying quickly.\n\n\n","html":"<p>Time to discuss my plans for the One Game A Month challenge. Today is January 1st and the competition is officially under way. After this post, at some stage today, I will write another with more specfic details on my goals for the first game. For this post, I want to discuss what I want to achieve, some of the cool things that will hopefully come out of this, and some of the rules and goals of the competition. The spirit of the comp.</p>\n\n<p>Firstly, lets discuss some of the rules. Basically, there arenâ€™t many. The idea is to publish a game every month for a year. That does not mean make a game in a month. For instance, I intend my first two games to be quite small, and fingers crossed, take a lot less than the allocated month. This will give me time to start working on some of the larger games I have planned for later in the year. The spirit of this challenge is to finish games, not start them. So the plan is to finish a game every month. Simple as that.</p>\n\n<p>Now these games donâ€™t need to be completely original. I donâ€™t intend to make any money off these games, so I donâ€™t need to worry about copyright or infringement. Each of these games is an exercise and learning experience. Some of them will be mechanics pulled form other games, some will be bare bones and under-featured.</p>\n\n<p>Thatâ€™s about it for rules I believe.</p>\n\n<p>Next, letâ€™s list my game ideas. These are in no particular order and definitely arenâ€™t the order they will be made in. They also definitely arenâ€™t final. Some of these may well be dropped for others.</p>\n\n<h1 id=\"1herdinggamebasedonflockingbehaviour\">1 Herding game based on flocking behaviour</h1>\n\n<p>reasons:</p>\n\n<p>â€“ A chance to write some AI again.</p>\n\n<p>â€“ Should be quick and easy to write.</p>\n\n<p>â€“ Gives me time to test and setup various publishing channels. Accounts have been set up for IndieDB, Kongregate and Newgrounds, so Iâ€™ll need time to figure out how to get a game on each of those.</p>\n\n<h1 id=\"2turnbasedfighterthinkturnbasedstreetfighter\">2 Turn based fighter (think turn based Street Fighter)</h1>\n\n<p>reasons:</p>\n\n<p>â€“ This is the game that I used to write over and over again as a kid. They were text based, and intended to be RPGâ€™s eventually, but I never got past the fighting. If I can find an engine that is easy to learn and good for text based games, Iâ€™ll use that, but Iâ€™m keen to try writing one of these again.</p>\n\n<h1 id=\"3endlessplatformer\">3 Endless platformer</h1>\n\n<p>reasons:</p>\n\n<p>â€“ I want to have a go at writing procedurally generated platformer levels and I want to finally nail 2D platformer movement. Iâ€™ll be using the Principals of Virtual Sensation to define, test and iterate my attempts.</p>\n\n<h1 id=\"4hexbattlethinkthecombatfromheroesofmightandmagic3\">4 Hex Battle (Think the combat from Heroes of Might and Magic 3)</h1>\n\n<p>reasons:</p>\n\n<p>â€“ This is for a couple of reasons. I love turn based strategy games and this one can be done very simply to start with, just one â€œarmyâ€ with a few units available for different points. Allow players to build armies of equal point value to allow for player strategies and variation. Many, many options for expansion in the future if itâ€™s fun enough.</p>\n\n<p>â€“ The second main reason is I want to test out the tile map solution I bough on the big asset store sale. It handles hex and is supposed to be very fast to set up. We shall see.</p>\n\n<h1 id=\"5towerdefence\">5 Tower Defence</h1>\n\n<p>reasons:</p>\n\n<p>â€“ Ok, Iâ€™ve never made a tower defence, so it might be fun to make, but Iâ€™m not convinced Iâ€™m going to do it. The main goal here is to use Unityâ€™s built in nav mesh generation and see just how easy it is to set up and use. But if I can think of a more interesting game that would use it, I will.</p>\n\n<h1 id=\"6rhythmgamebasedonpatapon\">6 Rhythm game (based on patapon)</h1>\n\n<p>reasons:</p>\n\n<p>â€“ I love patapon, though I havenâ€™t played it as much as Iâ€™d like. Iâ€™ll be borrowing it from a friend shortly to get some play time on it and analyse exactly how it handles itâ€™s mechanic so I can have a go at replicating it. Basically you are given simple, small combos of buttons to press. I think they are in threes at the start. One is for movement, one is for attacking. You have a couple of stylised tribesman and you must maintain a rhythm of repeating the movement combo to march at a steady pace. When you are in range, you must switch to the attack pattern to attack wild animals for food. If they run, you must switch back to movement to catch up, and then back to attack on the right beat before you lose the animal. Itâ€™s a great dynamic, fun, but hard to master. Iâ€™m yet to see it in any other games (though that doesnâ€™t mean a lot, I donâ€™t see a lot of games) so I want to have a go at applying it somehow. Iâ€™m not sure how my game will manifest exactly, but Iâ€™ll post about it when I do.</p>\n\n<h1 id=\"7shadowrunmatrix\">7 Shadowrun Matrix</h1>\n\n<p>reasons:</p>\n\n<p>-Iâ€™ve always wanted to play this. It was my fave part of the Shadowrun pen and paper roleplaying game. No doubt it will be in the new Shadowrun game that recently was funded on Kickstarter, but it hasnâ€™t existed as a proper port from the tabletop game before now as far as I know. If you donâ€™t know how the Matrix (they called it that long before the movie despite the parallels) and hacking works in Shadowrun, you could look it up, or keep an eye out for my post on this game in the coming months. Iâ€™ll probably do this game early on as it should be a fairly simple one to make.</p>\n\n<h1 id=\"8seabattles\">8 Sea Battles</h1>\n\n<p>reasons:</p>\n\n<p>â€“ Another turn based game. This one mainly based around movement and steering, like the flocking game. A simple pirates ship battles, with cannons and what not. Itâ€™ll be multiplayer to begin with to avoid writing AI for it, but if I have time I would very much like to have a go at this type of AI. Iâ€™ve never written it before.</p>\n\n<h1 id=\"9japanesegarden\">9 Japanese Garden</h1>\n\n<p>reasons:</p>\n\n<p>â€“ This one will be a point and click. My first, despite having wanted to write one for years. This one was inspired by a recent discussion with my brother. He put me onto some Japanese aesthetic concepts. One of which was Yugen. Yugen refers to the deeper mysteries of life and existance that are felt, if not understood, when certain scenes are witnessed. An example might be watching the sun sink behind a flower clad hill or to stand on a shore and gaze upon a boat as it disappears over the horizon. So I am going to attempt to create a point and click that is a series of these types of situations set in a japanese garden. There will be somewhere to get to, an end of sorts, but itâ€™s more about the exploration. It will have a day/night cycle hopefully, which will result in multiple Yugen experiences in each part of the garden. The music will be a big part of this one so Iâ€™m relying pretty heavily on my good friend Andy McLucas. Originally I was planning on just doing it in traditional point and click pixel art, but I have rethought that. Iâ€™m going to attempt to convince a very good friend of mine, whoâ€™s also a very talented artist, to create much higher fidelity art for this game. This is by far the biggest scoped game and will quite possibly be my cressendo, my piece de resistance released in December.</p>\n\n<p>And that leaves a few empty slots. Two of those have been taken up, but I have no idea what they will be. I have come to an agreement with some tweeps (thatâ€™s twitter friends that I havenâ€™t met in person for those playing at home). One of them is composing some music for myself and the other tweep. We are going to create one game each from one track (that is weâ€™ll both interpret the same track individually) and then be given separate tracks that are from the same â€œalbumâ€ and together decide on a theme and make a game each that are meant to feel as if they came from the same â€œalbum of gamesâ€. Iâ€™m looking forward to getting these tracks and figuring out how to interpret them as a game.</p>\n\n<p>OK. I think thatâ€™s about all for now, itâ€™s late, much later than intended. I wonâ€™t get a chance to write the post on the flocking game tonight, or get started on that game like I was hoping, so fingers crossed I get to it tomorrow night.</p>\n\n<p>If you have any questions, thoughts or feedback on my ideas, or even the challenge itself, please feel free to leave a comment below, Iâ€™m usually pretty good at replying quickly.</p>","image":"http://res.cloudinary.com/adamsingle/image/upload/v1443437892/1GAMlogo1_idv7cs.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-01-04T14:33:46.000Z","created_by":1,"updated_at":"2013-03-13T04:00:38.000Z","updated_by":1,"published_at":"2013-01-04T14:33:46.000Z","published_by":1},{"id":11,"uuid":"e43b6bb9-5fa3-4597-9a37-2e8e78406687","title":"#OneGameAMonth - January: Herd","slug":"onegameamonth-january-herd","markdown":"\nLetâ€™s talk about my first game for the Game A Month challenge.\n\nIâ€™m keeping this one RELATIVELY simple. The game idea itself is simple, and may even be boring to play. But the purpose of this game is not so much to make a fun game, as to test some processes. I have been doing a lot of reading lately, some on game design, some on AI, some on lean startup principles for entrepreneurs, and I want to try them out on a small game.\n\nLean startup prinicples tells me to develop an MVP or minimal viable product. That is, create the product, or in this case game, at itâ€™s minimal playable state. But that means completely playable. There should be a menu, the game, end condition, end menu or replayablility functions. You should be able to give it to your customer and have them interact with it and give feedback. The idea is to do this as fast as humanly possible to test your hypothesis. You must get it in the hands of the people you are making it for.\n\nIâ€™ve also been reading some game design articles, almost all of which come from the amazing Dan Cook. If youâ€™re interested in game design, or indeed design in general, and havenâ€™t read his blog, you should do so now. Stop reading mine, read his, mine will wait. One of the articles that caught my eye in particular, is the one on design logs. Design logs are a flexible, iterative alternative to the traditional Game Design Doccument (GDD). I love the idea, and intend to give it a go for this game and see how well it works in practice, or how well my lazy butt managers to use it as intended.\n\nThis game should be done relatively quickly, which will leave me with time to figure out how to publish it to all the places that One Game A Month has encouraged me to join. Namely IndieDB, Newgrounds and Kongregate. All of these require different set ups, and Kongregate at least has itâ€™s own API that allows you to tie your game to Kongregates leaderboard system, amongst other things. So I definitely would like to use that.\n\nFinally, the AI prinicples Iâ€™ve been reading wonâ€™t really be applied here, this is my chance to aim at producing a certain type of AI that I have started implementing before, but never finished because I had no real goal for it. This game will be using an AI technique commonly refered to as flocking. Flocking is a type of â€˜steering behaviourâ€™ and is a subset of the â€˜emergent behaviourâ€™ field of AI, a field I am particularly interested in.\n\nEmergent behaviour has a few definitions depending on who you ask, but my personal definition is â€œa system of simple rules that, when combined, produce unintentional resultsâ€.\n\nI use the word â€œunintentionalâ€ to refer to results, actions or behaviours that werenâ€™t specifically programmed. The high level result should be intentional, but the specific details of how it is achieved come about â€œnaturallyâ€. Luckily, flocking is one of the simpler examples to help explain this.\n\nSo flocking is a steering behaviour that combines 3 â€œrulesâ€ to create movement for a group of agents (agent being an entity that is a part of an AI system) that is somewhat similar to the way a flock of birds move. By playing with the values of these rules the actual flocking behaviour can be tweaked however. So where a flock of birds move smoothly in a group, rarely changing their â€œpostionâ€ within it, you could use flocking to create swarming (like a swarm of rats for instance) where the agents scramble over the top of each other, just by modifying the value of the rules (not changing the rules themselves).\n\nLets break that down a little further. The three rules used are refered to as Cohesion, Separation and Alignment. Each of these, on their own, are quite simple.\n\nCohesion is the act of staying close to other agents. This is done by averaging all their positions and moving towards that position.\n\nSeparation is the act of pushing away from agents that are too close. This is done based on a maximum distance or range from the agent. The closer another agent is, the stronger the â€œseparationâ€ or â€œrepulsionâ€. This separation vector is calculated for each agent within the max range and summed together to get a resulting separation vector.\n\nAlign tries to match the orientation to a target, or on this case, a number of targets. This behaviour produces no velocity vector, just a rotation. Again this uses a maximum distance so the agent is only effected by other agents within a certain range.\n\nSo, when you combine all three of these you get a direction to face and move towards based on all other agents that are close. Since all of the are also using these same behaviours you end up with a group of agents that appear to be moving together like a flock of birds. Check out this simple demo. In this example the agents are also using a â€œseekâ€ behaviour and moving towards the red dot. Without that they would move around randomly as each is pushed around by all the others. This one hasnâ€™t been particularly smoothed out or tweaked in any way, so itâ€™s quite jittery.\n\nSo thatâ€™s emergent behaviour, and specifically the behaviour Iâ€™ll be implementing in my first game. Where it getâ€™s interesting is when you add a predator. By having an agent that all the flocking agents avoid, and making this avoidance behaviour â€œstrongerâ€ than the flocking one, you get some very interesting looking results. Take a look at this real life video of a flock of starlings avoiding a hawk.\n\nAnd thatâ€™s the basis of my first game for 1GAM. You control a sheep dog attempting to herd sheep into a pen. I have some concerns over how well the â€œflockâ€ will move in a way that suggests sheep, and I may change it to a school of fish or flock of birds. The reason I chose the sheep is the simple to understand end condition of getting them all in the pen. At this stage it doesnâ€™t really matter. Iâ€™ll get a working prototype happening as soon as possible with primitives and skin it from there.\n\nThe first step, however, is the set up and documentation. This time Iâ€™m doing everything right from the start. So Iâ€™ve set up accounts on IndieDB, Newgrounds and Kongregate. Iâ€™ve installed Git and set up an account on Github (all these games will be completely open, so feel free to jump over to my github account and take a look at the code if youâ€™re interested. There isnâ€™t anything there right now, but there might be by the time you read this). Iâ€™m installing github for mac right now and about to set up an empty unity project to get that ball rolling. After that I get started on my design log for the game. I have most of it in my head, but like I said, I want everything done right for these games, get this part of the process sorted and a part of my pipeline.\n\nStay tuned for a progress report.\n\nChat later,\n\nAdsy\n\n\n","html":"<p>Letâ€™s talk about my first game for the Game A Month challenge.</p>\n\n<p>Iâ€™m keeping this one RELATIVELY simple. The game idea itself is simple, and may even be boring to play. But the purpose of this game is not so much to make a fun game, as to test some processes. I have been doing a lot of reading lately, some on game design, some on AI, some on lean startup principles for entrepreneurs, and I want to try them out on a small game.</p>\n\n<p>Lean startup prinicples tells me to develop an MVP or minimal viable product. That is, create the product, or in this case game, at itâ€™s minimal playable state. But that means completely playable. There should be a menu, the game, end condition, end menu or replayablility functions. You should be able to give it to your customer and have them interact with it and give feedback. The idea is to do this as fast as humanly possible to test your hypothesis. You must get it in the hands of the people you are making it for.</p>\n\n<p>Iâ€™ve also been reading some game design articles, almost all of which come from the amazing Dan Cook. If youâ€™re interested in game design, or indeed design in general, and havenâ€™t read his blog, you should do so now. Stop reading mine, read his, mine will wait. One of the articles that caught my eye in particular, is the one on design logs. Design logs are a flexible, iterative alternative to the traditional Game Design Doccument (GDD). I love the idea, and intend to give it a go for this game and see how well it works in practice, or how well my lazy butt managers to use it as intended.</p>\n\n<p>This game should be done relatively quickly, which will leave me with time to figure out how to publish it to all the places that One Game A Month has encouraged me to join. Namely IndieDB, Newgrounds and Kongregate. All of these require different set ups, and Kongregate at least has itâ€™s own API that allows you to tie your game to Kongregates leaderboard system, amongst other things. So I definitely would like to use that.</p>\n\n<p>Finally, the AI prinicples Iâ€™ve been reading wonâ€™t really be applied here, this is my chance to aim at producing a certain type of AI that I have started implementing before, but never finished because I had no real goal for it. This game will be using an AI technique commonly refered to as flocking. Flocking is a type of â€˜steering behaviourâ€™ and is a subset of the â€˜emergent behaviourâ€™ field of AI, a field I am particularly interested in.</p>\n\n<p>Emergent behaviour has a few definitions depending on who you ask, but my personal definition is â€œa system of simple rules that, when combined, produce unintentional resultsâ€.</p>\n\n<p>I use the word â€œunintentionalâ€ to refer to results, actions or behaviours that werenâ€™t specifically programmed. The high level result should be intentional, but the specific details of how it is achieved come about â€œnaturallyâ€. Luckily, flocking is one of the simpler examples to help explain this.</p>\n\n<p>So flocking is a steering behaviour that combines 3 â€œrulesâ€ to create movement for a group of agents (agent being an entity that is a part of an AI system) that is somewhat similar to the way a flock of birds move. By playing with the values of these rules the actual flocking behaviour can be tweaked however. So where a flock of birds move smoothly in a group, rarely changing their â€œpostionâ€ within it, you could use flocking to create swarming (like a swarm of rats for instance) where the agents scramble over the top of each other, just by modifying the value of the rules (not changing the rules themselves).</p>\n\n<p>Lets break that down a little further. The three rules used are refered to as Cohesion, Separation and Alignment. Each of these, on their own, are quite simple.</p>\n\n<p>Cohesion is the act of staying close to other agents. This is done by averaging all their positions and moving towards that position.</p>\n\n<p>Separation is the act of pushing away from agents that are too close. This is done based on a maximum distance or range from the agent. The closer another agent is, the stronger the â€œseparationâ€ or â€œrepulsionâ€. This separation vector is calculated for each agent within the max range and summed together to get a resulting separation vector.</p>\n\n<p>Align tries to match the orientation to a target, or on this case, a number of targets. This behaviour produces no velocity vector, just a rotation. Again this uses a maximum distance so the agent is only effected by other agents within a certain range.</p>\n\n<p>So, when you combine all three of these you get a direction to face and move towards based on all other agents that are close. Since all of the are also using these same behaviours you end up with a group of agents that appear to be moving together like a flock of birds. Check out this simple demo. In this example the agents are also using a â€œseekâ€ behaviour and moving towards the red dot. Without that they would move around randomly as each is pushed around by all the others. This one hasnâ€™t been particularly smoothed out or tweaked in any way, so itâ€™s quite jittery.</p>\n\n<p>So thatâ€™s emergent behaviour, and specifically the behaviour Iâ€™ll be implementing in my first game. Where it getâ€™s interesting is when you add a predator. By having an agent that all the flocking agents avoid, and making this avoidance behaviour â€œstrongerâ€ than the flocking one, you get some very interesting looking results. Take a look at this real life video of a flock of starlings avoiding a hawk.</p>\n\n<p>And thatâ€™s the basis of my first game for 1GAM. You control a sheep dog attempting to herd sheep into a pen. I have some concerns over how well the â€œflockâ€ will move in a way that suggests sheep, and I may change it to a school of fish or flock of birds. The reason I chose the sheep is the simple to understand end condition of getting them all in the pen. At this stage it doesnâ€™t really matter. Iâ€™ll get a working prototype happening as soon as possible with primitives and skin it from there.</p>\n\n<p>The first step, however, is the set up and documentation. This time Iâ€™m doing everything right from the start. So Iâ€™ve set up accounts on IndieDB, Newgrounds and Kongregate. Iâ€™ve installed Git and set up an account on Github (all these games will be completely open, so feel free to jump over to my github account and take a look at the code if youâ€™re interested. There isnâ€™t anything there right now, but there might be by the time you read this). Iâ€™m installing github for mac right now and about to set up an empty unity project to get that ball rolling. After that I get started on my design log for the game. I have most of it in my head, but like I said, I want everything done right for these games, get this part of the process sorted and a part of my pipeline.</p>\n\n<p>Stay tuned for a progress report.</p>\n\n<p>Chat later,</p>\n\n<p>Adsy</p>","image":"http://res.cloudinary.com/adamsingle/image/upload/v1443437892/1GAMlogo1_idv7cs.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-01-04T14:35:03.000Z","created_by":1,"updated_at":"2013-03-13T04:00:17.000Z","updated_by":1,"published_at":"2013-01-04T14:35:03.000Z","published_by":1},{"id":12,"uuid":"d4b4752d-376b-4dc6-aa33-ffce4ff158fe","title":"Dino Diner","slug":"dino-diner","markdown":"\nDino Diner is the game that may never be. This was originally Bifrost Studios follow on from Zombie Juice. I wrote this game to â€œnear completionâ€ twice yet itâ€™s current status is in the â€œpre production designâ€ phase. Itâ€™s a great concept with a lot of potential. Our problem is we kept, learning as we went and didnâ€™t have the experience to just call it. The more we did this, the more we realised we were approaching it wrong, or making too many wrong decisions. So the game would be pulled back to the ground and weâ€™d start it again.\n\nI have every confidence that if it was ever made, itâ€™d be a great little game.\n\n[![DinoDiner1](http://res.cloudinary.com/adamsingle/image/upload/v1443437694/DinoDiner1_whibtm.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437694/DinoDiner1_whibtm.jpg)\n\nOfficial Teaser Animation:\n\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/PYobqcTFQ8k?feature=oembed\" width=\"640\"></iframe>\n\nÂ \n\n\n","html":"<p>Dino Diner is the game that may never be. This was originally Bifrost Studios follow on from Zombie Juice. I wrote this game to â€œnear completionâ€ twice yet itâ€™s current status is in the â€œpre production designâ€ phase. Itâ€™s a great concept with a lot of potential. Our problem is we kept, learning as we went and didnâ€™t have the experience to just call it. The more we did this, the more we realised we were approaching it wrong, or making too many wrong decisions. So the game would be pulled back to the ground and weâ€™d start it again.</p>\n\n<p>I have every confidence that if it was ever made, itâ€™d be a great little game.</p>\n\n<p><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437694/DinoDiner1_whibtm.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437694/DinoDiner1_whibtm.jpg\" alt=\"DinoDiner1\" title=\"\" /></a></p>\n\n<p>Official Teaser Animation:</p>\n\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/PYobqcTFQ8k?feature=oembed\" width=\"640\"></iframe>","image":"http://res.cloudinary.com/adamsingle/image/upload/v1443437749/BannerDinoDiner02_vxksin.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-01-04T14:50:37.000Z","created_by":1,"updated_at":"2015-09-28T20:54:54.000Z","updated_by":1,"published_at":"2013-01-04T14:50:37.000Z","published_by":1},{"id":13,"uuid":"c08efed5-c5b0-4191-9321-2af6dca2d2b3","title":"Valkyrie","slug":"eir-and-fire","markdown":"\nValkyrie is the latest, and most ambitious, game from Bifrost Studios. Our first leap into 3D (if you donâ€™t count the unreleased Dino Diner), it presented us with many, many challenges. Valkyrie is a first person runner set in the world of Norse Mythology, but somewhere in our own future, after the Ragnarok.\n\nThis game, like Dino Diner, went through many design changes. With the addition of Oscar Guillen to the Bifrost team, Valkyrie is definitely the most beautiful game we did. I finished up with Bifrost just before the completion of this game.\n\nBelow is some concept art and the official trailer.\n\nÂ \n\n[![Available_on_the_App_Store_Badge_US-UK_135x40](http://res.cloudinary.com/adamsingle/image/upload/v1443438241/Available_on_the_App_Store_Badge_US-UK_135x40_jaoqy6.png)](https://itunes.apple.com/au/app/valkyrie/id659260745?mt=8)\n\nÂ \n\nÂ \n\n[nggallery id=1]\n\nÂ \n\nTrailer:\n\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/12VMwSQV4vM?feature=oembed\" width=\"640\"></iframe>\n\n\n","html":"<p>Valkyrie is the latest, and most ambitious, game from Bifrost Studios. Our first leap into 3D (if you donâ€™t count the unreleased Dino Diner), it presented us with many, many challenges. Valkyrie is a first person runner set in the world of Norse Mythology, but somewhere in our own future, after the Ragnarok.</p>\n\n<p>This game, like Dino Diner, went through many design changes. With the addition of Oscar Guillen to the Bifrost team, Valkyrie is definitely the most beautiful game we did. I finished up with Bifrost just before the completion of this game.</p>\n\n<p>Below is some concept art and the official trailer.</p>\n\n<p><a href=\"https://itunes.apple.com/au/app/valkyrie/id659260745?mt=8\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443438241/Available_on_the_App_Store_Badge_US-UK_135x40_jaoqy6.png\" alt=\"Available<em>on</em>the<em>App</em>Store<em>Badge</em>US-UK_135x40\" title=\"\" /></a></p>\n\n<p>[nggallery id=1]</p>\n\n<p>Trailer:</p>\n\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/12VMwSQV4vM?feature=oembed\" width=\"640\"></iframe>","image":"http://res.cloudinary.com/adamsingle/image/upload/v1443437746/Valkyrie_banner_vqg2ce.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-01-05T14:13:43.000Z","created_by":1,"updated_at":"2015-09-28T21:04:02.000Z","updated_by":1,"published_at":"2013-01-05T14:13:43.000Z","published_by":1},{"id":14,"uuid":"578b8b19-8e72-4c96-a362-3ce7ae6debb1","title":"Of Wolf And Man","slug":"of-wolf-and-man","markdown":"\nOf Wolf And Man was the game that the Bifrost team made for the Fab 48 Hour Game Jam in 2012. It was our first ever Jam, and we made a lot of mistakes. It was a massive learning experience for us. Our final build was incomplete and buggy. But the concept was a good one and maybe one day weâ€™ll give it a go for real.\n\nThe idea was for a 2D stealth platformer (Iâ€™d just played Mark of the Ninja and was obsessed with itâ€™s visuals and gameplay). The twist was you were a man who turned into a werewolf when the moon was visible. The werewolf had different movement capabilities to the man, but he also produced more volatile reactions from the npcs. Take a look at the concept art below, let me know what you think.\n\n[nggallery id=2]\n\n\n","html":"<p>Of Wolf And Man was the game that the Bifrost team made for the Fab 48 Hour Game Jam in 2012. It was our first ever Jam, and we made a lot of mistakes. It was a massive learning experience for us. Our final build was incomplete and buggy. But the concept was a good one and maybe one day weâ€™ll give it a go for real.</p>\n\n<p>The idea was for a 2D stealth platformer (Iâ€™d just played Mark of the Ninja and was obsessed with itâ€™s visuals and gameplay). The twist was you were a man who turned into a werewolf when the moon was visible. The werewolf had different movement capabilities to the man, but he also produced more volatile reactions from the npcs. Take a look at the concept art below, let me know what you think.</p>\n\n<p>[nggallery id=2]</p>","image":"http://res.cloudinary.com/adamsingle/image/upload/v1443437748/BannerOfWolfAndMan_bwkuxa.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-01-05T23:44:32.000Z","created_by":1,"updated_at":"2013-07-16T22:58:18.000Z","updated_by":1,"published_at":"2013-01-05T23:44:32.000Z","published_by":1},{"id":15,"uuid":"02942310-cb36-49aa-a658-e0014d47c9f9","title":"Nerd Fitness and my inner super hero","slug":"nerd-fitness-and-my-inner-super-hero","markdown":"\n### My Origin Story\n\nIn the last few months there has been a shift in my view on life. Or my approach to it. Iâ€™m not sure what caused this shift. But suddenly Iâ€™m thinking about fitness. Longevity. Human ability. This newâ€¦ fascination led me to www.NerdFitness.com. A fantastic site, put together by a fellow geek Steve Kamb (@SteveKamb on twitter for those interested). He has spent years transforming himself from the stereotypical geek to a fit, healthy and active adventurer. NerdFitness is his legacy and his war cry. On the site, other nerds and geeks get information on fitness, health, exercise, motivation, productivity, all in a context they can instantly relate to. For someone like myself, who has numerous times started a â€œcharacter sheetâ€ to represent my own skills and abilities, this site instantly spoke to me. Especially the tag line: â€œLevel up your lifeâ€. This is exactly what I had been trying to do, or what I had just started doing. I quickly found myself with tab after tab open in my browser, each one an article on working out, staying motivated, eating properly, how to deal with every day crap. Then I found â€œ[How to become a super hero in 4 easy steps](http://www.nerdfitness.com/blog/2010/08/26/how-to-become-a-superhero-in-4-easy-steps/ \"How To Become a Super Hero\")â€œ.\n\n### My eyes are open\n\nAfter reading this aticle I realised a few things. Firstly, I could be a super hero. To some extent. I could be the hero I wanted to be. The hero I wanted my son to see me as. Secondly, I didnâ€™t need to define my hero, I didnâ€™t need to figure out my super powers, my costume, name, theme song. I already knew it all. It was simple, and will come as no surprise to anyone that knows me. I want to be Spider-Man.\n\n[![tumblr_m9wk4aXhqC1qmh9u4o1_1280](http://res.cloudinary.com/adamsingle/image/upload/v1443437891/tumblr_m9wk4aXhqC1qmh9u4o1_1280_vigj4j.jpg)](Just a few of Spider-Mans incarnations)\n\nThere are only three characters Iâ€™ve ever really wanted to be in my life. The first was Peter Pan. He could fly, never grew up, and had sword fights with pirates. The second is Zoro. He could ride like the wind, was dashing and witty, and had sword fights with bad guys. The last is Spider-Man. Spider-Man I really related to. We both started in the same place. Geeky, weak and unpopular. But he was transformed. He gained strength, speed, agility, without giving up the geek. In fact it allowed him to show more of himself. It gave him confidence for the inner smart arse to come out. To say all the things heâ€™d only every thought about before for fear of a beating. When I became a father I connected even more. I had suddenly been given a massive amount of power. I would play an enormous role in shaping this human being, this tiny bundle that would one day become a man that would interact with an almost unimaginable number of people in the future. Just as each of us do now. He couldnâ€™t even look after himself. I had the power of life and death, he needed me (and his mother of course) just to survive. That much power quickly reminded me of the primary message behind Spider-Man. We all know it by now â€œWith great power comes great responsibilityâ€.\n\n### Who is Spider-Man?\n\nBefore I can start crafting myself into Spider-Man, I need to define what Spider-Man is. There are two primary aspects to his abilities that make him what he is. The physical and the academic. Sure, his academic abilities were his before he became Spider-Man, but itâ€™s the combination of what Peter Parker was and the abilities given him from the spider bite that create who Spider-Man is.\n\nSo, academically, heâ€™s an expert in his field. His field is Chemistry, specifically bio chemistry. Without those skills he would never have had the knowledge to create his webbing. He still would have been a hero of course, but he wouldnâ€™t have had half as much fun with it.\n\nPhysically, his skills are numerous. Agility, Athletics, Flexibility, Endurance, Reflexes, Functional Strength without compromising any of the other aspects. Many people are surprised at just how strong he is. Let me give you the specifics:\n\nAccording to the official â€œThe Amazing Spider-Man: The Ultimate Guideâ€, Spider-Man is able to lift nearly 10 ton. He has amazing speed and agility. He moves with â€œa fluid and casual grace that canâ€™t even be equaled by trained superathletes such as Captain America or Daredevilâ€. His reflexes â€œoperate up to 40 times faster than those of a normal personâ€. This is what I mean by functional strength. As the Ultimate Guide puts it, â€œWhile Spider-Man is hardly the strongest costume clad hero of all, the combination of his strength, speed and agility make him a match for almost any foeâ€.\n\n![spiderman-1](http://res.cloudinary.com/adamsingle/image/upload/v1443437891/spiderman-1_u2fhjq.jpg)\n\nSo now I need to define that in real world terms. Iâ€™m a geek, but Iâ€™m not delusional. Iâ€™m aware itâ€™s unlikely Iâ€™ll ever lift 10 ton or gain reflexes 40 times the norm. But I donâ€™t need to. What I need is functional fitness above the average mans. Strength that allows me to perform feats that most people would never believe they could do themselves, that I never thought I would be able to do. I need to improve my reflexes, agility, dexterity, athletics and acrobatics exponentially. And I need to become a master in my academic field.\n\nÂ \n\n### The Radioactive Spider comes in many forms\n\nMy radioactive spider was two fold, as you would imagine, since I need to bites two achieve my goals. Peter Parker was already an expert in his field, Iâ€™m not. The first spider came by the name Jon Ladyman. Heâ€™s an artist I met and befirended at college. In a discussion that grew from a chance comment (or as Stan Lee would probably say, fateful comment) Jon lent to me a book. A book that changed everything. Itâ€™s called Convict Conditioning.\n\n![ConvictConditioningCover](http://res.cloudinary.com/adamsingle/image/upload/v1443437890/ConvictConditioningCover1_cyykj4.jpg)A fantastic book on progressional calisthenics. Old school calisthenics, like the Spartans, Greeks and Romans used. Like the strong men of the early 20th century used to bend steel bars and flex their way through chains. Using nothing but body weight and natural movements to gradually build functional strength. No artificial isolation of single muscles or muscle groups. With this, as the cover suggests, any person can work their way up to feats such as the mind blowing one handed hand stand push up, amongst other things. This was exactly the type of strength training I was looking for, right when I had started looking for it. Through Convict Conditioning I will build, not just strength to my muscles, but strength to my joints, strength to my nervous system, that fires the muscles I need. I will build flexibility, endurance, control.\n\nThat covers some of his abilities. But it leaves Athletics, acrobatics and reflexes. Athletics I have already begun. That was what started this whole thing perhaps. I began the Couch to 5Km program. I finished that ahead of schedule and have been gradually building on it. Now Iâ€™m on the Couch to 10Km program (starting half way through of course). Acrobatics is a little tricky. My plan is to master each of the 6 movements in Convict Conditioning; The One Armed Push-Up, The One Armed Pull-Up, The Stand-To-Stand Bridge, The One Legged Bodyweight Squat, The Hanging Straight Leg Raise and The One Armed Hand-Stand Push-Up. Once I have done that, which may well take years, I will apply all that strength, power and agility to learning Parkour. This will give me the functional agility and acrobatics to move like Spider-Man.\n\nReaction time can be improved by getting my hands on a Reaction Ball. A rubber, bouncy ball with â€œnodulesâ€ on it that make it bounce off in random directions. By doing alternate hand throws I can greatly increase my reaction time. Alternate hand throws are simply throwing a ball at a wall and catching it with the other hand, then throw it with that hand, and catch it with the first one again.\n\nThere are two other things that have been mentioned on almost every site and article Iâ€™ve found on improving reaction speed. Running in the woods and playing video games. Well, I do one of those already. And since Iâ€™m already running, maybe a run through the bush isnâ€™t a bad idea.\n\nSo thatâ€™s the physical side of things. It will take years to master it all, and after learning Parkour, Iâ€™d love to try my hand at some Capoeira, the brazilian martial arts that combines some elements of dance and music. Itâ€™s almost a standing, fighting form of Parkour. Now I need to adress the academic issue.\n\n![SpiderMan_Venom_Chess](http://res.cloudinary.com/adamsingle/image/upload/v1443437890/spiderman_venomsml2small_anjxg2.jpg)\n\nMy particular field is Programming. Specifically programming games. And my personal favourite speciality is artificial intelligence. Iâ€™m by no means the best programmer. Much of the low level understanding is a confusing mess to me. Iâ€™m more of a functional programmer. I want to be better than that. So I have a lot to learn. This leads me to my second spider.\n\nThis one is nameless. I got this link from someone I follow on twitter, but I canâ€™t remember who it was now. Itâ€™s a fantastic article, written by a man who did all 33 courses in MITâ€™s famous computer science curriculum in 12 months. More than that, he did it on his own, online, watching videos of the lectures. This works out to about 1 whole course ever 1.5 weeks. The article describes what he calls the [Drill Down](http://calnewport.com/blog/2012/10/26/mastering-linear-algebra-in-10-days-astounding-experiments-in-ultra-learning/ \"Drill Down Technique\") technique. I intend to apply it gradually to various aspects of programming. My goal is to find some programming courses online for free and apply the same methodology to those. After gaining a much stronger understanding of the fundamentals of programming and computer systems, I will shift my attention to online courses on AI, which seem to be quite numerous actually.\n\n### Make the jump\n\nNow that I have defined what Spider-Man is, how that applies to me, and how Iâ€™m going to go about transforming myself into him, I just need to get a plan together. That will be a task for another night, probably tomorrow night. Iâ€™ll put together a training routine. Find a course, get the content, figure out where Iâ€™m going to find the time to learn it, and get started. I have no intention of doing courses in week and a half, I donâ€™t need to. I have years left in my life to become Spider-Man. I intend to progress slowly, naturally and safely. In august this year I am competing in Tough Mudder. For anyone who doesnâ€™t know what that is, itâ€™s a crazy, massive obstacle course originally designed by the British Special Forces to test and train their members. It now travels the world and draws massive crowds. There is mud, small spaces, barbed wire, electrified wire and around 20km of it. I expect to be in pretty good shape for this one. But when I do it again next year, Iâ€™m looking forward to being much more. In a few years time Iâ€™ll be at my peak strength- and power-wise. Then the Parkour training will begin and the course should get really fun. My favourite part is that they encourage camaraderie and team work. My two best mates will be joining me. Spider-Man does love being a part of a team, even if only briefly before returning to the comfort of his geeky life.\n\nIâ€™ll be posting pics of my progress soon, as I work my way through the Convict Conditioning. This will help others out there decide if the philosophy put forward by Paul Wade are bogus, or truly the lost art that shaped legends like the Spartans. One day, ultimately, Iâ€™ll record a video of me doing Parkour through the streets of Manhattan in a Spider-Man costume. Yes. I know exactly how massively geek that is. Thatâ€™s what I love about it.\n\n![AmazingSpiderManMovieConcept](http://res.cloudinary.com/adamsingle/image/upload/v1443437889/jerad-s-merantz-the-amazing-spider-man0010-SP_revison_small_ly2qaq.jpg)\n\n\n","html":"<h3 id=\"myoriginstory\">My Origin Story</h3>\n\n<p>In the last few months there has been a shift in my view on life. Or my approach to it. Iâ€™m not sure what caused this shift. But suddenly Iâ€™m thinking about fitness. Longevity. Human ability. This newâ€¦ fascination led me to www.NerdFitness.com. A fantastic site, put together by a fellow geek Steve Kamb (@SteveKamb on twitter for those interested). He has spent years transforming himself from the stereotypical geek to a fit, healthy and active adventurer. NerdFitness is his legacy and his war cry. On the site, other nerds and geeks get information on fitness, health, exercise, motivation, productivity, all in a context they can instantly relate to. For someone like myself, who has numerous times started a â€œcharacter sheetâ€ to represent my own skills and abilities, this site instantly spoke to me. Especially the tag line: â€œLevel up your lifeâ€. This is exactly what I had been trying to do, or what I had just started doing. I quickly found myself with tab after tab open in my browser, each one an article on working out, staying motivated, eating properly, how to deal with every day crap. Then I found â€œ<a href=\"http://www.nerdfitness.com/blog/2010/08/26/how-to-become-a-superhero-in-4-easy-steps/\" title=\"How To Become a Super Hero\">How to become a super hero in 4 easy steps</a>â€œ.</p>\n\n<h3 id=\"myeyesareopen\">My eyes are open</h3>\n\n<p>After reading this aticle I realised a few things. Firstly, I could be a super hero. To some extent. I could be the hero I wanted to be. The hero I wanted my son to see me as. Secondly, I didnâ€™t need to define my hero, I didnâ€™t need to figure out my super powers, my costume, name, theme song. I already knew it all. It was simple, and will come as no surprise to anyone that knows me. I want to be Spider-Man.</p>\n\n<p><a href=\"Just a few of Spider-Mans incarnations\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437891/tumblr_m9wk4aXhqC1qmh9u4o1_1280_vigj4j.jpg\" alt=\"tumblr<em>m9wk4aXhqC1qmh9u4o1</em>1280\" title=\"\" /></a></p>\n\n<p>There are only three characters Iâ€™ve ever really wanted to be in my life. The first was Peter Pan. He could fly, never grew up, and had sword fights with pirates. The second is Zoro. He could ride like the wind, was dashing and witty, and had sword fights with bad guys. The last is Spider-Man. Spider-Man I really related to. We both started in the same place. Geeky, weak and unpopular. But he was transformed. He gained strength, speed, agility, without giving up the geek. In fact it allowed him to show more of himself. It gave him confidence for the inner smart arse to come out. To say all the things heâ€™d only every thought about before for fear of a beating. When I became a father I connected even more. I had suddenly been given a massive amount of power. I would play an enormous role in shaping this human being, this tiny bundle that would one day become a man that would interact with an almost unimaginable number of people in the future. Just as each of us do now. He couldnâ€™t even look after himself. I had the power of life and death, he needed me (and his mother of course) just to survive. That much power quickly reminded me of the primary message behind Spider-Man. We all know it by now â€œWith great power comes great responsibilityâ€.</p>\n\n<h3 id=\"whoisspiderman\">Who is Spider-Man?</h3>\n\n<p>Before I can start crafting myself into Spider-Man, I need to define what Spider-Man is. There are two primary aspects to his abilities that make him what he is. The physical and the academic. Sure, his academic abilities were his before he became Spider-Man, but itâ€™s the combination of what Peter Parker was and the abilities given him from the spider bite that create who Spider-Man is.</p>\n\n<p>So, academically, heâ€™s an expert in his field. His field is Chemistry, specifically bio chemistry. Without those skills he would never have had the knowledge to create his webbing. He still would have been a hero of course, but he wouldnâ€™t have had half as much fun with it.</p>\n\n<p>Physically, his skills are numerous. Agility, Athletics, Flexibility, Endurance, Reflexes, Functional Strength without compromising any of the other aspects. Many people are surprised at just how strong he is. Let me give you the specifics:</p>\n\n<p>According to the official â€œThe Amazing Spider-Man: The Ultimate Guideâ€, Spider-Man is able to lift nearly 10 ton. He has amazing speed and agility. He moves with â€œa fluid and casual grace that canâ€™t even be equaled by trained superathletes such as Captain America or Daredevilâ€. His reflexes â€œoperate up to 40 times faster than those of a normal personâ€. This is what I mean by functional strength. As the Ultimate Guide puts it, â€œWhile Spider-Man is hardly the strongest costume clad hero of all, the combination of his strength, speed and agility make him a match for almost any foeâ€.</p>\n\n<p><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437891/spiderman-1_u2fhjq.jpg\" alt=\"spiderman-1\" /></p>\n\n<p>So now I need to define that in real world terms. Iâ€™m a geek, but Iâ€™m not delusional. Iâ€™m aware itâ€™s unlikely Iâ€™ll ever lift 10 ton or gain reflexes 40 times the norm. But I donâ€™t need to. What I need is functional fitness above the average mans. Strength that allows me to perform feats that most people would never believe they could do themselves, that I never thought I would be able to do. I need to improve my reflexes, agility, dexterity, athletics and acrobatics exponentially. And I need to become a master in my academic field.</p>\n\n<h3 id=\"theradioactivespidercomesinmanyforms\">The Radioactive Spider comes in many forms</h3>\n\n<p>My radioactive spider was two fold, as you would imagine, since I need to bites two achieve my goals. Peter Parker was already an expert in his field, Iâ€™m not. The first spider came by the name Jon Ladyman. Heâ€™s an artist I met and befirended at college. In a discussion that grew from a chance comment (or as Stan Lee would probably say, fateful comment) Jon lent to me a book. A book that changed everything. Itâ€™s called Convict Conditioning.</p>\n\n<p><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437890/ConvictConditioningCover1_cyykj4.jpg\" alt=\"ConvictConditioningCover\" title=\"\" />A fantastic book on progressional calisthenics. Old school calisthenics, like the Spartans, Greeks and Romans used. Like the strong men of the early 20th century used to bend steel bars and flex their way through chains. Using nothing but body weight and natural movements to gradually build functional strength. No artificial isolation of single muscles or muscle groups. With this, as the cover suggests, any person can work their way up to feats such as the mind blowing one handed hand stand push up, amongst other things. This was exactly the type of strength training I was looking for, right when I had started looking for it. Through Convict Conditioning I will build, not just strength to my muscles, but strength to my joints, strength to my nervous system, that fires the muscles I need. I will build flexibility, endurance, control.</p>\n\n<p>That covers some of his abilities. But it leaves Athletics, acrobatics and reflexes. Athletics I have already begun. That was what started this whole thing perhaps. I began the Couch to 5Km program. I finished that ahead of schedule and have been gradually building on it. Now Iâ€™m on the Couch to 10Km program (starting half way through of course). Acrobatics is a little tricky. My plan is to master each of the 6 movements in Convict Conditioning; The One Armed Push-Up, The One Armed Pull-Up, The Stand-To-Stand Bridge, The One Legged Bodyweight Squat, The Hanging Straight Leg Raise and The One Armed Hand-Stand Push-Up. Once I have done that, which may well take years, I will apply all that strength, power and agility to learning Parkour. This will give me the functional agility and acrobatics to move like Spider-Man.</p>\n\n<p>Reaction time can be improved by getting my hands on a Reaction Ball. A rubber, bouncy ball with â€œnodulesâ€ on it that make it bounce off in random directions. By doing alternate hand throws I can greatly increase my reaction time. Alternate hand throws are simply throwing a ball at a wall and catching it with the other hand, then throw it with that hand, and catch it with the first one again.</p>\n\n<p>There are two other things that have been mentioned on almost every site and article Iâ€™ve found on improving reaction speed. Running in the woods and playing video games. Well, I do one of those already. And since Iâ€™m already running, maybe a run through the bush isnâ€™t a bad idea.</p>\n\n<p>So thatâ€™s the physical side of things. It will take years to master it all, and after learning Parkour, Iâ€™d love to try my hand at some Capoeira, the brazilian martial arts that combines some elements of dance and music. Itâ€™s almost a standing, fighting form of Parkour. Now I need to adress the academic issue.</p>\n\n<p><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437890/spiderman_venomsml2small_anjxg2.jpg\" alt=\"SpiderMan_Venom_Chess\" /></p>\n\n<p>My particular field is Programming. Specifically programming games. And my personal favourite speciality is artificial intelligence. Iâ€™m by no means the best programmer. Much of the low level understanding is a confusing mess to me. Iâ€™m more of a functional programmer. I want to be better than that. So I have a lot to learn. This leads me to my second spider.</p>\n\n<p>This one is nameless. I got this link from someone I follow on twitter, but I canâ€™t remember who it was now. Itâ€™s a fantastic article, written by a man who did all 33 courses in MITâ€™s famous computer science curriculum in 12 months. More than that, he did it on his own, online, watching videos of the lectures. This works out to about 1 whole course ever 1.5 weeks. The article describes what he calls the <a href=\"http://calnewport.com/blog/2012/10/26/mastering-linear-algebra-in-10-days-astounding-experiments-in-ultra-learning/\" title=\"Drill Down Technique\">Drill Down</a> technique. I intend to apply it gradually to various aspects of programming. My goal is to find some programming courses online for free and apply the same methodology to those. After gaining a much stronger understanding of the fundamentals of programming and computer systems, I will shift my attention to online courses on AI, which seem to be quite numerous actually.</p>\n\n<h3 id=\"makethejump\">Make the jump</h3>\n\n<p>Now that I have defined what Spider-Man is, how that applies to me, and how Iâ€™m going to go about transforming myself into him, I just need to get a plan together. That will be a task for another night, probably tomorrow night. Iâ€™ll put together a training routine. Find a course, get the content, figure out where Iâ€™m going to find the time to learn it, and get started. I have no intention of doing courses in week and a half, I donâ€™t need to. I have years left in my life to become Spider-Man. I intend to progress slowly, naturally and safely. In august this year I am competing in Tough Mudder. For anyone who doesnâ€™t know what that is, itâ€™s a crazy, massive obstacle course originally designed by the British Special Forces to test and train their members. It now travels the world and draws massive crowds. There is mud, small spaces, barbed wire, electrified wire and around 20km of it. I expect to be in pretty good shape for this one. But when I do it again next year, Iâ€™m looking forward to being much more. In a few years time Iâ€™ll be at my peak strength- and power-wise. Then the Parkour training will begin and the course should get really fun. My favourite part is that they encourage camaraderie and team work. My two best mates will be joining me. Spider-Man does love being a part of a team, even if only briefly before returning to the comfort of his geeky life.</p>\n\n<p>Iâ€™ll be posting pics of my progress soon, as I work my way through the Convict Conditioning. This will help others out there decide if the philosophy put forward by Paul Wade are bogus, or truly the lost art that shaped legends like the Spartans. One day, ultimately, Iâ€™ll record a video of me doing Parkour through the streets of Manhattan in a Spider-Man costume. Yes. I know exactly how massively geek that is. Thatâ€™s what I love about it.</p>\n\n<p><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437889/jerad-s-merantz-the-amazing-spider-man0010-SP_revison_small_ly2qaq.jpg\" alt=\"AmazingSpiderManMovieConcept\" /></p>","image":"http://res.cloudinary.com/adamsingle/image/upload/v1443437889/595635_eexxvd.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-01-20T23:29:58.000Z","created_by":1,"updated_at":"2015-09-28T20:58:12.000Z","updated_by":1,"published_at":"2013-01-20T23:29:58.000Z","published_by":1},{"id":16,"uuid":"b1a4d892-ece8-4469-be9d-82cd12bcae49","title":"Destiny's Push","slug":"destinys-push","markdown":"\nToday my situation changed. Due to circumstances outside my control, I will unfortunately have to leave Bifrost Studios around March. Iâ€™m hoping to still get Photon 2 done before I go, as well as release Valkyrie (previously Eir and Fire). So now, more than ever, I feel the need to get to work on my transformation. Especially the academic side of things. I need to start learning more about programming. More about Unity3D in particular. Itâ€™s my strongest skill, but there is so much more I could learn about the engine.\n\nBut I said I would address a workout program as well as a course today. Figure out my plan. So first of all, physical conditioning.\n\nI already run three times a week. Iâ€™ve been looking for a strength training routine for the other nights. [Convict Conditioning](http://adamsingle.com/nerd-fitness-and-my-inner-super-hero/ \"Nerd Fitness and my inner super hero\")Â gave me that. So hereâ€™s my week.\n\nMonday Push-ups and Leg Raises\n\nTuesday Run\n\nWednesday Pullups and Squats\n\nThursday Run\n\nFriday Headstand Pushups and Bridges\n\nSaturday Run\n\nSunday Sleep. Maybe.\n\nFor progress mapping, Iâ€™ll start a [google spreadsheet](https://docs.google.com/spreadsheet/ccc?key=0AqlPu7zxDX-mdHVFQlMxQmZTT0xwTTVudl9RRkh6VXc \"Spider-Man Transformation Training Progress\"). This will show the actual exercise Iâ€™m performing on each of the above days. For instance a Push-up is actually the 5th step in the Push-up sequence that ends with one armed push-ups. So for the first month at least Iâ€™ll be doing simple Wall Push-ups.\n\nNow, academically, I need to have an approach that is flexible. Iâ€™ve decided to re-read my C# Class Design Handbook. A fantastic book for any programmer or anyone learning to program, especially if theyâ€™ll be using C# specifically. But what Iâ€™m going to do this time is apply the [Drill Down](http://calnewport.com/blog/2012/10/26/mastering-linear-algebra-in-10-days-astounding-experiments-in-ultra-learning/ \"Drill Down Technique\")Â technique I mentioned in the previous post to each chapter. This will be a good test of the technique as well as how to fit it into my daily routine.\n\nSo, although it is possible I will not have a job in 2 months time, I am not sitting idly, nor panicking. I will be contacting developers in the Brisbane area, I will utilise social networks and connections Iâ€™ve made over the last 2 years and this website itself will also help. Things will work out. Life is for living, not worrying about. So long as I am constantly working to better myself, Iâ€™m moving forward. I have some contract work lined up for the year, and I believe I could get more if it came to it.\n\n\n","html":"<p>Today my situation changed. Due to circumstances outside my control, I will unfortunately have to leave Bifrost Studios around March. Iâ€™m hoping to still get Photon 2 done before I go, as well as release Valkyrie (previously Eir and Fire). So now, more than ever, I feel the need to get to work on my transformation. Especially the academic side of things. I need to start learning more about programming. More about Unity3D in particular. Itâ€™s my strongest skill, but there is so much more I could learn about the engine.</p>\n\n<p>But I said I would address a workout program as well as a course today. Figure out my plan. So first of all, physical conditioning.</p>\n\n<p>I already run three times a week. Iâ€™ve been looking for a strength training routine for the other nights. <a href=\"http://adamsingle.com/nerd-fitness-and-my-inner-super-hero/\" title=\"Nerd Fitness and my inner super hero\">Convict Conditioning</a>Â gave me that. So hereâ€™s my week.</p>\n\n<p>Monday Push-ups and Leg Raises</p>\n\n<p>Tuesday Run</p>\n\n<p>Wednesday Pullups and Squats</p>\n\n<p>Thursday Run</p>\n\n<p>Friday Headstand Pushups and Bridges</p>\n\n<p>Saturday Run</p>\n\n<p>Sunday Sleep. Maybe.</p>\n\n<p>For progress mapping, Iâ€™ll start a <a href=\"https://docs.google.com/spreadsheet/ccc?key=0AqlPu7zxDX-mdHVFQlMxQmZTT0xwTTVudl9RRkh6VXc\" title=\"Spider-Man Transformation Training Progress\">google spreadsheet</a>. This will show the actual exercise Iâ€™m performing on each of the above days. For instance a Push-up is actually the 5th step in the Push-up sequence that ends with one armed push-ups. So for the first month at least Iâ€™ll be doing simple Wall Push-ups.</p>\n\n<p>Now, academically, I need to have an approach that is flexible. Iâ€™ve decided to re-read my C# Class Design Handbook. A fantastic book for any programmer or anyone learning to program, especially if theyâ€™ll be using C# specifically. But what Iâ€™m going to do this time is apply the <a href=\"http://calnewport.com/blog/2012/10/26/mastering-linear-algebra-in-10-days-astounding-experiments-in-ultra-learning/\" title=\"Drill Down Technique\">Drill Down</a>Â technique I mentioned in the previous post to each chapter. This will be a good test of the technique as well as how to fit it into my daily routine.</p>\n\n<p>So, although it is possible I will not have a job in 2 months time, I am not sitting idly, nor panicking. I will be contacting developers in the Brisbane area, I will utilise social networks and connections Iâ€™ve made over the last 2 years and this website itself will also help. Things will work out. Life is for living, not worrying about. So long as I am constantly working to better myself, Iâ€™m moving forward. I have some contract work lined up for the year, and I believe I could get more if it came to it.</p>","image":"http://res.cloudinary.com/adamsingle/image/upload/v1443437821/No_Excuses_akinox.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-01-21T23:58:39.000Z","created_by":1,"updated_at":"2013-03-24T20:57:25.000Z","updated_by":1,"published_at":"2013-01-21T23:58:39.000Z","published_by":1},{"id":17,"uuid":"1fb854a9-cede-4e33-8186-690709b23bea","title":"#1GAM - Update 2: Not going to make it","slug":"1gam-update-2","markdown":"\nI suspected this would be the case, but now I know for sure. There is no way Iâ€™m going to get a game completed every month. If youâ€™ve read this blog sequentially, youâ€™ll know that life has thrown anotherâ€¦challenge at me lately in the form of needing to find a new job. As with all new jobs, itâ€™s not just a matter of finding one and going Â back to the old routine. There are always teething periods and adjustments. Add to that the fact that I never got an opporunity to start my Januray game and I think the realistic thing is to accept that I donâ€™t have a lifestyle that will allow me to create a game every month.\n\nHowever, a good friend of mine, Harrison (@hcwool), suggested I try making it a One Game A Quarter challenge. I like that idea. As far as Iâ€™m concerned if I get one game done, and published on some public platforms like Kongregate or Newgrounds, then Iâ€™m doing better than ever before. So Iâ€™ll aim at 4 games this year instead of 12.\n\nSo, I need to pick a game to do first then. I need to focus more on making one that I really want to see made, instead if just trying to think of 12 ideas.\n\nThere are a couple of ideas from my [first update](http://adamsingle.com/onegameamonth-update-1/ \"#OneGameAMonth â€“ Update 1\")Â that I really like. Iâ€™m currently going through a big Shadowrun obsession. Again. So I definitely want to do something based off the matrix portion of that game in some way. Something more of a strategy/puzzle game but with some â€œRPGâ€ elements in that you can outfit your deck with different programs before you start and improve them afterwards.\n\nIâ€™m also very keen for the turn-based vehicle game (which was the â€œSea Battlesâ€ one on the list) but Iâ€™m over the boats idea. Iâ€™m more keen to do a Gorka Morka inspired game. Desert, bolted together trucks, men in makeshift armourÂ clinging to the sides shooting at each other. Think Mad Max. Again, this would have RPG elements, but for this scope I may scale that right down to just â€œbuildingâ€ your team at the start from a points system. This one definitely needs to be multiplayer. For two reasons. One, thatâ€™d be cool. Secondly, it cuts AI out of the scope.\n\nLastly, for now, I really want to do the Japanese point and click adventure. This one feels like a true chance to flex my design muscles and show what I can do.\n\nAnd that leaves one last spot for the year, which is fine, I committed myself somewhat to making two games as part of an experiment with some â€œtweepsâ€. This is supposed to happen later in the year, so one of the above games will probably be dropped for those. Iâ€™ll do another post when more details are known on those. So I need to do these in the order of preference knowing that one will probably be dropped. Iâ€™d say the Japanese P&C is probably the one I want to make the most, but it needs the most time spent on design. Which means not only will I do it second, but I need the first one to be short and sweet so that I can use some of that quarter to design it. Iâ€™m also a month down for this first quarter, so this first one needs to be very simple to implement.\n\nI guess that makes the decision for me. Iâ€™ll make the Shadowrun Matrix inspired strategy/puzzler first. Then the Japanese P&C and then weâ€™ll see how Iâ€™m going from there.\n\nChat soon,\n\nAdsy\n\n\n","html":"<p>I suspected this would be the case, but now I know for sure. There is no way Iâ€™m going to get a game completed every month. If youâ€™ve read this blog sequentially, youâ€™ll know that life has thrown anotherâ€¦challenge at me lately in the form of needing to find a new job. As with all new jobs, itâ€™s not just a matter of finding one and going Â back to the old routine. There are always teething periods and adjustments. Add to that the fact that I never got an opporunity to start my Januray game and I think the realistic thing is to accept that I donâ€™t have a lifestyle that will allow me to create a game every month.</p>\n\n<p>However, a good friend of mine, Harrison (@hcwool), suggested I try making it a One Game A Quarter challenge. I like that idea. As far as Iâ€™m concerned if I get one game done, and published on some public platforms like Kongregate or Newgrounds, then Iâ€™m doing better than ever before. So Iâ€™ll aim at 4 games this year instead of 12.</p>\n\n<p>So, I need to pick a game to do first then. I need to focus more on making one that I really want to see made, instead if just trying to think of 12 ideas.</p>\n\n<p>There are a couple of ideas from my <a href=\"http://adamsingle.com/onegameamonth-update-1/\" title=\"#OneGameAMonth â€“ Update 1\">first update</a>Â that I really like. Iâ€™m currently going through a big Shadowrun obsession. Again. So I definitely want to do something based off the matrix portion of that game in some way. Something more of a strategy/puzzle game but with some â€œRPGâ€ elements in that you can outfit your deck with different programs before you start and improve them afterwards.</p>\n\n<p>Iâ€™m also very keen for the turn-based vehicle game (which was the â€œSea Battlesâ€ one on the list) but Iâ€™m over the boats idea. Iâ€™m more keen to do a Gorka Morka inspired game. Desert, bolted together trucks, men in makeshift armourÂ clinging to the sides shooting at each other. Think Mad Max. Again, this would have RPG elements, but for this scope I may scale that right down to just â€œbuildingâ€ your team at the start from a points system. This one definitely needs to be multiplayer. For two reasons. One, thatâ€™d be cool. Secondly, it cuts AI out of the scope.</p>\n\n<p>Lastly, for now, I really want to do the Japanese point and click adventure. This one feels like a true chance to flex my design muscles and show what I can do.</p>\n\n<p>And that leaves one last spot for the year, which is fine, I committed myself somewhat to making two games as part of an experiment with some â€œtweepsâ€. This is supposed to happen later in the year, so one of the above games will probably be dropped for those. Iâ€™ll do another post when more details are known on those. So I need to do these in the order of preference knowing that one will probably be dropped. Iâ€™d say the Japanese P&amp;C is probably the one I want to make the most, but it needs the most time spent on design. Which means not only will I do it second, but I need the first one to be short and sweet so that I can use some of that quarter to design it. Iâ€™m also a month down for this first quarter, so this first one needs to be very simple to implement.</p>\n\n<p>I guess that makes the decision for me. Iâ€™ll make the Shadowrun Matrix inspired strategy/puzzler first. Then the Japanese P&amp;C and then weâ€™ll see how Iâ€™m going from there.</p>\n\n<p>Chat soon,</p>\n\n<p>Adsy</p>","image":"http://res.cloudinary.com/adamsingle/image/upload/v1443437820/How-to-spot-a-deadbeat-client-the-too-busy-to-breathe_exy7eh.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-01-28T07:37:53.000Z","created_by":1,"updated_at":"2013-03-24T19:41:01.000Z","updated_by":1,"published_at":"2013-01-28T07:37:53.000Z","published_by":1},{"id":18,"uuid":"86453306-7e6c-4966-9a0f-d38a12d7d397","title":"7Bit Hero","slug":"7bit-hero","markdown":"\n7Bit Hero is a bit pop band that put on an amazing live show. Their music is emotive, expressive, and above all else, fun. Itâ€™s all about embracing the good things about gaming. To that end, they actually incorporate multiplayer gaming into the live show. While the band plays, audience members can use a smartphone app to hook into the bands network and partake in simple, clean, fun multiplayer experiences that are projected behind or around the band. Thatâ€™s where I come in. Iâ€™m the guy that makes the app and the server side that manages the interactions and winners.\n\n[![QLDStateLibrary](http://res.cloudinary.com/adamsingle/image/upload/v1443437690/QLDStateLibrary_z6iuad.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437690/QLDStateLibrary_z6iuad.jpg)\n\nItâ€™s very new tech, the games are super simple, and the app only has functionality when at a live show. But we have plans to expand on that. 7Bit Hero recently played the Festival of Voices in Tasmania, and were incredibly honoured to play at the inaugural PAX Australia. The response was fantastic, and we really hope to get a chance to travel to the States and perform at the other PAX events.\n\n[![FestivalOfVoicesPlaying](http://res.cloudinary.com/adamsingle/image/upload/v1443437691/FestivalOfVoicesPlaying_vjoxsm.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437691/FestivalOfVoicesPlaying_vjoxsm.jpg)\n\nÂ \n\nMy origins with 7Bit Hero:\n\nLike all good stories, weâ€™ll start at the start.\n\nBy a chance tweet, my life was steered into the path of 7Bit Hero. For those that do not know what or who 7Bit Hero are, take a look at [their website](http://7bithero.com/ \"7Bit Hero\"). Or, if youâ€™re too lazy to press that link and switch tabs, let me just tell you. They are an amazing three-piece band that bring chiptune music to a whole new level. They are gamers, that write songs that sound like games and are about games and/or gamers. More than that, they blend games into their live performance. Using your phone, you get to join a multiplayer game that is happening inside the film clip being shown on a massive screen behind the band that is for the song being played live on stage at that moment. And thatâ€™s where I come in.\n\n[![FestivalOfVoicesGrindForGold](http://res.cloudinary.com/adamsingle/image/upload/v1443437692/FestivalOfVoicesGrindForGold_xdcyza.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437692/FestivalOfVoicesGrindForGold_xdcyza.jpg)\n\nAs I mentioned, a chance tweet from the brains, soul and voice of 7Bit Hero, [Hans](https://twitter.com/hunz \"Hans twitter\"), tweeted a question about probability. I answered and a conversation ensued which led to me joining the team to help extend the functionality of the planned games. We recently had our first show with this new technology. That was a massive couple of weeks. I wonâ€™t lie to you, I was pretty fried by the end of the show. Many nights up till 2, 3 even 4am on that last night before the show. Unfortunately the original coder, who had done a fantastic job of laying the foundation for the games, could no longer work on it. I was, and still am for that matter, only doing this part-time since I was still working full-time with Bifrost Studios, and we were down to just a few weeks before the show with a lot of work still to do. But we got there. I managed to get a number of games implemented. we had tested them on the hardware. We had managed to get 9 devices together to test at once. This was nowhere near the amount we were expecting on the night, but it was the best we could do. Since we were still adding features into the application right up to the bell, we couldnâ€™t submit it to Apple and have it show up on the store in time, so we had to use Testflight and as many of the 100 devices we were allowed to test with under the Apple Developers Program. We quickly hit that limit. On the night we had at least 200 devices with the app installed ready to play (including Android).\n\n[![EatLoot](http://res.cloudinary.com/adamsingle/image/upload/v1443437884/EatLoot-e1362571754141_fikkjc.png)](http://adamsingle.com/wp-content/uploads/2013/03/EatLoot.png)\n\nAs the first song started, my heart dropped. We were getting nothing. None of the devices were able to see the game server. This had not happened in any testing. I had expected some lag, or some bugs, but I hadnâ€™t expected dead games. To say I was heartbroken would be an understatement. I had worked myself to the ground getting this to a state that could show people what 7Bit Hero can do. To hint at what weâ€™ll do in future, where we intend to go, the possibilities. But something unexpected to do with our hardware had kicked the legs out from under us.\n\nThis was where I got to see exactly how amazing a man Hans is. I already knew, from the way he had dealt with me and others on this project, that he was a fantastic man to be working with. The motivational emails alone showed me that. But at this point he rallied the crowd behind him and, along with the other two members of the band, played a phenomenal show. Our VJ, [Jaymis](https://twitter.com/jaymis), also showed me just what he was capable of, adding to the performance with video and lighting. These guys were truly amazing. I felt incredible disappointed. I felt that I had let them down somehow. Iâ€™m quite sure it wasnâ€™t my code, that had been tested ad nauseum, but the games part of the show was my responsibility, and it was the only part that didnâ€™t perform. We tried a few things and for each of the games we opened up the server and tried getting some connections again, but nothing worked fur us.\n\n[![PileOfCoins](http://res.cloudinary.com/adamsingle/image/upload/v1443437823/PileOfCoins-e1362571852854_wzifxs.png)](http://adamsingle.com/wp-content/uploads/2013/03/PileOfCoins.png)\n\nDespite that, as I said, the show was fantastic, the crowd loved it, the reviewers loved it and everyone got a strong idea of what it would be with the games happening. We still showed the video that should have had their avatars in them, shooting laser beams at pyramids or spewing gold coins in a voxelated (is that a word? it should be) love heart.\n\n[![SpewCoinsCropped](http://res.cloudinary.com/adamsingle/image/upload/v1443437822/SpewCoinsCropped_xlfvog.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437822/SpewCoinsCropped_xlfvog.jpg)\n\nFast forward many months and 7Bit Hero is playing the Festival of Voices in Tasmania. A lot has happened to me in the interim. Iâ€™m no longer at Bifrost Studios, and picking up as many contracts as I can, both to pull in some money, and to make a name for myself. Eventually I managed to find some time to restructure the code and change the networking architecture to a peer-to-peer one. This was all in place only a few days before the show, and was essentially untested except for on the few devices I had at home, and a rehearsal before the band flew out. But it worked beautifully. We had games with 32 players entering perfectly and playing together. Only one bug marred the night. The code to choose the winner was flawed, and the list of players that should have contained everyones collective scores from all games over the course of the night had 0 points for everyone. This meant that although it selected a winner, it essentially was random (the first on the list after it was run through a sorting algorithm where every element had the same value). So yay to Fluff, but sadly weâ€™ll never know who really one that night.\n\nÂ \n\n[![WinnerFestivalOfVoices](http://res.cloudinary.com/adamsingle/image/upload/v1443437690/WinnerFestivalOfVoices_vr133j.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437690/WinnerFestivalOfVoices_vr133j.jpg)\n\nThis obviously needed to be fixed up before PAX the following weekend. And it was. PAX provided us with a different set of challenges. Unlike the Tasmanian venue, we had many competing wifi signals. Generally speaking the airwaves were thick with signals of all kinds. This caused a lot of issues with players being unable to connect to the network, or being kicked off after joining. Although we managed to stabalise it to some extent, we never got a full game. The closest was 10 out of a ma 16 players. But everyone had a blast and most importantly, we had a winner! yay MAPLE!\n\nÂ \n\n[![PAXAusWinner](http://res.cloudinary.com/adamsingle/image/upload/v1443437689/PAXAusWinner_jwpo9x.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437689/PAXAusWinner_jwpo9x.jpg)\n\nÂ \n\nNow that we have the foundations working, weâ€™ll get someone cracking on the hardware to eliminate the issues we had at PAX. While thatâ€™s happening, Hans and I will get to work extending the features. Weâ€™ll start adding some coop team games like a tug-of-war, as well as an extended list of interactions we can have with those not in a game. Since we often have 60 to 100 people connected to the network, while only 8, 16 or 32 get to play any given game, we want to work on ways to involve the rest of the audience. Even if itâ€™s just having all their phones flash like crazy at certain points. There are so many possibilities, and it never gets boring. Plus thereâ€™s the offline game we have started designing ï¿½ï¿½\n\nHuge thanks to Jasmin Swilks Photography and Phil Kitt Photography for the great photos.\n\n[nggallery id=8]\n\nÂ \n\nÂ \n\nÂ \n\n\n","html":"<p>7Bit Hero is a bit pop band that put on an amazing live show. Their music is emotive, expressive, and above all else, fun. Itâ€™s all about embracing the good things about gaming. To that end, they actually incorporate multiplayer gaming into the live show. While the band plays, audience members can use a smartphone app to hook into the bands network and partake in simple, clean, fun multiplayer experiences that are projected behind or around the band. Thatâ€™s where I come in. Iâ€™m the guy that makes the app and the server side that manages the interactions and winners.</p>\n\n<p><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437690/QLDStateLibrary_z6iuad.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437690/QLDStateLibrary_z6iuad.jpg\" alt=\"QLDStateLibrary\" title=\"\" /></a></p>\n\n<p>Itâ€™s very new tech, the games are super simple, and the app only has functionality when at a live show. But we have plans to expand on that. 7Bit Hero recently played the Festival of Voices in Tasmania, and were incredibly honoured to play at the inaugural PAX Australia. The response was fantastic, and we really hope to get a chance to travel to the States and perform at the other PAX events.</p>\n\n<p><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437691/FestivalOfVoicesPlaying_vjoxsm.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437691/FestivalOfVoicesPlaying_vjoxsm.jpg\" alt=\"FestivalOfVoicesPlaying\" title=\"\" /></a></p>\n\n<p>My origins with 7Bit Hero:</p>\n\n<p>Like all good stories, weâ€™ll start at the start.</p>\n\n<p>By a chance tweet, my life was steered into the path of 7Bit Hero. For those that do not know what or who 7Bit Hero are, take a look at <a href=\"http://7bithero.com/\" title=\"7Bit Hero\">their website</a>. Or, if youâ€™re too lazy to press that link and switch tabs, let me just tell you. They are an amazing three-piece band that bring chiptune music to a whole new level. They are gamers, that write songs that sound like games and are about games and/or gamers. More than that, they blend games into their live performance. Using your phone, you get to join a multiplayer game that is happening inside the film clip being shown on a massive screen behind the band that is for the song being played live on stage at that moment. And thatâ€™s where I come in.</p>\n\n<p><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437692/FestivalOfVoicesGrindForGold_xdcyza.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437692/FestivalOfVoicesGrindForGold_xdcyza.jpg\" alt=\"FestivalOfVoicesGrindForGold\" title=\"\" /></a></p>\n\n<p>As I mentioned, a chance tweet from the brains, soul and voice of 7Bit Hero, <a href=\"https://twitter.com/hunz\" title=\"Hans twitter\">Hans</a>, tweeted a question about probability. I answered and a conversation ensued which led to me joining the team to help extend the functionality of the planned games. We recently had our first show with this new technology. That was a massive couple of weeks. I wonâ€™t lie to you, I was pretty fried by the end of the show. Many nights up till 2, 3 even 4am on that last night before the show. Unfortunately the original coder, who had done a fantastic job of laying the foundation for the games, could no longer work on it. I was, and still am for that matter, only doing this part-time since I was still working full-time with Bifrost Studios, and we were down to just a few weeks before the show with a lot of work still to do. But we got there. I managed to get a number of games implemented. we had tested them on the hardware. We had managed to get 9 devices together to test at once. This was nowhere near the amount we were expecting on the night, but it was the best we could do. Since we were still adding features into the application right up to the bell, we couldnâ€™t submit it to Apple and have it show up on the store in time, so we had to use Testflight and as many of the 100 devices we were allowed to test with under the Apple Developers Program. We quickly hit that limit. On the night we had at least 200 devices with the app installed ready to play (including Android).</p>\n\n<p><a href=\"http://adamsingle.com/wp-content/uploads/2013/03/EatLoot.png\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437884/EatLoot-e1362571754141_fikkjc.png\" alt=\"EatLoot\" title=\"\" /></a></p>\n\n<p>As the first song started, my heart dropped. We were getting nothing. None of the devices were able to see the game server. This had not happened in any testing. I had expected some lag, or some bugs, but I hadnâ€™t expected dead games. To say I was heartbroken would be an understatement. I had worked myself to the ground getting this to a state that could show people what 7Bit Hero can do. To hint at what weâ€™ll do in future, where we intend to go, the possibilities. But something unexpected to do with our hardware had kicked the legs out from under us.</p>\n\n<p>This was where I got to see exactly how amazing a man Hans is. I already knew, from the way he had dealt with me and others on this project, that he was a fantastic man to be working with. The motivational emails alone showed me that. But at this point he rallied the crowd behind him and, along with the other two members of the band, played a phenomenal show. Our VJ, <a href=\"https://twitter.com/jaymis\">Jaymis</a>, also showed me just what he was capable of, adding to the performance with video and lighting. These guys were truly amazing. I felt incredible disappointed. I felt that I had let them down somehow. Iâ€™m quite sure it wasnâ€™t my code, that had been tested ad nauseum, but the games part of the show was my responsibility, and it was the only part that didnâ€™t perform. We tried a few things and for each of the games we opened up the server and tried getting some connections again, but nothing worked fur us.</p>\n\n<p><a href=\"http://adamsingle.com/wp-content/uploads/2013/03/PileOfCoins.png\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437823/PileOfCoins-e1362571852854_wzifxs.png\" alt=\"PileOfCoins\" title=\"\" /></a></p>\n\n<p>Despite that, as I said, the show was fantastic, the crowd loved it, the reviewers loved it and everyone got a strong idea of what it would be with the games happening. We still showed the video that should have had their avatars in them, shooting laser beams at pyramids or spewing gold coins in a voxelated (is that a word? it should be) love heart.</p>\n\n<p><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437822/SpewCoinsCropped_xlfvog.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437822/SpewCoinsCropped_xlfvog.jpg\" alt=\"SpewCoinsCropped\" title=\"\" /></a></p>\n\n<p>Fast forward many months and 7Bit Hero is playing the Festival of Voices in Tasmania. A lot has happened to me in the interim. Iâ€™m no longer at Bifrost Studios, and picking up as many contracts as I can, both to pull in some money, and to make a name for myself. Eventually I managed to find some time to restructure the code and change the networking architecture to a peer-to-peer one. This was all in place only a few days before the show, and was essentially untested except for on the few devices I had at home, and a rehearsal before the band flew out. But it worked beautifully. We had games with 32 players entering perfectly and playing together. Only one bug marred the night. The code to choose the winner was flawed, and the list of players that should have contained everyones collective scores from all games over the course of the night had 0 points for everyone. This meant that although it selected a winner, it essentially was random (the first on the list after it was run through a sorting algorithm where every element had the same value). So yay to Fluff, but sadly weâ€™ll never know who really one that night.</p>\n\n<p><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437690/WinnerFestivalOfVoices_vr133j.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437690/WinnerFestivalOfVoices_vr133j.jpg\" alt=\"WinnerFestivalOfVoices\" title=\"\" /></a></p>\n\n<p>This obviously needed to be fixed up before PAX the following weekend. And it was. PAX provided us with a different set of challenges. Unlike the Tasmanian venue, we had many competing wifi signals. Generally speaking the airwaves were thick with signals of all kinds. This caused a lot of issues with players being unable to connect to the network, or being kicked off after joining. Although we managed to stabalise it to some extent, we never got a full game. The closest was 10 out of a ma 16 players. But everyone had a blast and most importantly, we had a winner! yay MAPLE!</p>\n\n<p><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437689/PAXAusWinner_jwpo9x.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437689/PAXAusWinner_jwpo9x.jpg\" alt=\"PAXAusWinner\" title=\"\" /></a></p>\n\n<p>Now that we have the foundations working, weâ€™ll get someone cracking on the hardware to eliminate the issues we had at PAX. While thatâ€™s happening, Hans and I will get to work extending the features. Weâ€™ll start adding some coop team games like a tug-of-war, as well as an extended list of interactions we can have with those not in a game. Since we often have 60 to 100 people connected to the network, while only 8, 16 or 32 get to play any given game, we want to work on ways to involve the rest of the audience. Even if itâ€™s just having all their phones flash like crazy at certain points. There are so many possibilities, and it never gets boring. Plus thereâ€™s the offline game we have started designing ï¿½ï¿½</p>\n\n<p>Huge thanks to Jasmin Swilks Photography and Phil Kitt Photography for the great photos.</p>\n\n<p>[nggallery id=8]</p>","image":"http://res.cloudinary.com/adamsingle/image/upload/v1443437688/FestivalOfVoicesAcceptedBanner1_n1zbdv.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-03-06T22:03:52.000Z","created_by":1,"updated_at":"2015-09-28T20:58:05.000Z","updated_by":1,"published_at":"2013-03-06T22:03:52.000Z","published_by":1},{"id":19,"uuid":"0103adca-a1e0-48fb-9597-040bdf4c26dc","title":"Dovie'andi se tovya sagain","slug":"dovieandi-se-tovya-sagain","markdown":"\n### <span style=\"text-align: left; color: #666666; font-family: 'Helvetica Neue', Helvetica, sans-serif; font-size: 13px; line-height: 20px;\">I have some dreams. We all do of course. If you donâ€™t, you should get some, theyâ€™re nice. Except for bad ones obviously. Dreams are what drive us, the pursuit of them is how we better ourselves. I would encourage you to have dreams for each aspect of your life. Write them down. Stick them on the wall. Iâ€™ve just moved house, but as soon as my office is set up, Iâ€™m doing just that.</span>\n\nPersonally, I have dreams for the man I want to be physically, Iâ€™ve talked [about those before](http://adamsingle.com/nerd-fitness-and-my-inner-super-hero/ \"Nerd Fitness and my inner super hero\"). They are ambitious dreams, and I expect Iâ€™ll be chasing them until Iâ€™m too old to run. Iâ€™ve hit some speed bumps with those, and Iâ€™ll write a post about that soon.\n\nI have dreams for the father I want to be. My amazing wife consumes articles and books on parenting like I do on game development and programming, and I occasionally manage to catch some of those. Itâ€™s one of the most challenging dreams Iâ€™ve ever had. Itâ€™s exhausting and difficult, and the pursuit of it is almost constant, yet ultimately itâ€™s the most rewarding challenge Iâ€™ve ever attempted. I may begin writing some posts on this too in the near future.\n\n[![I-have-a-dream-99c-dreams](http://res.cloudinary.com/adamsingle/image/upload/v1443437819/I-have-a-dream-99c-dreams_jzlrmf.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437819/I-have-a-dream-99c-dreams_jzlrmf.jpg)\n\nBut this post is about my dreams for the man I want to be professionally. The developer I want to become. The games I want to make. The community I want to be a part of and help build for future generations (fingers crossed my son follows my footsteps, I would love to have a Family Game Jam event one day). As Iâ€™ve said before, as this whole website is about really, I have set myself up as a contractor. A dev for hire. A mercenary coder! And so far things have worked out well for me. By luck I came across [Hans van Vliet](https://twitter.com/hunz \"Hans Twitter\") and [7Bit Hero](7bithero.com \"7bithero\") and I have the opportunity to be a part of something amazing. That project has me very excited about the future. I had an opportunity to work with [League of Geeks](http://www.leagueofgeeks.com/ \"League of Geeks\") on one of my most anticipated titles of the foreseeable future, [Armello](http://www.facebook.com/ArmelloGame?fref=ts \"Armello Facebook\"), but sadly had too much on my plate already and had to pass. So disappointing, I would love to contribute to that game any way I can, and Iâ€™m hoping another opportunity will present itself.\n\nBut thatâ€™s not quite enough for me, long term. I want to create a studio of my own. I want to create some of the games that are rattling around in my head. Obviously, â€œa studioâ€ can be a fairly loose term. I could register a company today and start making my games and voila!, I have my own studio. But Iâ€™m looking to create a company with a certain ethos, a particular mission.\n\nOnce again, luck has cast itâ€™s fickle gaze upon me. For those of you who know me well, youâ€™ll understand Iâ€™m suitably cautious of this turn of luck. Iâ€™m not a lucky man. Quite the opposite. The laws of probability tend to warp around me in a bad way. Like a reverse Matrim Cauthon. But for now, the dice appear to be showing my pips, so Iâ€™m running with it. By luck, Iâ€™ve found some people who share my vision. Who are tired of working on other peoples visions, who want to hold the destiny of the games they are making in their own hands.\n\nI have a pair of talented artists that have been in the industry over a decade each, who have worked with some of the elite companies in Australian game dev history (such as THQ, Krome and Auran), and, perhaps like myself, suffer from a touch of bad luck.\n\nI have found a writer who has never made a game before, or written for one in any way, but is phenomenally talented at his craft. When I say found, he moved into my bedroom when I was two, and it took me 16 years to get my own space. I have been trying to convince my brother Daivd to write a game with me for years. I finally got through!\n\nI have a musician who again has never made a game (well, other than starting a few RPG Maker projects back in the day). A natural wizard at creating audio masterpieces, [Andy McLucas](http://www.facebook.com/mclucasmusician?fref=ts \"MC Facebook\") is ripped, rearing and eager to tackle the challenge of creating amazing game music.\n\nSo Iâ€™ve got a mixed bag. Iâ€™ve got guys who have been in the industry for many years. Iâ€™ve got myself, who has been in the industry only a few years, and Iâ€™ve got a pair of outside talents with no industry experience. But we are all old school gamers. Weâ€™re the Replacements. Think of me as Gene Hackmen (as the programmer do I also get to be Keanu Reaves?).\n\n[![the-replacements](http://res.cloudinary.com/adamsingle/image/upload/v1443437818/the-replacements_jcbosc.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437818/the-replacements_jcbosc.jpg)\n\nÂ \n\nWe remember the games of yesteryear. We remember the plain, solid fun of Donkey Kong Country. We remember the hours of enjoyment in SNES RPGs like Secret of Mana and Secret of Evermore. We remember Rayman. We remember Uniracer. We remember Super Bomberman. We remember the adventures of Sam and Max, Day of the Tentacle, Secret of Monkey Island, Full Throttle. We remember Might and Magic (even earlier than 6!) We remember the amazing Heroes of Might and Magic 3 (hell, we remember Heroes 2!).\n\nWe remember the quality gaming experiences of our youth and we intend to capture them again. We intend to bring these and new experiences to the mobile/tablet space.\n\n[![TVGY-80s](http://res.cloudinary.com/adamsingle/image/upload/v1443437816/TVGY-80s_hpkcof.png)](http://res.cloudinary.com/adamsingle/image/upload/v1443437816/TVGY-80s_hpkcof.png)\n\nIâ€™m currently working on design logs for some turn based strategy games that I hope will capture the joy I experienced playing table top games as a young fellow. But before that, we are in pre production for two games. Our first will be a solid platforming experience, focusing on perfecting [virtual sensation](http://www.steveswink.com/principles-of-virtual-sensation/ \"Virtual Sensation\") and stunning visuals. Platformers never get old, they never die. Weâ€™ll be creating a new world and characters for players to discover on their portable devices. We are also working hard on a point and click that focuses on narrative themes and elements that are not common to the gaming world. Not surprisingly, my brother said it best, so Iâ€™ll simply use his words:\n\n> Â IÂ amÂ disappointed that games are so often polarised as â€œcasual/Â familyâ€ and â€œmatureâ€ (readâ€œfrivolousâ€ and â€œseriousâ€). With the latter, it seems that unless it has some kind of violence or, for lack of a better word, offensive content, it shouldnâ€™t be considered as mature, and is instead something for children.\n> \n> What about mature games that donâ€™t rely on violence or sex to sell them?Â Â Where are the intelligent narratives that are not alsoÂ muscle-bound and sexed? Â Where can I playÂ a narrativeÂ that demands more of me mentally while stepping clear of the vulgar muck?Â So-called â€œmature gamesâ€ are, in fact, anything but. Â In truth they descend to trite and often offensive adolescent power fantasies.Â I think of God of War and Gears of War and Devil May Cry and Call of Duty and so on (see Sesslerâ€™s reviews of [DMC](http://www.youtube.com/watch?v=rRyN6qUZ9Mc \"Sessler Review - DMC\")Â for good illustration). Iâ€™m tired of seeing â€œmatureâ€ equated with â€œviolentâ€.\n\nDefinitely check out that (and all other) youtube videos from [Adam Sessler](https://twitter.com/AdamSessler \"Adam Sessler Twitter\")Â and [Rev3Games](http://www.youtube.com/user/Rev3Games?feature=watch \"Rev3Games YouTube channel\").\n\nI will continue to post development updates on both these games here. We may have some polls and feedback options as well, so please, never hesitate to email me or comment these posts with thoughts, ideas, or suggestions. Iâ€™m always happy to talk shop. Needless to say Iâ€™m very excited. Chasing your dreams, no matter how many you have, or how big they are, is always exciting.\n\nSo, we donâ€™t have a name yet. We donâ€™t officially exist as a corporate entity of any kind yet. But we have a mission, we have a vision and we are working. I can hear the dice rolling.\n\n\n","html":"<h3 id=\"spanstyletextalignleftcolor666666fontfamilyhelveticaneuehelveticasansseriffontsize13pxlineheight20pxihavesomedreamswealldoofcourseifyoudontyoushouldgetsometheyreniceexceptforbadonesobviouslydreamsarewhatdriveusthepursuitofthemishowwebetterourselvesiwouldencourageyoutohavedreamsforeachaspectofyourlifewritethemdownstickthemonthewallivejustmovedhousebutassoonasmyofficeissetupimdoingjustthatspan\"><span style=\"text-align: left; color: #666666; font-family: 'Helvetica Neue', Helvetica, sans-serif; font-size: 13px; line-height: 20px;\">I have some dreams. We all do of course. If you donâ€™t, you should get some, theyâ€™re nice. Except for bad ones obviously. Dreams are what drive us, the pursuit of them is how we better ourselves. I would encourage you to have dreams for each aspect of your life. Write them down. Stick them on the wall. Iâ€™ve just moved house, but as soon as my office is set up, Iâ€™m doing just that.</span></h3>\n\n<p>Personally, I have dreams for the man I want to be physically, Iâ€™ve talked <a href=\"http://adamsingle.com/nerd-fitness-and-my-inner-super-hero/\" title=\"Nerd Fitness and my inner super hero\">about those before</a>. They are ambitious dreams, and I expect Iâ€™ll be chasing them until Iâ€™m too old to run. Iâ€™ve hit some speed bumps with those, and Iâ€™ll write a post about that soon.</p>\n\n<p>I have dreams for the father I want to be. My amazing wife consumes articles and books on parenting like I do on game development and programming, and I occasionally manage to catch some of those. Itâ€™s one of the most challenging dreams Iâ€™ve ever had. Itâ€™s exhausting and difficult, and the pursuit of it is almost constant, yet ultimately itâ€™s the most rewarding challenge Iâ€™ve ever attempted. I may begin writing some posts on this too in the near future.</p>\n\n<p><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437819/I-have-a-dream-99c-dreams_jzlrmf.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437819/I-have-a-dream-99c-dreams_jzlrmf.jpg\" alt=\"I-have-a-dream-99c-dreams\" title=\"\" /></a></p>\n\n<p>But this post is about my dreams for the man I want to be professionally. The developer I want to become. The games I want to make. The community I want to be a part of and help build for future generations (fingers crossed my son follows my footsteps, I would love to have a Family Game Jam event one day). As Iâ€™ve said before, as this whole website is about really, I have set myself up as a contractor. A dev for hire. A mercenary coder! And so far things have worked out well for me. By luck I came across <a href=\"https://twitter.com/hunz\" title=\"Hans Twitter\">Hans van Vliet</a> and <a href=\"7bithero.com\" title=\"7bithero\">7Bit Hero</a> and I have the opportunity to be a part of something amazing. That project has me very excited about the future. I had an opportunity to work with <a href=\"http://www.leagueofgeeks.com/\" title=\"League of Geeks\">League of Geeks</a> on one of my most anticipated titles of the foreseeable future, <a href=\"http://www.facebook.com/ArmelloGame?fref=ts\" title=\"Armello Facebook\">Armello</a>, but sadly had too much on my plate already and had to pass. So disappointing, I would love to contribute to that game any way I can, and Iâ€™m hoping another opportunity will present itself.</p>\n\n<p>But thatâ€™s not quite enough for me, long term. I want to create a studio of my own. I want to create some of the games that are rattling around in my head. Obviously, â€œa studioâ€ can be a fairly loose term. I could register a company today and start making my games and voila!, I have my own studio. But Iâ€™m looking to create a company with a certain ethos, a particular mission.</p>\n\n<p>Once again, luck has cast itâ€™s fickle gaze upon me. For those of you who know me well, youâ€™ll understand Iâ€™m suitably cautious of this turn of luck. Iâ€™m not a lucky man. Quite the opposite. The laws of probability tend to warp around me in a bad way. Like a reverse Matrim Cauthon. But for now, the dice appear to be showing my pips, so Iâ€™m running with it. By luck, Iâ€™ve found some people who share my vision. Who are tired of working on other peoples visions, who want to hold the destiny of the games they are making in their own hands.</p>\n\n<p>I have a pair of talented artists that have been in the industry over a decade each, who have worked with some of the elite companies in Australian game dev history (such as THQ, Krome and Auran), and, perhaps like myself, suffer from a touch of bad luck.</p>\n\n<p>I have found a writer who has never made a game before, or written for one in any way, but is phenomenally talented at his craft. When I say found, he moved into my bedroom when I was two, and it took me 16 years to get my own space. I have been trying to convince my brother Daivd to write a game with me for years. I finally got through!</p>\n\n<p>I have a musician who again has never made a game (well, other than starting a few RPG Maker projects back in the day). A natural wizard at creating audio masterpieces, <a href=\"http://www.facebook.com/mclucasmusician?fref=ts\" title=\"MC Facebook\">Andy McLucas</a> is ripped, rearing and eager to tackle the challenge of creating amazing game music.</p>\n\n<p>So Iâ€™ve got a mixed bag. Iâ€™ve got guys who have been in the industry for many years. Iâ€™ve got myself, who has been in the industry only a few years, and Iâ€™ve got a pair of outside talents with no industry experience. But we are all old school gamers. Weâ€™re the Replacements. Think of me as Gene Hackmen (as the programmer do I also get to be Keanu Reaves?).</p>\n\n<p><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437818/the-replacements_jcbosc.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437818/the-replacements_jcbosc.jpg\" alt=\"the-replacements\" title=\"\" /></a></p>\n\n<p>We remember the games of yesteryear. We remember the plain, solid fun of Donkey Kong Country. We remember the hours of enjoyment in SNES RPGs like Secret of Mana and Secret of Evermore. We remember Rayman. We remember Uniracer. We remember Super Bomberman. We remember the adventures of Sam and Max, Day of the Tentacle, Secret of Monkey Island, Full Throttle. We remember Might and Magic (even earlier than 6!) We remember the amazing Heroes of Might and Magic 3 (hell, we remember Heroes 2!).</p>\n\n<p>We remember the quality gaming experiences of our youth and we intend to capture them again. We intend to bring these and new experiences to the mobile/tablet space.</p>\n\n<p><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437816/TVGY-80s_hpkcof.png\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437816/TVGY-80s_hpkcof.png\" alt=\"TVGY-80s\" title=\"\" /></a></p>\n\n<p>Iâ€™m currently working on design logs for some turn based strategy games that I hope will capture the joy I experienced playing table top games as a young fellow. But before that, we are in pre production for two games. Our first will be a solid platforming experience, focusing on perfecting <a href=\"http://www.steveswink.com/principles-of-virtual-sensation/\" title=\"Virtual Sensation\">virtual sensation</a> and stunning visuals. Platformers never get old, they never die. Weâ€™ll be creating a new world and characters for players to discover on their portable devices. We are also working hard on a point and click that focuses on narrative themes and elements that are not common to the gaming world. Not surprisingly, my brother said it best, so Iâ€™ll simply use his words:</p>\n\n<blockquote>\n  <p>Â IÂ amÂ disappointed that games are so often polarised as â€œcasual/Â familyâ€ and â€œmatureâ€ (readâ€œfrivolousâ€ and â€œseriousâ€). With the latter, it seems that unless it has some kind of violence or, for lack of a better word, offensive content, it shouldnâ€™t be considered as mature, and is instead something for children.</p>\n  \n  <p>What about mature games that donâ€™t rely on violence or sex to sell them?Â Â Where are the intelligent narratives that are not alsoÂ muscle-bound and sexed? Â Where can I playÂ a narrativeÂ that demands more of me mentally while stepping clear of the vulgar muck?Â So-called â€œmature gamesâ€ are, in fact, anything but. Â In truth they descend to trite and often offensive adolescent power fantasies.Â I think of God of War and Gears of War and Devil May Cry and Call of Duty and so on (see Sesslerâ€™s reviews of <a href=\"http://www.youtube.com/watch?v=rRyN6qUZ9Mc\" title=\"Sessler Review - DMC\">DMC</a>Â for good illustration). Iâ€™m tired of seeing â€œmatureâ€ equated with â€œviolentâ€.</p>\n</blockquote>\n\n<p>Definitely check out that (and all other) youtube videos from <a href=\"https://twitter.com/AdamSessler\" title=\"Adam Sessler Twitter\">Adam Sessler</a>Â and <a href=\"http://www.youtube.com/user/Rev3Games?feature=watch\" title=\"Rev3Games YouTube channel\">Rev3Games</a>.</p>\n\n<p>I will continue to post development updates on both these games here. We may have some polls and feedback options as well, so please, never hesitate to email me or comment these posts with thoughts, ideas, or suggestions. Iâ€™m always happy to talk shop. Needless to say Iâ€™m very excited. Chasing your dreams, no matter how many you have, or how big they are, is always exciting.</p>\n\n<p>So, we donâ€™t have a name yet. We donâ€™t officially exist as a corporate entity of any kind yet. But we have a mission, we have a vision and we are working. I can hear the dice rolling.</p>","image":"http://res.cloudinary.com/adamsingle/image/upload/v1443437820/Dice-Cropped1_xuhxnt.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-03-20T16:04:03.000Z","created_by":1,"updated_at":"2015-09-28T20:56:59.000Z","updated_by":1,"published_at":"2013-03-20T16:04:03.000Z","published_by":1},{"id":20,"uuid":"03e95249-7d89-4abf-b6b7-fa611a237e35","title":"Rest In Peace Roger Ebert","slug":"rest-in-peace-roger-ebert","markdown":"\n<div lang=\"x-western\">Roger Ebert, renown film reviewer, the first journalist to win a Pulitzer for movie criticism and, as he was known amongst my peers, the man who said â€œGames will never be artâ€, has died, aged 70.\n\nHe was a brilliant writer. For anyone even slightly interested in getting to know him a little, I give you this, an essay from his book â€œLife Itself: A Memoir,â€ a beautiful read.\n\n[http://www.salon.com/2011/09/15/roger_ebert/](http://www.salon.com/2011/09/15/roger_ebert/)\n\nFor those in my industry who donâ€™t know much on how he became the man who made such an inflaming comment,Â or anyone just looking for an excellent discourse on games and art,Â I highly recommend watching this talk from GDC 2011 by Brian Moriarty:\n\n[http://www.gdcvault.com/play/1014652/An-Apology-for-Roger](http://www.gdcvault.com/play/1014652/An-Apology-for-Roger)\n\nAnd finally, a wonderful quote from a developer on twitter:\n\nâ€œGames are lucky to be young enough that we donâ€™t lose our elders as often as other fields. For a brief moment, we are almost invincible.â€\n\nRoger Ebert openly admitted he never played games, he had too many â€œgreat films to watch and great books to readâ€. But he undoubtedly had anÂ impact on how many people saw our industry, made us stop and look at ourselves and our medium, and no doubt inspired some fascinating games purely in an attempt to prove him wrong. An influence like that earns him recognition as one of â€œour eldersâ€ as far as I am concerned.\n\nEnjoy your ride on the celestial locomotive Mr Ebert.\n\n</div>\n","html":"<div lang=\"x-western\">Roger Ebert, renown film reviewer, the first journalist to win a Pulitzer for movie criticism and, as he was known amongst my peers, the man who said â€œGames will never be artâ€, has died, aged 70.\n\nHe was a brilliant writer. For anyone even slightly interested in getting to know him a little, I give you this, an essay from his book â€œLife Itself: A Memoir,â€ a beautiful read.\n\n[http://www.salon.com/2011/09/15/roger_ebert/](http://www.salon.com/2011/09/15/roger_ebert/)\n\nFor those in my industry who donâ€™t know much on how he became the man who made such an inflaming comment,Â or anyone just looking for an excellent discourse on games and art,Â I highly recommend watching this talk from GDC 2011 by Brian Moriarty:\n\n[http://www.gdcvault.com/play/1014652/An-Apology-for-Roger](http://www.gdcvault.com/play/1014652/An-Apology-for-Roger)\n\nAnd finally, a wonderful quote from a developer on twitter:\n\nâ€œGames are lucky to be young enough that we donâ€™t lose our elders as often as other fields. For a brief moment, we are almost invincible.â€\n\nRoger Ebert openly admitted he never played games, he had too many â€œgreat films to watch and great books to readâ€. But he undoubtedly had anÂ impact on how many people saw our industry, made us stop and look at ourselves and our medium, and no doubt inspired some fascinating games purely in an attempt to prove him wrong. An influence like that earns him recognition as one of â€œour eldersâ€ as far as I am concerned.\n\nEnjoy your ride on the celestial locomotive Mr Ebert.\n\n</div>","image":"http://res.cloudinary.com/adamsingle/image/upload/v1443437815/Roger-Ebert_612x451_n5qchc.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-04-05T21:02:27.000Z","created_by":1,"updated_at":"2013-04-05T21:04:32.000Z","updated_by":1,"published_at":"2013-04-05T21:02:27.000Z","published_by":1},{"id":21,"uuid":"66913840-a356-4264-a0ca-0986a5c2f8ae","title":"Dev Update Sub Pre Alpha v0.001","slug":"dev-update-sub-pre-alpha-v0-001","markdown":"\nGood evening and welcome. This week Iâ€™ll be taking you on a little journey. Weâ€™ll be taking a quick look at some of the concept art the boys have been putting together. Now this is all pre-pre-production. Super early. We havenâ€™t even selected a game to produce as our first yet. We intend to create, or at least prototype, all of the projects that we are frantically designing or scribbling notes for in our free time, which is maybe half a dozen, but thatâ€™s a long term plan and obviously likely to change as everything does with time.\n\nOur â€œgrand narrativeâ€ as I like to call it, is being written as we speak. Iâ€™m taking a particular, and perhaps unusual, approach to designing that game. There has been quite a bit of discussion lately about involving the game writers in the production and design process from an early stage. I couldnâ€™t agree more. If narrative is the cornerstone of your player experience, the crafter of that narrative should be involved in the design process. But Iâ€™m taking that a little extreme. Iâ€™m letting him write it first. Obviously it wonâ€™t be a typical â€œgame scriptâ€. It will essentially be a story as you know it, as you would find on a shelf. A novel even perhaps. And itâ€™s being written by a young writer with no game writing experience. Heâ€™s aware that it will become a game of course, but he has no concept of what â€œshouldâ€ or even â€œcanâ€ be done with a game narrative. He has no preconceived limits. I donâ€™t want him to. I want something pure to start with. Something that tells a story, that has a purpose in telling it. Then we will bend heaven and earth to bring it into a game space in a way that is both true to this original vision and entertaining and interactive. David will of course continue to be involved in the entire process to help us in that goal. I will talk much more on this process when we get further into itâ€™s development.\n\nBut while he does that, and gets a first draft of some of the earlier scenes put together for some concept art production, the art duo have been throwing themselves at some concepts for a platformer. I think I mentioned in an earlier post that we would love to make a classic style platformer, reminiscent of the beautiful and fun Donkey Kong Country, Super Mario World 2: Yoshiâ€™s Island, Mega Man X, Super Metroid, Rayman and many others. All of these completely nailed the control of the game. I donâ€™t mean the controls, as in which buttons were assigned to what action, or the touch interface in the case of the brilliant Rayman Jungle Run, but the feeling of controlling the character. It was smooth, responsive, elegant, empowering. Thatâ€™s the first key to unlocking a good platformer. A second could be said to be the environments. Great platformers donâ€™t just take you somewhere, they take you many places on the way there. They give you a sense of journey and adventure. A feeling of exploration through constantly shifting scenery. A third key could be said to be the art style, though this clearly ties in strongly with the second key. As our concepts will show, we are perhaps a little torn between two styles. It may not be a massive surprise to see a little DKC influence in one of them, and a little Rayman in the other.\n\nAt this stage it is all about experimentation, fun, exploration and listening to our hearts and instincts. Watching out for things that leap out and grab our attention. Slap us in the face and demand to be examined. I do that a lot with the concept work these guys send me. I get lost in them. I still canâ€™t pick a single image that is my favourite. If you can, leave a comment and tell us, weâ€™d love to know what grabs your attention. We are making these games for you after all.\n\nÂ \n\n[nggallery id=4]\n\n\n","html":"<p>Good evening and welcome. This week Iâ€™ll be taking you on a little journey. Weâ€™ll be taking a quick look at some of the concept art the boys have been putting together. Now this is all pre-pre-production. Super early. We havenâ€™t even selected a game to produce as our first yet. We intend to create, or at least prototype, all of the projects that we are frantically designing or scribbling notes for in our free time, which is maybe half a dozen, but thatâ€™s a long term plan and obviously likely to change as everything does with time.</p>\n\n<p>Our â€œgrand narrativeâ€ as I like to call it, is being written as we speak. Iâ€™m taking a particular, and perhaps unusual, approach to designing that game. There has been quite a bit of discussion lately about involving the game writers in the production and design process from an early stage. I couldnâ€™t agree more. If narrative is the cornerstone of your player experience, the crafter of that narrative should be involved in the design process. But Iâ€™m taking that a little extreme. Iâ€™m letting him write it first. Obviously it wonâ€™t be a typical â€œgame scriptâ€. It will essentially be a story as you know it, as you would find on a shelf. A novel even perhaps. And itâ€™s being written by a young writer with no game writing experience. Heâ€™s aware that it will become a game of course, but he has no concept of what â€œshouldâ€ or even â€œcanâ€ be done with a game narrative. He has no preconceived limits. I donâ€™t want him to. I want something pure to start with. Something that tells a story, that has a purpose in telling it. Then we will bend heaven and earth to bring it into a game space in a way that is both true to this original vision and entertaining and interactive. David will of course continue to be involved in the entire process to help us in that goal. I will talk much more on this process when we get further into itâ€™s development.</p>\n\n<p>But while he does that, and gets a first draft of some of the earlier scenes put together for some concept art production, the art duo have been throwing themselves at some concepts for a platformer. I think I mentioned in an earlier post that we would love to make a classic style platformer, reminiscent of the beautiful and fun Donkey Kong Country, Super Mario World 2: Yoshiâ€™s Island, Mega Man X, Super Metroid, Rayman and many others. All of these completely nailed the control of the game. I donâ€™t mean the controls, as in which buttons were assigned to what action, or the touch interface in the case of the brilliant Rayman Jungle Run, but the feeling of controlling the character. It was smooth, responsive, elegant, empowering. Thatâ€™s the first key to unlocking a good platformer. A second could be said to be the environments. Great platformers donâ€™t just take you somewhere, they take you many places on the way there. They give you a sense of journey and adventure. A feeling of exploration through constantly shifting scenery. A third key could be said to be the art style, though this clearly ties in strongly with the second key. As our concepts will show, we are perhaps a little torn between two styles. It may not be a massive surprise to see a little DKC influence in one of them, and a little Rayman in the other.</p>\n\n<p>At this stage it is all about experimentation, fun, exploration and listening to our hearts and instincts. Watching out for things that leap out and grab our attention. Slap us in the face and demand to be examined. I do that a lot with the concept work these guys send me. I get lost in them. I still canâ€™t pick a single image that is my favourite. If you can, leave a comment and tell us, weâ€™d love to know what grabs your attention. We are making these games for you after all.</p>\n\n<p>[nggallery id=4]</p>","image":"http://res.cloudinary.com/adamsingle/image/upload/v1443437815/8733671_orig_small_lerup3.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-04-11T22:46:22.000Z","created_by":1,"updated_at":"2013-04-11T22:46:22.000Z","updated_by":1,"published_at":"2013-04-11T22:46:22.000Z","published_by":1},{"id":22,"uuid":"e94fa795-5dc4-4f6e-ad8f-593f7a923687","title":"An open design challenge","slug":"designchallenge1","markdown":"\nThis is long overdue. So much for a blog post every week. I need to work harder at maintaining that schedule. I figured Iâ€™d have dev stuff to discuss every week and it wouldnâ€™t be a problem. At the moment Iâ€™m so busy with my current contract that Iâ€™ve had no time for anything else, and I canâ€™t legally talk about the contract work.\n\nI have begun some paper prototyping of a game idea that Iâ€™m more than a little excited about. Itâ€™s not the point and click story my brother is currently working hard on (the first draft of the prologue for that is due in a couple of weeks, so Iâ€™m seriously looking forward to reading that and letting it spark a hundred concepts and ideas). Nor is this the platformer that the artists are still experimenting and exploring art styles and themes for. This is something else. Something thatâ€™s been rattling around in my brain, half formed, for some time. Something that will sit somewhere between a puzzle game and a strategy game. One or two player. Beautiful environment. Single iPad play (one of my favourite features for a game and hard to come by). And the most exciting part for me, based on the famous cellular automaton [Conwayâ€™s Game of Life](http://en.wikipedia.org/wiki/Conway's_Game_of_Life \"Conway's Game of Life\"). Iâ€™ll add a pic below, but itâ€™s not real exciting just yet.\n\n[![Lush](http://res.cloudinary.com/adamsingle/image/upload/v1443437813/IMG_27871_kagamj.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437813/IMG_27871_kagamj.jpg)\n\nSee, not exciting. But proof something is happening.\n\nSo, if thatâ€™s the extent of the game deving (that I can discuss), then what shall we talk about. Well, Iâ€™ve been thinking about strategy games a lot lately. About what attracts me to them. Why I like the ones I like and not others. Iâ€™ve been thinking about how you can take an existing game and tweak it, extend it, to add new layers of strategy and depth. This is incredibly hard for me. I donâ€™t know if itâ€™s just a flaw in my particular way of thinking, or something that I can learn, but Iâ€™ve never been particularly strong at thinking outside of the box. I like to think I have a large repertoire of boxes to pull from, but outside of them, I basically draw a blank. But I have heard this challenge given to people I know. Some have been going for a job as a game designer and have had to do exactly this. Take an existing game and build on it. Extend it. Maybe improve it if you think itâ€™s flawed.\n\nI had the perfect example for you. But Iâ€™ve changed my mind. Iâ€™m not going to tell you about it just yet. Iâ€™m going to actually issue the challenge. Iâ€™m going to give you a game, and between now and next week, I want you to attempt to extend the game. I was going to say extend the strategy, or add layers of strategy to it, but thatâ€™s too limiting, I donâ€™t like that. There are many many ways to change the way a game plays. Many many aspects to what makes a game enjoyable, or addictive, or even financially succesful. So I wonâ€™t be so confining. Iâ€™ll simply ask you to extend it in some way. And to justify what youâ€™ve done. In the comments, tell me what youâ€™ve changed or added, why you chose it, and what results you would expect to see, or better yet, play test it and share your experience.\n\nThe final piece you need is, of course, the base game. The game is Chess. Yes, I know. An extremely old game that has been modified many times over the years to varying success. Adding layers of strategy or even expanding the strategy existent in the current form sound daunting. Itâ€™s already an immensely tactical game that requires playing both the pieces on the board and the player across from you (no unlike poker). Iâ€™ve chosen chess purely because it is the game my example was related to. The example was an extension of Chess that was created by one of my best friends and his brother when they were quite young. I donâ€™t want to say too much about it, but if any of my readers know how to play Gurnett Chess, donâ€™t blow the surprise, Iâ€™ll explain the variation next week.\n\nFor the rest of you, there are a few things that I think need to be kept in mind. Extending the game, improving it, even adding layers of strategy, doesnâ€™t have to mean adding new rules, new pieces, new peripherals. Thatâ€™s one way to go, and certainly the way my mind tends to move, which is why I donâ€™t consider myself any good at this. But the problem there is you are messing with a game that many people know how to play. In my experience there are basically two types of people related to Chess. Those that know how to play, and those that have convinced themselves itâ€™s too complicated to learn. Adding new pieces, moves or too many new rules will convince the second type that there is absolutely no way they could learn to play your game, and alienate the first group who feel comfortable in their knowledge of the game space. Itâ€™s a tricky thing to extend and modify the game in such a way as to not alienate both. One direction may be to simplify the game and aim it at those that feel they canâ€™t learn Chess. Maybe create a â€œgatewayâ€ version to the original game. Think about what the game is supposed to represent in real life and find a way to make it less abstract perhaps. More strongly tied to those real things.\n\nIâ€™m going to leave it there. I look forward to seeing some interesting takes on Chess. Hopefully Iâ€™ll get some people responding. I was also going to spend some of this post analysing/reviewing a game called Banner Saga Factions. A turn based strategy that is free to play. I might leave that for another post, but for now, let me highly recommend it to anyone even remotely keen on strategy gaming. Itâ€™s a fantastic TBS with a truly beautiful art style (though a little violent, being based on viking mythology and culture).\n\nChat later,\n\nAdsy.\n\n\n","html":"<p>This is long overdue. So much for a blog post every week. I need to work harder at maintaining that schedule. I figured Iâ€™d have dev stuff to discuss every week and it wouldnâ€™t be a problem. At the moment Iâ€™m so busy with my current contract that Iâ€™ve had no time for anything else, and I canâ€™t legally talk about the contract work.</p>\n\n<p>I have begun some paper prototyping of a game idea that Iâ€™m more than a little excited about. Itâ€™s not the point and click story my brother is currently working hard on (the first draft of the prologue for that is due in a couple of weeks, so Iâ€™m seriously looking forward to reading that and letting it spark a hundred concepts and ideas). Nor is this the platformer that the artists are still experimenting and exploring art styles and themes for. This is something else. Something thatâ€™s been rattling around in my brain, half formed, for some time. Something that will sit somewhere between a puzzle game and a strategy game. One or two player. Beautiful environment. Single iPad play (one of my favourite features for a game and hard to come by). And the most exciting part for me, based on the famous cellular automaton <a href=\"http://en.wikipedia.org/wiki/Conway's_Game_of_Life\" title=\"Conway's Game of Life\">Conwayâ€™s Game of Life</a>. Iâ€™ll add a pic below, but itâ€™s not real exciting just yet.</p>\n\n<p><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437813/IMG_27871_kagamj.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437813/IMG_27871_kagamj.jpg\" alt=\"Lush\" title=\"\" /></a></p>\n\n<p>See, not exciting. But proof something is happening.</p>\n\n<p>So, if thatâ€™s the extent of the game deving (that I can discuss), then what shall we talk about. Well, Iâ€™ve been thinking about strategy games a lot lately. About what attracts me to them. Why I like the ones I like and not others. Iâ€™ve been thinking about how you can take an existing game and tweak it, extend it, to add new layers of strategy and depth. This is incredibly hard for me. I donâ€™t know if itâ€™s just a flaw in my particular way of thinking, or something that I can learn, but Iâ€™ve never been particularly strong at thinking outside of the box. I like to think I have a large repertoire of boxes to pull from, but outside of them, I basically draw a blank. But I have heard this challenge given to people I know. Some have been going for a job as a game designer and have had to do exactly this. Take an existing game and build on it. Extend it. Maybe improve it if you think itâ€™s flawed.</p>\n\n<p>I had the perfect example for you. But Iâ€™ve changed my mind. Iâ€™m not going to tell you about it just yet. Iâ€™m going to actually issue the challenge. Iâ€™m going to give you a game, and between now and next week, I want you to attempt to extend the game. I was going to say extend the strategy, or add layers of strategy to it, but thatâ€™s too limiting, I donâ€™t like that. There are many many ways to change the way a game plays. Many many aspects to what makes a game enjoyable, or addictive, or even financially succesful. So I wonâ€™t be so confining. Iâ€™ll simply ask you to extend it in some way. And to justify what youâ€™ve done. In the comments, tell me what youâ€™ve changed or added, why you chose it, and what results you would expect to see, or better yet, play test it and share your experience.</p>\n\n<p>The final piece you need is, of course, the base game. The game is Chess. Yes, I know. An extremely old game that has been modified many times over the years to varying success. Adding layers of strategy or even expanding the strategy existent in the current form sound daunting. Itâ€™s already an immensely tactical game that requires playing both the pieces on the board and the player across from you (no unlike poker). Iâ€™ve chosen chess purely because it is the game my example was related to. The example was an extension of Chess that was created by one of my best friends and his brother when they were quite young. I donâ€™t want to say too much about it, but if any of my readers know how to play Gurnett Chess, donâ€™t blow the surprise, Iâ€™ll explain the variation next week.</p>\n\n<p>For the rest of you, there are a few things that I think need to be kept in mind. Extending the game, improving it, even adding layers of strategy, doesnâ€™t have to mean adding new rules, new pieces, new peripherals. Thatâ€™s one way to go, and certainly the way my mind tends to move, which is why I donâ€™t consider myself any good at this. But the problem there is you are messing with a game that many people know how to play. In my experience there are basically two types of people related to Chess. Those that know how to play, and those that have convinced themselves itâ€™s too complicated to learn. Adding new pieces, moves or too many new rules will convince the second type that there is absolutely no way they could learn to play your game, and alienate the first group who feel comfortable in their knowledge of the game space. Itâ€™s a tricky thing to extend and modify the game in such a way as to not alienate both. One direction may be to simplify the game and aim it at those that feel they canâ€™t learn Chess. Maybe create a â€œgatewayâ€ version to the original game. Think about what the game is supposed to represent in real life and find a way to make it less abstract perhaps. More strongly tied to those real things.</p>\n\n<p>Iâ€™m going to leave it there. I look forward to seeing some interesting takes on Chess. Hopefully Iâ€™ll get some people responding. I was also going to spend some of this post analysing/reviewing a game called Banner Saga Factions. A turn based strategy that is free to play. I might leave that for another post, but for now, let me highly recommend it to anyone even remotely keen on strategy gaming. Itâ€™s a fantastic TBS with a truly beautiful art style (though a little violent, being based on viking mythology and culture).</p>\n\n<p>Chat later,</p>\n\n<p>Adsy.</p>","image":"http://res.cloudinary.com/adamsingle/image/upload/v1443437812/3dChess_rsl65u.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-05-02T21:08:30.000Z","created_by":1,"updated_at":"2015-09-28T20:56:53.000Z","updated_by":1,"published_at":"2013-05-02T21:08:30.000Z","published_by":1},{"id":23,"uuid":"d860384a-1ea7-43c8-8986-7aa7f6e76a74","title":"A new company, dev update and Gurnett Chess","slug":"20130509devupdate","markdown":"\nHello everyone. Letâ€™s start with a dev update shall we.\n\nThis week I began working on a digital prototype of my latest idea. This is the one that I was paper prototyping last week. I decided to steer away from paper prototyping it for a few reasons. One, making physical things isnâ€™t my strong point and Iâ€™m not particularly fast at it. Secondly, itâ€™s awkward to show anyone since Iâ€™m not in a studio with a team. Thirdly, I wanted to test out a couple of plugins for Unity that would handle one aspect of the game anyway, so this became a good demo/learning experience for those packages.\n\nSo, in less time than it took me to find a blank card template, print them out and cut them up I managed to get a basic demo of the concept done. Enough that it immediately highlighted something I hadnâ€™t thought about that will need to be optimised a lot for this to work (and will quite possibly mean writing a custom solution and ruling out the packages I was testing). The plan is to have a pre alpha, playable demo plus concept art ready for PAX in July. Iâ€™m not showing anything, I donâ€™t have a place in a booth, but I can still have my iPad handy, you never know who youâ€™ll meet.\n\n[![wpid-Photo-27092012-800-PM-600x300](http://res.cloudinary.com/adamsingle/image/upload/v1443437811/wpid-Photo-27092012-800-PM-600x300_sbd0gm.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437811/wpid-Photo-27092012-800-PM-600x300_sbd0gm.jpg)\n\nWhich leads nicely into the next topic. PAX. Since I am now going to PAX I would like to have some things ready for it. I donâ€™t want to be there marketing myself, because Iâ€™m a developer for hire. Thatâ€™s not the PAX audience. I want to be marketing the games weâ€™re working on. To do that, we need a company to market. So we are furiously looking into what needs to be done for that, what it costs, what it actually means to be a company, logo design and weâ€™ve started planning an iPad application that will work something like a multimedia brochure that will show off our ideas, our artwork, our music and ourselves. Oh, and a company name. Thatâ€™s always fun.\n\nMeanwhile, Brother Dave is still hard at work on the first draft of the prologue to our narrative point and click. I will quietly announce here and now that it is under the working title Reel. Read of that what you will ï¿½ï¿½ Heâ€™ll be visiting me, draft in hand, next week, so I am really looking forward to reading it and sending it to the artists to spark some concept inspiration!\n\nWhile theyâ€™re waiting for that, one of our art lads, James, has been experimenting and playing with Unity some more. Below are some more stunning screenshots of his work. This is after about a month of toying with Unity in his own time. What a machine.\n\n[nggallery id=5]\n\nÂ \n\nNot to be outdone, MC has just kicked into music creation mode. He very quickly started throwing 30 second snippets at us for feedback. Iâ€™m really looking forward to showing of some of the music he writes for us soon.\n\nÂ \n\nNow that the formalities are out of the way, letâ€™s talk about the design challenge I issued last week. So far (Iâ€™m writing this on Tuesday) I havenâ€™t received any responses to it. Thatâ€™s a little sad. But I understand my readership is small at the moment and it was a bit of an experiment anyway. The results would indicate itâ€™s a little early for audience participation. Or I need to look at how I â€œsellâ€ my posts. Perhaps something like â€œCan you make chess better?â€ Would have been more eye catching than â€œAn open design challengeâ€. Whatâ€™s done is done. Let me tell you about the inspiration for that post. Gurnett Chess.\n\nGurnett Chess, as I call it, was created by two brothers, Neil and Bradley Gurnett, two very good friends of mine. They came up with it when they were just young boys, and ever since they showed me, itâ€™s stuck in my head as an incredible example of game design. The problem they were solving was the number of players. There were 4 of them (friends in the street often dropped in to play whatever was going). They could easily play two separate games of chess, but that never feels right as a kid. If you have 4 people, you need to maximise your involvement with all of them, itâ€™s some sort of unspoken childhood rule. So, they added just two simple rules. The set up is exactly the same, you still need two chess sets, just as if you were going to play two separate games. Set them up side by side. Choose a partner. Your partner has the opposite colour to you. Then the new rules: You may, instead of moving a piece, do one of two things.\n\nÂ \n\n1. Send a piece that you have captured from your opponent, across the gap between boards, to the other game. Not into it, just beside it.\n2. Bring into play, under your control, any piece that your team mate has sent across.\n\n[![Bughouse_game](http://res.cloudinary.com/adamsingle/image/upload/v1443437810/Bughouse_game_k7whur.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437810/Bughouse_game_k7whur.jpg)\n\nSo simple. Cooperative reinforcements. This made a massive difference to strategies. The tide of a game can drastically turn very quickly. Games often went on for epic amounts of time, and in many cases ended in a draw. Thatâ€™s not surprising though really. If you lost, you usually did so after losing many pieces, which you were sending to your team mate, who was seriously outgunning his opponent.\n\nSo itâ€™s not perfect. As you can quickly see, there are balancing issues. The delay in sending pieces went some way to mitigating that, and for a couple of lads of, I think maybe 12 years old, itâ€™s pretty impressive. It certainly triggers a barrage of thoughts and design directions you could go. What I love most about this is that it changes none of the rules really. If you can play chess, you can play this version of it. There are no new pieces or changed move patterns.\n\nInterestingly, while doing some google image searches for interesting photos or pictures of two chess boards, I discovered that what Iâ€™ve been calling Gurnett Chess for years has been invented before. Itâ€™s generally known as [Bughouse chess](http://en.wikipedia.org/wiki/Bughouse_chess \"Bughouse chess\"). And here we learn our second lesson. Many of your awesome ideas will already have been thought up by someone else. But that doesnâ€™t mean it might not be new to someone. I did find some fascinating images when searching for [4 player chess](https://www.google.com/search?site=&tbm=isch&source=hp&biw=1280&bih=929&q=4+player+chess&oq=4+player+chess&gs_l=img.3..0l3j0i24l7.249.2294.0.2390.14.14.0.0.0.0.236.1367.5j5j2.12.0...0.0...1ac.1.12.img.AN9ESveLv9E \"google images search for 4 player chess\") though.\n\nI have tried many times over the years, especially in more recent ones, to give myself similar challenges for other existing games. But I still struggle greatly with coming up with simple modifications that improve or even just drastically modify the way a game plays. Guess I just need to keep practicing.\n\nChat later,\n\nAdsy.\n\n\n","html":"<p>Hello everyone. Letâ€™s start with a dev update shall we.</p>\n\n<p>This week I began working on a digital prototype of my latest idea. This is the one that I was paper prototyping last week. I decided to steer away from paper prototyping it for a few reasons. One, making physical things isnâ€™t my strong point and Iâ€™m not particularly fast at it. Secondly, itâ€™s awkward to show anyone since Iâ€™m not in a studio with a team. Thirdly, I wanted to test out a couple of plugins for Unity that would handle one aspect of the game anyway, so this became a good demo/learning experience for those packages.</p>\n\n<p>So, in less time than it took me to find a blank card template, print them out and cut them up I managed to get a basic demo of the concept done. Enough that it immediately highlighted something I hadnâ€™t thought about that will need to be optimised a lot for this to work (and will quite possibly mean writing a custom solution and ruling out the packages I was testing). The plan is to have a pre alpha, playable demo plus concept art ready for PAX in July. Iâ€™m not showing anything, I donâ€™t have a place in a booth, but I can still have my iPad handy, you never know who youâ€™ll meet.</p>\n\n<p><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437811/wpid-Photo-27092012-800-PM-600x300_sbd0gm.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437811/wpid-Photo-27092012-800-PM-600x300_sbd0gm.jpg\" alt=\"wpid-Photo-27092012-800-PM-600x300\" title=\"\" /></a></p>\n\n<p>Which leads nicely into the next topic. PAX. Since I am now going to PAX I would like to have some things ready for it. I donâ€™t want to be there marketing myself, because Iâ€™m a developer for hire. Thatâ€™s not the PAX audience. I want to be marketing the games weâ€™re working on. To do that, we need a company to market. So we are furiously looking into what needs to be done for that, what it costs, what it actually means to be a company, logo design and weâ€™ve started planning an iPad application that will work something like a multimedia brochure that will show off our ideas, our artwork, our music and ourselves. Oh, and a company name. Thatâ€™s always fun.</p>\n\n<p>Meanwhile, Brother Dave is still hard at work on the first draft of the prologue to our narrative point and click. I will quietly announce here and now that it is under the working title Reel. Read of that what you will ï¿½ï¿½ Heâ€™ll be visiting me, draft in hand, next week, so I am really looking forward to reading it and sending it to the artists to spark some concept inspiration!</p>\n\n<p>While theyâ€™re waiting for that, one of our art lads, James, has been experimenting and playing with Unity some more. Below are some more stunning screenshots of his work. This is after about a month of toying with Unity in his own time. What a machine.</p>\n\n<p>[nggallery id=5]</p>\n\n<p>Not to be outdone, MC has just kicked into music creation mode. He very quickly started throwing 30 second snippets at us for feedback. Iâ€™m really looking forward to showing of some of the music he writes for us soon.</p>\n\n<p>Now that the formalities are out of the way, letâ€™s talk about the design challenge I issued last week. So far (Iâ€™m writing this on Tuesday) I havenâ€™t received any responses to it. Thatâ€™s a little sad. But I understand my readership is small at the moment and it was a bit of an experiment anyway. The results would indicate itâ€™s a little early for audience participation. Or I need to look at how I â€œsellâ€ my posts. Perhaps something like â€œCan you make chess better?â€ Would have been more eye catching than â€œAn open design challengeâ€. Whatâ€™s done is done. Let me tell you about the inspiration for that post. Gurnett Chess.</p>\n\n<p>Gurnett Chess, as I call it, was created by two brothers, Neil and Bradley Gurnett, two very good friends of mine. They came up with it when they were just young boys, and ever since they showed me, itâ€™s stuck in my head as an incredible example of game design. The problem they were solving was the number of players. There were 4 of them (friends in the street often dropped in to play whatever was going). They could easily play two separate games of chess, but that never feels right as a kid. If you have 4 people, you need to maximise your involvement with all of them, itâ€™s some sort of unspoken childhood rule. So, they added just two simple rules. The set up is exactly the same, you still need two chess sets, just as if you were going to play two separate games. Set them up side by side. Choose a partner. Your partner has the opposite colour to you. Then the new rules: You may, instead of moving a piece, do one of two things.</p>\n\n<ol>\n<li>Send a piece that you have captured from your opponent, across the gap between boards, to the other game. Not into it, just beside it.  </li>\n<li>Bring into play, under your control, any piece that your team mate has sent across.</li>\n</ol>\n\n<p><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437810/Bughouse_game_k7whur.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437810/Bughouse_game_k7whur.jpg\" alt=\"Bughouse_game\" title=\"\" /></a></p>\n\n<p>So simple. Cooperative reinforcements. This made a massive difference to strategies. The tide of a game can drastically turn very quickly. Games often went on for epic amounts of time, and in many cases ended in a draw. Thatâ€™s not surprising though really. If you lost, you usually did so after losing many pieces, which you were sending to your team mate, who was seriously outgunning his opponent.</p>\n\n<p>So itâ€™s not perfect. As you can quickly see, there are balancing issues. The delay in sending pieces went some way to mitigating that, and for a couple of lads of, I think maybe 12 years old, itâ€™s pretty impressive. It certainly triggers a barrage of thoughts and design directions you could go. What I love most about this is that it changes none of the rules really. If you can play chess, you can play this version of it. There are no new pieces or changed move patterns.</p>\n\n<p>Interestingly, while doing some google image searches for interesting photos or pictures of two chess boards, I discovered that what Iâ€™ve been calling Gurnett Chess for years has been invented before. Itâ€™s generally known as <a href=\"http://en.wikipedia.org/wiki/Bughouse_chess\" title=\"Bughouse chess\">Bughouse chess</a>. And here we learn our second lesson. Many of your awesome ideas will already have been thought up by someone else. But that doesnâ€™t mean it might not be new to someone. I did find some fascinating images when searching for <a href=\"https://www.google.com/search?site=&amp;tbm=isch&amp;source=hp&amp;biw=1280&amp;bih=929&amp;q=4+player+chess&amp;oq=4+player+chess&amp;gs_l=img.3..0l3j0i24l7.249.2294.0.2390.14.14.0.0.0.0.236.1367.5j5j2.12.0...0.0...1ac.1.12.img.AN9ESveLv9E\" title=\"google images search for 4 player chess\">4 player chess</a> though.</p>\n\n<p>I have tried many times over the years, especially in more recent ones, to give myself similar challenges for other existing games. But I still struggle greatly with coming up with simple modifications that improve or even just drastically modify the way a game plays. Guess I just need to keep practicing.</p>\n\n<p>Chat later,</p>\n\n<p>Adsy.</p>","image":"http://res.cloudinary.com/adamsingle/image/upload/v1443437811/539690_568598346508143_2027712395_n_unz7uw.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-05-09T21:20:01.000Z","created_by":1,"updated_at":"2015-09-28T20:56:51.000Z","updated_by":1,"published_at":"2013-05-09T21:20:01.000Z","published_by":1},{"id":24,"uuid":"9c3345d0-bb09-4061-84d3-8ef370fef417","title":"Setting up Unity3D with GIT, SourceTree and BitBucket on a Mac","slug":"unitygitsourcetreebitbucketmactute","markdown":"\nSo, this week is a technical blog. Iâ€™ve been flat out with work and have had no time to further our games at all. Incidentally Iâ€™ll be announcing the name of the studio Iâ€™ll be forming soon. Iâ€™ll be writing up some stuff for it first though, so until then itâ€™s still just vague â€˜our gamesâ€™ references.\n\nSo this week I have a bit of a tutorial of sorts. Iâ€™ve had to do set up version control for a project a couple of times now, and have had to re-teach myself the steps each time, so this time I wrote them down. Firstly Iâ€™ll talk a little about my reasoning for using what I use, then Iâ€™ll get to the meat of it all. Iâ€™ve included screen shots, so hopefully if youâ€™re following along there are no dramas.\n\nWhy GIT?\n\nThere are two reasons I use GIT.\n\n1. I use a Mac, and the best version control client Iâ€™ve found is SourceTree. SourceTree doesnâ€™t support SVN, but it does handle GIT very nicely.\n2. GIT allows you to create branches. Branches create copies of a project at a given time. You can then work on that branch, implementing a feature you arenâ€™t sure about, or you think will take a long time, without effecting the master branch. This can be good for two reasons.\n\n- 1. If you are working with a team they can all have their own branches where they implement specific features that are assigned them, while this is happening the master branch can be kept as an â€œalways playableâ€ build. Once the feature is complete and tested and 100% working, it can be merged back into the master branch.\n- 2. Secondly, if you decide, after a lot of work and modification to the core of the code base, that the feature isnâ€™t going to work, isnâ€™t fun or is too heavy, you can simply kill the branch and go back to the game as it was before you started implementation. Nothing needs to be ripped out, no extranuous code will be left floating around in there. Itâ€™s all clean.\n\nÂ \n\nWhy BitBucket?\n\nOk. So why BitBucket. There are a few other options, GitHub is extremely popular, and the first that jumps to mind. I have two reasons for choosing BitBucket.\n\n1. You can have an unlimited number of repositories on the free account\n\n2. You can set repositories to private\n\nWhy Sourcetree?\n\nSourceTree is free and an excellent visual interface to use with GIT. It shows the branches, files that were commited, comments with commits, diff comparisons. Itâ€™s just much easier than the terminal. Incidentally, itâ€™s also made by the same people that created BitBucket, so it plays nice.\n\nSo letâ€™s get to it.\n\nFirst you need to set up External Version Control in your Unity project.\n\n- Edit->Project Settings->Editor\n- Version Control Mode â€“ Meta Files\n- [![Image 2 - Settings](http://res.cloudinary.com/adamsingle/image/upload/v1443437755/Image-2-Settings_rdkclf.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437755/Image-2-Settings_rdkclf.jpg)\n- Asset Serialization â€“ Mixed. Unity made some big changes to allow you to force everything to be text files, essentially making everything serialise into something like XML. Unfortunately this doesnâ€™t particularly help much. The main issue with version control in Unity is that the Scenes themselves are usually binaries. Binaries canâ€™t be merged. This means if two developers are working on the scene at the same time someone will have to discard their changes to accept the others then make them again. Technically this is solved by making the scene a text file, except resolving conflicts when something as abstract as a scene has been stored as a massive massive XML doc is crazy. So leave it as mixed, leave the scenes as binaries so they are nice and small, and just pay attention to whoâ€™s working on which scene.\n- Ignore Host URL\n\nÂ \n\n[Download Sourcetree and install it.](http://www.sourcetreeapp.com/download/ \"SourceTree download link\")\n\nÂ \n\n[Create an account with BitBucket](https://bitbucket.org/ \"BitBucket\") (I already had a GitHub account so I signed up using that account for ease of use)\n\nÂ \n\nSelect â€œCreate repositoryâ€\n\n[![Image 1 - BitBucket Dash](http://res.cloudinary.com/adamsingle/image/upload/v1443437810/Image-1-BitBucket-Dash_iz3lzn.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437810/Image-1-BitBucket-Dash_iz3lzn.jpg)\n\nÂ \n\nGive your repo a name\n\nGive it a description\n\nYou can have unlimited private and public repos on BitBucket (my favourite thing about it)\n\nRepo type is GIT\n\nIf you would like you can have Issue Tracking and a wiki. Both could be a good idea for managing the code base (issue tracking) and game design (wiki). The wiki could even be used in a similar way to a [design log as described by one of my favourite game designers Dan Cook](http://www.lostgarden.com/2011/05/game-design-logs.html \"Design Logs\")\n\nChoose your language (even UnityScript is in this drop down!).\n\nSelect Starting from scratch.\n\nNow we need to set up our project as a repository (repo).\n\nThe instructions for this are handily shown by BitBucket, but Iâ€™ll go through them here as well.\n\nOpen terminal.\n\nNavigate to your project folder\n\n$ cd /path/to/my/repo (for those that donâ€™t know, the $ in these situations arenâ€™t typed by you, they are a standard of some sort for showing what the user must type. It took me a little while to realise that when I began messing with the mac terminal).\n\n$git init\n\n$ git remote add origin ssh://git@bitbucket.org/<BitBucketUserName>/<RepoName>.git\n\nagain, this is very nicely mentioned in the BitBucket site, it will include the username and reponame for the project youâ€™re setting up so you could even copy and paste to be sure youâ€™ve got it right.\n\nNow we have everything that we need set up to use SourceTree instead of the terminal.\n\nSet up repo in SourceTree\n\n- Open SourceTree\n- Select Add A Repo (Thatâ€™s the Can looking thing with a green plus in the top left).\n- Select Add Working Copy (the folder and can icon)\n- Navigate the Working Copy Path to your Unity project folder. If everything is set up you should see â€œThis is a GIT repositoryâ€. If not, you may be selecting the wrong folder. You want the root folder of the project, it should contain the Assets and ProjectSettings folder amongst others. If not, find that one. If you are at that one then you set up a git repo in the wrong folder. Find the one you set it up in, delete the .git folder (itâ€™s a hidden folder) from it, go to BitBucket and delete the repository and start again. It shouldnâ€™t take long to catch back up.\n- Give the repo a name (itâ€™ll have the folder name by default which should be fine)\n- Now the repo appears (or you may have to double click it on the list).\n- This screen can look a little confusing at first, but itâ€™s pretty straight forward. There are 4 â€œpanelsâ€. On the left is a narrow one that is pretty simple at this stage because we have no branches. Here you can see any Remote repos (as this one is), any branches, tags, stashes or sub modules. These are all features of GIT that you may find useful one day. For now we are just going to use the origin (sometimes called master branch), so make sure it is highlighted.\n- In the middle of the screen are two panels, one atop the other. The top is called Files staged in the index and should be empty. The bottom is called Files in the working tree and should be full.\n- On the right is difference panel. This will show the changes made between a file existing on the remote repo and the one that is selected. This is especially handy for code files since it shows exactly what youâ€™ve changed since last commit.\n- The files in the working tree should only show files that need to be committed (that is new or deleted ones, or ones that have been modified since the last push to the remote repository). This can be changed with the drop down above the Files staged in the index panel which is currently set to Show Pending. We want to simplify the Files in the working tree panel. We donâ€™t want to track everything in a Unity project. A lot of these things are automatically created, so if you are collaborating you want them to pull the project, open it in Unity and let their Unity set this stuff up. All you need is the Assets folder and the ProjectSettings folder. So, first of all, collapse any expanded folders (assuming you have it showing in tree mode, which I do for ease of reading, again, this is a drop down at the top, just to the left of the Show Pending drop down). Now select everything except the Assets and ProjectSettings folders. Right click and select Ignore.\n- A pop up will give you some options. Select Ignore in this Repository.\n- Youâ€™ll now see a very neat and tidy Files in the Working Tree panel. Notice the .gitignore file. That lists all those files and folders you just told it to ignore.\n- [![Image 3](http://res.cloudinary.com/adamsingle/image/upload/v1443437755/Image-3_igre9y.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437755/Image-3_igre9y.jpg)\n- Now we want to commit. Commit is the process of staging files, that is readying them to be pushed to the remote repository. To do that simply select all of them (including the .gitignore) and drag them up to the Files staged in the index panel.\n- [![Image 4](http://res.cloudinary.com/adamsingle/image/upload/v1443437754/Image-4_vt19pp.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437754/Image-4_vt19pp.jpg)\n- Youâ€™ll notice, if you expand the folders, that every file and folder has a .meta file and that every file (including .metas) have a green plus next to them. The plus, as you probably guessed, means they are new to the repo and are being added. Itâ€™s important that all meta files are included. If they go missing Unity wonâ€™t be able to set things up properly, this is especially important for prefabs since the meta files keep the prefab linked to any resources it uses.\n- Now you just press commit at the top.\n- [![Image 5](http://res.cloudinary.com/adamsingle/image/upload/v1443437754/Image-5_czezje.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437754/Image-5_czezje.jpg)\n- A commit will ask for a comment. It is always a good idea to comment your commits well. When something breaks and you need to go back to the point you changed it, especially if itâ€™s code and you just want to pluck the class back out of the repo from before you broke it, your comments can save a lot of time. For this one, something like â€œInitial commitâ€ is fine.\n- Youâ€™ll notice this also shows the files that are being commited, and any that are in the working copy that havenâ€™t been committed, in case you missed some somehow. When youâ€™re ready, press Commit.\n- [![Image 6](http://res.cloudinary.com/adamsingle/image/upload/v1443437753/Image-6_vv8ypw.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437753/Image-6_vv8ypw.jpg)\n- That is now committed locally. All we need to do is Push it to the repository on BitBucket. Itâ€™s already linked to that repo, so simply press Push and away it goes. Push beings with it another dialog, here you can select which branch to push to. We only have the master, so select it and press OK.\n- Let it do itâ€™s thing, it can take a little while sometimes, depending on if you imported any packages into your project when starting up.\n- Once thatâ€™s done you should see â€œmasterâ€ under â€œbranchesâ€ on the left. If you select it you get some rearanging of panels and some new panels.\n- The difference panel is still there. The top panel is now a tree of commits. This will look more interesting and helpful after a few more. Selecting a commit will give you details in the other panels. It will show what files were effected, and the comment, date, author etc of the commit.\n- Thatâ€™s it. You are all done. Any time you work on your project, you can come back here, it will automaticaly update and show any files that have changed and need to be committed and you just follow the same process.\n\nYou can jump back to BitBucket.org if you like and see for yourself that itâ€™s there. Select the name of the repo and it will show you Recent activity (which should have the push you just did. The SSH URL is on the right for future reference (for instance if someone else wants to pull your project and help you work on it). The number of branches, tags, forks and followers of the project. You can invite users from here. Itâ€™s all very simple and intuitive.\n\nA couple of last minute tips.\n\nTry to commite regularly and small changes at a time. Focus on getting a single thing working, then commit it. There is no harm in having many commits. If everything breaks it will make life much easier.\n\nMake it a habit to save the scene and the project before each commit. Many times there wonâ€™t be any changes to them, but sometimes there are. Things like code are automatically updated just by being built. But any changes to prefabs are only saved when you save the project. If you change a prefab, double check that it shows up in the Files in the working tree panel (they have a .prefab extension). If not, you forgot to save the project first.\n\nThatâ€™s about it. I made that long winded, I know, but I wanted it to be as clear as possible. You now have a nice pipeline for version control. Remember that you will still get conflicts if more than one person alters a scene at the same time as you canâ€™t merge binary files. This means when you commit, one of you will have to discard your changes, accept the otherâ€™s version, pull it, redo your changes, then commit it, so communicate. I would recommend using something like a [Trello board](http://www.trello.com \"Trello\") to track scene usage if you have a few scenes in the game. If thereâ€™s only one, simple communication should suffice.\n\nNow you can focus on exploring interesting mechanics and ideas and not worry so much about breaking anything. If anyone reading this doesnâ€™t know much about GIT I recommend doing some reading, branching is a particularly useful tool for safely exploring mechanics and other ideas, especially if you are working with a team of people and you donâ€™t want to break the current master branch copy.\n\nEnjoy!\n\n\n","html":"<p>So, this week is a technical blog. Iâ€™ve been flat out with work and have had no time to further our games at all. Incidentally Iâ€™ll be announcing the name of the studio Iâ€™ll be forming soon. Iâ€™ll be writing up some stuff for it first though, so until then itâ€™s still just vague â€˜our gamesâ€™ references.</p>\n\n<p>So this week I have a bit of a tutorial of sorts. Iâ€™ve had to do set up version control for a project a couple of times now, and have had to re-teach myself the steps each time, so this time I wrote them down. Firstly Iâ€™ll talk a little about my reasoning for using what I use, then Iâ€™ll get to the meat of it all. Iâ€™ve included screen shots, so hopefully if youâ€™re following along there are no dramas.</p>\n\n<p>Why GIT?</p>\n\n<p>There are two reasons I use GIT.</p>\n\n<ol>\n<li>I use a Mac, and the best version control client Iâ€™ve found is SourceTree. SourceTree doesnâ€™t support SVN, but it does handle GIT very nicely.  </li>\n<li><p>GIT allows you to create branches. Branches create copies of a project at a given time. You can then work on that branch, implementing a feature you arenâ€™t sure about, or you think will take a long time, without effecting the master branch. This can be good for two reasons.</p></li>\n<li><ol><li>If you are working with a team they can all have their own branches where they implement specific features that are assigned them, while this is happening the master branch can be kept as an â€œalways playableâ€ build. Once the feature is complete and tested and 100% working, it can be merged back into the master branch.</li></ol></li>\n<li><ol><li><p>Secondly, if you decide, after a lot of work and modification to the core of the code base, that the feature isnâ€™t going to work, isnâ€™t fun or is too heavy, you can simply kill the branch and go back to the game as it was before you started implementation. Nothing needs to be ripped out, no extranuous code will be left floating around in there. Itâ€™s all clean.</p></li></ol></li>\n</ol>\n\n<p>Why BitBucket?</p>\n\n<p>Ok. So why BitBucket. There are a few other options, GitHub is extremely popular, and the first that jumps to mind. I have two reasons for choosing BitBucket.</p>\n\n<ol>\n<li><p>You can have an unlimited number of repositories on the free account</p></li>\n<li><p>You can set repositories to private</p></li>\n</ol>\n\n<p>Why Sourcetree?</p>\n\n<p>SourceTree is free and an excellent visual interface to use with GIT. It shows the branches, files that were commited, comments with commits, diff comparisons. Itâ€™s just much easier than the terminal. Incidentally, itâ€™s also made by the same people that created BitBucket, so it plays nice.</p>\n\n<p>So letâ€™s get to it.</p>\n\n<p>First you need to set up External Version Control in your Unity project.</p>\n\n<ul>\n<li>Edit->Project Settings->Editor</li>\n<li>Version Control Mode â€“ Meta Files</li>\n<li><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437755/Image-2-Settings_rdkclf.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437755/Image-2-Settings_rdkclf.jpg\" alt=\"Image 2 - Settings\" title=\"\" /></a></li>\n<li>Asset Serialization â€“ Mixed. Unity made some big changes to allow you to force everything to be text files, essentially making everything serialise into something like XML. Unfortunately this doesnâ€™t particularly help much. The main issue with version control in Unity is that the Scenes themselves are usually binaries. Binaries canâ€™t be merged. This means if two developers are working on the scene at the same time someone will have to discard their changes to accept the others then make them again. Technically this is solved by making the scene a text file, except resolving conflicts when something as abstract as a scene has been stored as a massive massive XML doc is crazy. So leave it as mixed, leave the scenes as binaries so they are nice and small, and just pay attention to whoâ€™s working on which scene.</li>\n<li><p>Ignore Host URL</p></li>\n</ul>\n\n<p><a href=\"http://www.sourcetreeapp.com/download/\" title=\"SourceTree download link\">Download Sourcetree and install it.</a></p>\n\n<p><a href=\"https://bitbucket.org/\" title=\"BitBucket\">Create an account with BitBucket</a> (I already had a GitHub account so I signed up using that account for ease of use)</p>\n\n<p>Select â€œCreate repositoryâ€</p>\n\n<p><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437810/Image-1-BitBucket-Dash_iz3lzn.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437810/Image-1-BitBucket-Dash_iz3lzn.jpg\" alt=\"Image 1 - BitBucket Dash\" title=\"\" /></a></p>\n\n<p>Give your repo a name</p>\n\n<p>Give it a description</p>\n\n<p>You can have unlimited private and public repos on BitBucket (my favourite thing about it)</p>\n\n<p>Repo type is GIT</p>\n\n<p>If you would like you can have Issue Tracking and a wiki. Both could be a good idea for managing the code base (issue tracking) and game design (wiki). The wiki could even be used in a similar way to a <a href=\"http://www.lostgarden.com/2011/05/game-design-logs.html\" title=\"Design Logs\">design log as described by one of my favourite game designers Dan Cook</a></p>\n\n<p>Choose your language (even UnityScript is in this drop down!).</p>\n\n<p>Select Starting from scratch.</p>\n\n<p>Now we need to set up our project as a repository (repo).</p>\n\n<p>The instructions for this are handily shown by BitBucket, but Iâ€™ll go through them here as well.</p>\n\n<p>Open terminal.</p>\n\n<p>Navigate to your project folder</p>\n\n<p>$ cd /path/to/my/repo (for those that donâ€™t know, the $ in these situations arenâ€™t typed by you, they are a standard of some sort for showing what the user must type. It took me a little while to realise that when I began messing with the mac terminal).</p>\n\n<p>$git init</p>\n\n<p>$ git remote add origin ssh://git@bitbucket.org/<BitBucketUserName>/<RepoName>.git</p>\n\n<p>again, this is very nicely mentioned in the BitBucket site, it will include the username and reponame for the project youâ€™re setting up so you could even copy and paste to be sure youâ€™ve got it right.</p>\n\n<p>Now we have everything that we need set up to use SourceTree instead of the terminal.</p>\n\n<p>Set up repo in SourceTree</p>\n\n<ul>\n<li>Open SourceTree</li>\n<li>Select Add A Repo (Thatâ€™s the Can looking thing with a green plus in the top left).</li>\n<li>Select Add Working Copy (the folder and can icon)</li>\n<li>Navigate the Working Copy Path to your Unity project folder. If everything is set up you should see â€œThis is a GIT repositoryâ€. If not, you may be selecting the wrong folder. You want the root folder of the project, it should contain the Assets and ProjectSettings folder amongst others. If not, find that one. If you are at that one then you set up a git repo in the wrong folder. Find the one you set it up in, delete the .git folder (itâ€™s a hidden folder) from it, go to BitBucket and delete the repository and start again. It shouldnâ€™t take long to catch back up.</li>\n<li>Give the repo a name (itâ€™ll have the folder name by default which should be fine)</li>\n<li>Now the repo appears (or you may have to double click it on the list).</li>\n<li>This screen can look a little confusing at first, but itâ€™s pretty straight forward. There are 4 â€œpanelsâ€. On the left is a narrow one that is pretty simple at this stage because we have no branches. Here you can see any Remote repos (as this one is), any branches, tags, stashes or sub modules. These are all features of GIT that you may find useful one day. For now we are just going to use the origin (sometimes called master branch), so make sure it is highlighted.</li>\n<li>In the middle of the screen are two panels, one atop the other. The top is called Files staged in the index and should be empty. The bottom is called Files in the working tree and should be full.</li>\n<li>On the right is difference panel. This will show the changes made between a file existing on the remote repo and the one that is selected. This is especially handy for code files since it shows exactly what youâ€™ve changed since last commit.</li>\n<li>The files in the working tree should only show files that need to be committed (that is new or deleted ones, or ones that have been modified since the last push to the remote repository). This can be changed with the drop down above the Files staged in the index panel which is currently set to Show Pending. We want to simplify the Files in the working tree panel. We donâ€™t want to track everything in a Unity project. A lot of these things are automatically created, so if you are collaborating you want them to pull the project, open it in Unity and let their Unity set this stuff up. All you need is the Assets folder and the ProjectSettings folder. So, first of all, collapse any expanded folders (assuming you have it showing in tree mode, which I do for ease of reading, again, this is a drop down at the top, just to the left of the Show Pending drop down). Now select everything except the Assets and ProjectSettings folders. Right click and select Ignore.</li>\n<li>A pop up will give you some options. Select Ignore in this Repository.</li>\n<li>Youâ€™ll now see a very neat and tidy Files in the Working Tree panel. Notice the .gitignore file. That lists all those files and folders you just told it to ignore.</li>\n<li><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437755/Image-3_igre9y.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437755/Image-3_igre9y.jpg\" alt=\"Image 3\" title=\"\" /></a></li>\n<li>Now we want to commit. Commit is the process of staging files, that is readying them to be pushed to the remote repository. To do that simply select all of them (including the .gitignore) and drag them up to the Files staged in the index panel.</li>\n<li><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437754/Image-4_vt19pp.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437754/Image-4_vt19pp.jpg\" alt=\"Image 4\" title=\"\" /></a></li>\n<li>Youâ€™ll notice, if you expand the folders, that every file and folder has a .meta file and that every file (including .metas) have a green plus next to them. The plus, as you probably guessed, means they are new to the repo and are being added. Itâ€™s important that all meta files are included. If they go missing Unity wonâ€™t be able to set things up properly, this is especially important for prefabs since the meta files keep the prefab linked to any resources it uses.</li>\n<li>Now you just press commit at the top.</li>\n<li><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437754/Image-5_czezje.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437754/Image-5_czezje.jpg\" alt=\"Image 5\" title=\"\" /></a></li>\n<li>A commit will ask for a comment. It is always a good idea to comment your commits well. When something breaks and you need to go back to the point you changed it, especially if itâ€™s code and you just want to pluck the class back out of the repo from before you broke it, your comments can save a lot of time. For this one, something like â€œInitial commitâ€ is fine.</li>\n<li>Youâ€™ll notice this also shows the files that are being commited, and any that are in the working copy that havenâ€™t been committed, in case you missed some somehow. When youâ€™re ready, press Commit.</li>\n<li><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437753/Image-6_vv8ypw.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437753/Image-6_vv8ypw.jpg\" alt=\"Image 6\" title=\"\" /></a></li>\n<li>That is now committed locally. All we need to do is Push it to the repository on BitBucket. Itâ€™s already linked to that repo, so simply press Push and away it goes. Push beings with it another dialog, here you can select which branch to push to. We only have the master, so select it and press OK.</li>\n<li>Let it do itâ€™s thing, it can take a little while sometimes, depending on if you imported any packages into your project when starting up.</li>\n<li>Once thatâ€™s done you should see â€œmasterâ€ under â€œbranchesâ€ on the left. If you select it you get some rearanging of panels and some new panels.</li>\n<li>The difference panel is still there. The top panel is now a tree of commits. This will look more interesting and helpful after a few more. Selecting a commit will give you details in the other panels. It will show what files were effected, and the comment, date, author etc of the commit.</li>\n<li>Thatâ€™s it. You are all done. Any time you work on your project, you can come back here, it will automaticaly update and show any files that have changed and need to be committed and you just follow the same process.</li>\n</ul>\n\n<p>You can jump back to BitBucket.org if you like and see for yourself that itâ€™s there. Select the name of the repo and it will show you Recent activity (which should have the push you just did. The SSH URL is on the right for future reference (for instance if someone else wants to pull your project and help you work on it). The number of branches, tags, forks and followers of the project. You can invite users from here. Itâ€™s all very simple and intuitive.</p>\n\n<p>A couple of last minute tips.</p>\n\n<p>Try to commite regularly and small changes at a time. Focus on getting a single thing working, then commit it. There is no harm in having many commits. If everything breaks it will make life much easier.</p>\n\n<p>Make it a habit to save the scene and the project before each commit. Many times there wonâ€™t be any changes to them, but sometimes there are. Things like code are automatically updated just by being built. But any changes to prefabs are only saved when you save the project. If you change a prefab, double check that it shows up in the Files in the working tree panel (they have a .prefab extension). If not, you forgot to save the project first.</p>\n\n<p>Thatâ€™s about it. I made that long winded, I know, but I wanted it to be as clear as possible. You now have a nice pipeline for version control. Remember that you will still get conflicts if more than one person alters a scene at the same time as you canâ€™t merge binary files. This means when you commit, one of you will have to discard your changes, accept the otherâ€™s version, pull it, redo your changes, then commit it, so communicate. I would recommend using something like a <a href=\"http://www.trello.com\" title=\"Trello\">Trello board</a> to track scene usage if you have a few scenes in the game. If thereâ€™s only one, simple communication should suffice.</p>\n\n<p>Now you can focus on exploring interesting mechanics and ideas and not worry so much about breaking anything. If anyone reading this doesnâ€™t know much about GIT I recommend doing some reading, branching is a particularly useful tool for safely exploring mechanics and other ideas, especially if you are working with a team of people and you donâ€™t want to break the current master branch copy.</p>\n\n<p>Enjoy!</p>","image":"http://res.cloudinary.com/adamsingle/image/upload/v1443437753/open-source-version-control-system-git_wehtbc.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-05-20T11:00:57.000Z","created_by":1,"updated_at":"2015-09-28T20:56:50.000Z","updated_by":1,"published_at":"2013-05-20T11:00:57.000Z","published_by":1},{"id":25,"uuid":"c48aaddf-d155-43cc-a6ac-4736be7a9b33","title":"Introduction to Binary and Bitstrings with C#","slug":"intro-to-bitstrings","markdown":"\nBelow is a reprint of an old blog post I wrote in November of 2011. Itâ€™s a little Unity oriented and makes mention of OpenFeint, which I was using a lot of at the time. OpenFeint was a cross platform leader board and achievement platform that no longer exists. Itâ€™s a long post. Probably too long really, but I like to think itâ€™s a great resource for new coders as much as those that have been doing it a little while, but havenâ€™t come across bitstrings before. Enjoy, and let me know what you think.\n\nâ€”â€”â€”â€”â€”â€“\n\nSo today Iâ€™ll be talking about making a mass of bools more efficient, both in time to code (smaller functions) and memory.\n\nIâ€™m going to do that by utilising bit manipulation. Now Iâ€™m not an expert coder, Iâ€™m learning as I go. I do have an accelerated degree in Interactive Entertainment with a major in Games Programming, so Iâ€™m not completely uneducated in this area, but until you try to do something in code that youâ€™ve never done before, you donâ€™t really know if you know it yet. So Iâ€™m going to talk about what I have figured out and learnt in the last 2 days.\n\nFirst letâ€™s assume you are new to coding, or self taught and havenâ€™t come across bit manipulation yet. Bit manipulation refers to using (and changing or manipulating) the memory at a single bit level. As you no doubt know, a bit can be either one of two states, on or off, 1 or 0. Iâ€™m sure you can already see the connection between a bit and a bool. Before we get too much into that, letâ€™s talk about how they can be manipulated. Basically all your logic operators (AND, OR, XOR, NOT) can be applied to bits. Syntactically they are similar.  \n A logic AND is &&.\n\nE.g. If(one && two)\n\nWhich will only return true if both one AND two are true.\n\nA logic OR is ||\n\nE.g. If(one || two)\n\nWhich returns true if either one OR two is true.\n\nFor those of you wondering an XOR or â€œexclusive orâ€ is ^^ I believe. It rarely comes up in regular coding in my experience, though I do use it in bit wise operations as weâ€™ll see later. Exclusive or is true only if one is true and one is false, but it does it doesnâ€™t matter which.\n\nE.g. If(one ^^ two)\n\nWhich returns true if one is true and two is false OR one is false and two is true. But not if both are true.\n\nThis is a good place to mention if I have anything wrong please feel free to email. E or post a comment. Like I said Iâ€™m not an expert, Iâ€™m just trying to impart some knowledge as I discover it. However I havenâ€™t ever used logical XOR in my code so Iâ€™m only guessing it is represented by ^^.\n\nSo thatâ€™s the logic operators, which you probably already knew. You may have wondered, like I did when i started coding, why they are double symbols. My guess here is the bitwise operators came first and to separate the logic ones from the bitwise ones they doubled the symbols. Youâ€™ve probably guessed then that the bitwise operators are the same, but single character.\n\nUnderstanding what they do is simple. The whole 1and 0 thing can be confusing, but if you starting out think of them as true and false instead and itâ€™ll make sense.  \n Now weâ€™ll take a quick look at something you might manipulate. To keep it simple lets look at a byte.  \n Assume we have two bytes.  \n one is 11001010  \n Two is 11100001\n\nI know that can look pretty abstract but bear with me. If we want to AND these bytes we simple and each position with its corresponding position in the other byte. Simple to see if we put one above the other. Remember, think of them as true and false.\n\n11001010 &  \n 11100001  \n â€”â€”â€”â€”-  \n 11000000\n\nSo only the bit positions that both have ones (so both are â€œtrueâ€) return one (â€œtrueâ€) exactly like a logic AND\n\nOk, letâ€™s OR them.\n\n11001010 |  \n 11100001  \n â€”â€”â€”â€”â€“  \n 11101011.\n\nSo any that had either one or the other â€œonâ€ (â€œtrueâ€) resulted in an â€œonâ€ bit in the answer.\n\nFinally letâ€™s quickly look at an XOR.\n\n11001010 ^  \n 11100001  \n â€”â€”â€”â€”â€“  \n 00101011\n\nHere you can see that the positions that both were on are now off.\n\nOk. Cool. What the heck is the point though?\n\nThe point is we can use these operators to turn off and on specific positions. Imagine we have an empty byte. We want to turn on the 3rd position specifically. Easy, we just OR it.\n\n00000000 |  \n 00000100  \n â€”â€”â€”â€”-  \n 00000100\n\nNow obviously we could have just said it equaled the second byte. But what if the first one wasnâ€™t empty. What if we had something like the following:\n\n11010010\n\nnow turning on the third bit without destroying the rest would seem a little tricky. But if we OR it with our byte above we get\n\n11010010  \n 00000100  \n â€”â€”â€”â€”  \n 11010110\n\nwhich is exactly the same but with the third bit on. Plus, if it had already been on we would not have done any damage.\n\nWhat about turning one off you ask. Easy peasy. You OR it with the NOT of the one you want offâ€¦ seeâ€¦simple.\n\nSo lets say we want to turn that pesky third bit back off. Hereâ€™s how to do it.\n\nWe have:  \n 11010110 and we want to AND it with the NOT of the bit we want off, which would be  \n 11111011\n\nIn this way, anything that was on stays on, anything that was off stays off and our special bit is turned off.\n\nAnd just quickly before moving on, to tell if a specific bit is on or not you and it with the but you want to check. So letâ€™s see if that third bit is on.\n\n11010010 &  \n 00000100  \n â€”â€”â€”â€”  \n 00000000\n\nwhat about the 8thÂ bit?\n\n11010010 &  \n 10000000  \n â€”â€”â€”â€”  \n 10000000\n\nso if the result is all 0â€™s your bit is off. Anything else and itâ€™s on.\n\nâ€œThatâ€™s all greatâ€ you say, but I still donâ€™t see the point. Well Iâ€™m getting to it. Some of you may have already seen it. These bytes can be represented as numbers. For those of you who understand your binary itâ€™s simply a base 2 number system with the same rules as the base 10 one we use everyday.\n\nSo our base 10 (or decimal system) works on columns of 10 to the power of (which I will represent with ^ so donâ€™t get that confused with the bitwise XOR)\n\nWe saw this at school. We have the units column, the tens column, the hundreds column, the thousands column and you just add them all up.\n\nSo 245 is:\n\n(2 * 10^2) + (4 * 10^1) + (5 * 10^0). Note: Anything to the power of 0 is 1.\n\n= 200 + 40 + 5  \n =245\n\nBinary works the same, except it is base 2 so each column is 2 to a power.  \n 101 is:\n\n(1 * 2^2) + (0 * 2^1) + (1 * 2^0)  \n = 1*4 + 0 * 2 + 1 * 1  \n = 5  \n so 101 in binary is 5.\n\nSo what does that mean for us? It means these things can be represented as numbers that can be saved to PlayerPrefs (look out, Iâ€™m starting to get to a relevant point here).\n\nPractical Usages\n\nNow we canâ€™t save a byte to PlayerPrefs. But we can save an int. Thatâ€™s handy, but we havenâ€™t seen a use for this yet. Youâ€™ll remember at the beginning I mentioned bools. If your games are anything like mine, they can have a tendency to have a mass of bools. Since Iâ€™m making iOS and Android games and using OpenFeint Iâ€™m tracking a heap of achievements at the least. Each one is a bool. It occurred to me that this is very inefficient in two ways.\n\nFirstly a the size of a bool is at least a byte. I did a quick google on the size of a bool and there is some contention. Most say a byte, but there seem to be some possible situations where they can be 2 bytes, or even 4. Thatâ€™s crazy, a bool is a binary state, itâ€™s true or false, on or off, 1 or 0. Even if itâ€™s only one byte thatâ€™s 8 times bigger than it really needs to be.\n\nSecondly my functions are ridiculous. If I have 20 something achievements I have a function for unlocking each one. I could optimise that by having an enum perhaps and passing that in. Then Iâ€™d have one function that would have a switch statement in it with a case for each one. And Iâ€™d still have 20 something bools being written to PlayerPrefs.\n\nSo I have way too much code to write and manage and Iâ€™m saving 20 bytes (assuming 20 bools) at least. Thatâ€™s 160 bits to represent the same data that could be represented using 20 bits.\n\nSo letâ€™s do something about it.\n\nThe Octobool\n\nOctobool is a term that a good mate of mine introduced to me. It was the way he had been taught to handle this type of situation and it basically uses a single byte to hold the data of 8 bools. Each bit is a bool. The problem for us there is we canâ€™t write a byte to PlayerPrefs. Which brings me toâ€¦\n\nBitStrings\n\nBitStrings are what I was taught. It uses an int to store the bools. Obviously if you have 8 or less bools to store a byte would be better, but youâ€™d still have to store it as an int in the PlayerPrefs. With a BitString you can use an int that suits your needs. There are standard ints, which are normally 32 bits, shorts (16 bits) and longs (64 bits). There are also signed and unsigned. Let me just say here itâ€™s best to use unsigned. An int is usually signed by default, so I would recommend you use an unsigned int (for those new to coding an unsigned int is one that simply has no sign, meaning it canâ€™t be negative. It also means that the bit that would have to be reserved to represent the sign is freed up). The problem with signed ints is you canâ€™t use the sign but as a bool because the end result (the number) would then vary depending on if that bool is true or false. To access unsigned ints you simply put a u in front of the type declaration. For short and long you just use the types short and long. Simple.  \n So:  \n int standardInt; //32bit value between -2147483648 and 2147483647 (-2^31 and 2^31 -1)  \n uint unsignedStandardInt; //32bit value between 0 and 4294967295 (2^32 -1)  \n short shortInt; //16bit  \n ushort unsignedShort; //16bit positive values  \n long longInt; //64bit  \n ulong unsignedLongInt; //64bit positive values\n\n(As a note I took a quick look at MSDN and Iâ€™m not sure but I think a long can only be signed, they donâ€™t mention an unsigned version, however in MonoDevelop ulong is a recognised type so Iâ€™m a bit up in the air there. I think it must exist if the type is recognised by the IDE, so if you have more than 32 bools that you would like to store together, Iâ€™m pretty sure you can do it).\n\nBitArrays\n\nBitArrays are a structure that exists in c# that I at first thought was a BitString, which was going to save me having to write a class myself. However I had quite a bit of trouble with it. Mainly getting itâ€™s contents into an int for saving. It seemed to have a CopyTo() function but that could only save to ints that were in an array, so I had to make an int array with one int in it to copy the BitArray into and manipulating the contents of the BitArray wasnâ€™t as straight forward as I would have liked. I posted the question on the Unity forum and was pointed in the right direction (thanks Ntero!). There is a structure in c# to do what we want. Itâ€™s called a FlaggedEnum.\n\nFlaggedEnum\n\nItâ€™s a little difficult to wrap your head around at first, I think basically because itâ€™s very simple. I will quickly explain an enum for those who arenâ€™t sure what they are. An enum is basically wrapping an integer in a word to make it easier to read your code. So maybe you have your game states stored as an enum. There is a menu state, a paused state, a play state, maybe and endscreen state or something like that. You then create an enum that has words to represent each of these, but underneath they are really just integers. You could do the same thing with #DEFINE or even just an int with some comments. Something like:\n\nint gameState; //1 = menu, 2 = play, 3 = paused, 4 = end screen.\n\nAnd you just have to remember those. Your game loop has a switch in it that checks these and you have your logic for each state. You can do the same thing with an enum but it makes you game loop look a little clearer.\n\nenum GameState  \n {  \n GS_MENU,  \n GS_PLAY,  \n GS_PAUSED,  \n GS_END_SCREEN  \n };\n\nGameState m_state;\n\ncouple of things to note there.  \n First that is my personal convention for defining an enum, most of the coders I have seen do the same. Capitals for the values, use underscores, and usually have some sort of code at the start. In this case there is unlikely to be another enum with similar names, but itâ€™s safer this way. So GS is for GameState. Notice there are commas after each entry except the last (you can have one, but you donâ€™t need it). Also note the semi-colon after the closing curly bracket. Donâ€™t forget to actually create an instance of this to use in your game as well.  \n So I have no numeric values in here. The compiler will therefore assume it starts at 0 and increments. So GS_PLAY is actually equal to 1. i.e. if you wrote:\n\nDebug.Log(((int)GS_PLAY).ToString());\n\nit would debug out 1\n\nwhat I could do is start anywhere:\n\nenum GameState  \n {  \n GS_MENU = 10,  \n GS_PLAY,  \n GS_PAUSED,  \n GS_END_SCREEN  \n };\n\nin which case GS_PLAY now equals 11 and so on.\n\nTake it a step further and I can do this:\n\nenum GameState  \n {  \n GS_MENU = 10,  \n GS_PLAY = 20,  \n GS_PAUSED = 100,  \n GS_END_SCREEN = 55  \n };\n\nThere is absolutely no reason to do this (and many reasons not to), but it works. Itâ€™s great that we can do this, because we need it for the next step.\n\nSo thatâ€™s enums. FlaggedEnums have a flags attribute set on them. This allows you to do bitwise operations on them. To do that all you need to do is add the following line:  \n [FlagsAttribute]\n\nLets create an enum that has a little more relevance. If you would like to access this from any of your scripts just make a class for your enums. It would look something like this.\n\nusing UnityEngine;  \n using System;  \n using System.Collections;\n\npublic class FlaggedEnums : MonoBehaviour  \n {  \n [FlagsAttribute]  \n public enum AchievementFlags  \n {  \n AF_ACHIEVEMENT_1,  \n AF_ACHIEVEMENT_2,  \n AF_ACHIEVEMENT_3,  \n AF_ACHIEVEMENT_4,  \n AF_ACHIEVEMENT_5,  \n AF_ACHIEVEMENT_6,  \n AF_ACHIEVEMENT_7,  \n AF_ACHIEVEMENT_8,  \n AF_ACHIEVEMENT_9,  \n AF_ACHIEVEMENT_10,  \n AF_ACHIEVEMENT_11,  \n AF_ACHIEVEMENT_12,  \n AF_ACHIEVEMENT_13,  \n AF_ACHIEVEMENT_14,  \n AF_ACHIEVEMENT_15,  \n AF_ACHIEVEMENT_16,  \n AF_ACHIEVEMENT_17,  \n AF_ACHIEVEMENT_18,  \n AF_ACHIEVEMENT_19,  \n AF_ACHIEVEMENT_20,  \n }  \n }\n\nWhich is great. But if we are going to perform bitwise operations on this and expect it work we need each of these to represent a bit in the number, so we need to modify to this:\n\nusing UnityEngine;  \n using System;  \n using System.Collections;\n\npublic class FlaggedEnums : MonoBehaviour  \n {  \n [FlagsAttribute]  \n public enum AchievementFlags  \n {  \n AF_ACHIEVEMENT_1 = 1, //0000 0000 0000 0000 0000 0000 0000 0001  \n AF_ACHIEVEMENT_2 = 2, //0000 0000 0000 0000 0000 0000 0000 0010  \n AF_ACHIEVEMENT_3 = 4, //0000 0000 0000 0000 0000 0000 0000 0100  \n AF_ACHIEVEMENT_4 = 8, //0000 0000 0000 0000 0000 0000 0000 1000  \n AF_ACHIEVEMENT_5 = 16, //0000 0000 0000 0000 0000 0000 0001 0000  \n AF_ACHIEVEMENT_6 = 32, //0000 0000 0000 0000 0000 0000 0010 0000  \n AF_ACHIEVEMENT_7 = 64, //0000 0000 0000 0000 0000 0000 0100 0000  \n AF_ACHIEVEMENT_8 = 128, //0000 0000 0000 0000 0000 0000 1000 0000  \n AF_ACHIEVEMENT_9 = 256, //0000 0000 0000 0000 0000 0001 0000 0000  \n AF_ACHIEVEMENT_10 = 512, //0000 0000 0000 0000 0000 0010 0000 0000  \n AF_ACHIEVEMENT_11 = 1024, //0000 0000 0000 0000 0000 0100 0000 0000  \n AF_ACHIEVEMENT_12 = 2048, //0000 0000 0000 0000 0000 1000 0000 0000  \n AF_ACHIEVEMENT_13 = 4096, //0000 0000 0000 0000 0001 0000 0000 0000  \n AF_ACHIEVEMENT_14 = 8192, //0000 0000 0000 0000 0010 0000 0000 0000  \n AF_ACHIEVEMENT_15 = 16384, //0000 0000 0000 0000 0100 0000 0000 0000  \n AF_ACHIEVEMENT_16 = 32768, //0000 0000 0000 0000 1000 0000 0000 0000  \n AF_ACHIEVEMENT_17 = 65536, //0000 0000 0000 0001 0000 0000 0000 0000  \n AF_ACHIEVEMENT_18 = 131072, //0000 0000 0000 0010 0000 0000 0000 0000  \n AF_ACHIEVEMENT_19 = 262144, //0000 0000 0000 0100 0000 0000 0000 0000  \n AF_ACHIEVEMENT_20 = 524287, //0000 0000 0000 1000 0000 0000 0000 0000  \n }  \n }\n\nAs you can see, there are still some spaces in that 32bits that we could use if we need to. Base 2 is pretty simple to calculate, just keep doubling the previous value to get the next one.  \n I tend to also set two more values, in this case:\n\nAF_ALL_OFF = 0;  \n AF_ALL_ON = 1048573 // this is 20 bits on. I could have used 4294967295, which would have been all 32 bits on, this would have allowed me to add some more achievements in without needing to push the ALL_ON flag further out. Either way will work, you only ever test the values youâ€™ve set anyway.\n\nNow how do we use this?\n\nExactly like we did at the beginning with the bitwise operators.\n\nWe have an instance of this enum which probably holds a value that doesnâ€™t even exist on that list above because itâ€™s a combination of them. But thatâ€™s fine. Lets say if we have a blank, empty copy. We want to unlock an achievement. Remember our old way. Weâ€™d have maybe 20 functions, one for each achievement. Something like:\n\nmanager.UnlockAchievementOne();\n\nwhich would call:\n\npublic void UnlockAchievementOne()  \n {  \n if(!achievementOneUnlocked)  \n {  \n achievementOneUnlocked = true;  \n openFeint.UnlockAchievement(achievementOneID); //this is still going to be an issue for us and we would use key/value pair to handle this, but Iâ€™ll do another post on that later.  \n }  \n }  \n Or we could have something like:\n\nmanager.UnlockAchievement(AchievementEnum.ACHIEVEMENT_ONE);\n\nwhich would call:\n\npublic void UnlockAchievement(AchievementEnum achievement)  \n {  \n switch(achievement)  \n {  \n case AchievementEnum.ACHIEVEMENT_ONE:  \n {  \n if(!achievementOneUnlocked)  \n {  \n achievementOneUnlocked = true;  \n openFeint.UnlockAchievement(achievementOneID);  \n }  \n break;  \n }  \n etcâ€¦..  \n }  \n }\n\nOr this way we can do the following\n\nmanager.UnlockAchievement(AchievementFlags.AF_ACHIEVEMENT_1);\n\nwhich would call:\n\npublic void UnlockAchievement(AchievementFlags unlockedAchievement)  \n {  \n if((mAchievements & unlockedAchievement) ==Â 0) //if this achievement is not already unlocked.  \n {  \n mAchievements = mAchievements | unlockAchievement; //turn on the flag in our state of Â  Â  achievements.  \n //this is where we would use a key/value pair to get the ID of the achievement  \n }  \n }\n\nand that would be the whole function, no switch, just a few lines.\n\nNow how do we save that?\n\nEasy.\n\nuint stateOfAchievements = (uint)mAchievements;  \n PlayerPrefs.SetInt(â€œstate of achievementsâ€, stateOfAchievements);\n\nand to load is the opposite.\n\nuint stateOfAchievements = PlayerPrefs.GetInt(â€œstate of achievements);  \n mAchievements = (AchievementFlags)stateOfAchievements;\n\nAnd that is that. I think.\n\nI hope that was informative and helpful. I really hope it was clear. I have an 11 month old who doesnâ€™t sleep well so Iâ€™m pretty tired and bit manipulation can do your head in at the best of times. If you have any questions donâ€™t hesitate to comment or email, Iâ€™ll usually respond fairly quickly. If you want to correct me, again go right ahead.\n\nI have another blog about Integrating OpenFeint with Unity (yes, number 3) that uses the latest (for now) versions of everything. Again there have been a few changes, so that should be up shortly. Iâ€™ll also endeavour to put up a little post on key/value pairs if anyone is interested. I havenâ€™t used them much, but they are pretty straight forward.\n\nThanks for reading.\n\nAdsy.\n\nâ€”â€”â€”â€”â€”â€”â€”â€”\n\nSo that was the original post. Itâ€™s long, but I think sufficiently detailed for complete beginners. Bitstrings are a complex and somewhat abstract concept. But they can also be very useful. What Iâ€™ve described here was the first case I needed them for. Using them to store a heap of meaningful bools is one way. But they can also be very handy in tilebased systems. I will follow this post up with another in the coming weeks describing how to use them in much larger amounts to store information on visibility or binary tile states (such as active/inactive or walkable/non-walkable).\n\nOne final note, Iâ€™ve noticed, when using FlaggedEnums you can debug them out using .ToString() and it will actually display all the enum identifiers that are on. Eg. (ACHIEVEMENT_01,ACHIEVEMENT_03,ACHIEVEMENT_08)\n\nHope that was informative.\n\nChat later,\n\nAdsy\n\n\n","html":"<p>Below is a reprint of an old blog post I wrote in November of 2011. Itâ€™s a little Unity oriented and makes mention of OpenFeint, which I was using a lot of at the time. OpenFeint was a cross platform leader board and achievement platform that no longer exists. Itâ€™s a long post. Probably too long really, but I like to think itâ€™s a great resource for new coders as much as those that have been doing it a little while, but havenâ€™t come across bitstrings before. Enjoy, and let me know what you think.</p>\n\n<p>â€”â€”â€”â€”â€”â€“</p>\n\n<p>So today Iâ€™ll be talking about making a mass of bools more efficient, both in time to code (smaller functions) and memory.</p>\n\n<p>Iâ€™m going to do that by utilising bit manipulation. Now Iâ€™m not an expert coder, Iâ€™m learning as I go. I do have an accelerated degree in Interactive Entertainment with a major in Games Programming, so Iâ€™m not completely uneducated in this area, but until you try to do something in code that youâ€™ve never done before, you donâ€™t really know if you know it yet. So Iâ€™m going to talk about what I have figured out and learnt in the last 2 days.</p>\n\n<p>First letâ€™s assume you are new to coding, or self taught and havenâ€™t come across bit manipulation yet. Bit manipulation refers to using (and changing or manipulating) the memory at a single bit level. As you no doubt know, a bit can be either one of two states, on or off, 1 or 0. Iâ€™m sure you can already see the connection between a bit and a bool. Before we get too much into that, letâ€™s talk about how they can be manipulated. Basically all your logic operators (AND, OR, XOR, NOT) can be applied to bits. Syntactically they are similar. <br />\n A logic AND is &amp;&amp;.</p>\n\n<p>E.g. If(one &amp;&amp; two)</p>\n\n<p>Which will only return true if both one AND two are true.</p>\n\n<p>A logic OR is ||</p>\n\n<p>E.g. If(one || two)</p>\n\n<p>Which returns true if either one OR two is true.</p>\n\n<p>For those of you wondering an XOR or â€œexclusive orâ€ is ^^ I believe. It rarely comes up in regular coding in my experience, though I do use it in bit wise operations as weâ€™ll see later. Exclusive or is true only if one is true and one is false, but it does it doesnâ€™t matter which.</p>\n\n<p>E.g. If(one ^^ two)</p>\n\n<p>Which returns true if one is true and two is false OR one is false and two is true. But not if both are true.</p>\n\n<p>This is a good place to mention if I have anything wrong please feel free to email. E or post a comment. Like I said Iâ€™m not an expert, Iâ€™m just trying to impart some knowledge as I discover it. However I havenâ€™t ever used logical XOR in my code so Iâ€™m only guessing it is represented by ^^.</p>\n\n<p>So thatâ€™s the logic operators, which you probably already knew. You may have wondered, like I did when i started coding, why they are double symbols. My guess here is the bitwise operators came first and to separate the logic ones from the bitwise ones they doubled the symbols. Youâ€™ve probably guessed then that the bitwise operators are the same, but single character.</p>\n\n<p>Understanding what they do is simple. The whole 1and 0 thing can be confusing, but if you starting out think of them as true and false instead and itâ€™ll make sense. <br />\n Now weâ€™ll take a quick look at something you might manipulate. To keep it simple lets look at a byte. <br />\n Assume we have two bytes. <br />\n one is 11001010 <br />\n Two is 11100001</p>\n\n<p>I know that can look pretty abstract but bear with me. If we want to AND these bytes we simple and each position with its corresponding position in the other byte. Simple to see if we put one above the other. Remember, think of them as true and false.</p>\n\n<p>11001010 &amp; <br />\n 11100001 <br />\n â€”â€”â€”â€”- <br />\n 11000000</p>\n\n<p>So only the bit positions that both have ones (so both are â€œtrueâ€) return one (â€œtrueâ€) exactly like a logic AND</p>\n\n<p>Ok, letâ€™s OR them.</p>\n\n<p>11001010 | <br />\n 11100001 <br />\n â€”â€”â€”â€”â€“ <br />\n 11101011.</p>\n\n<p>So any that had either one or the other â€œonâ€ (â€œtrueâ€) resulted in an â€œonâ€ bit in the answer.</p>\n\n<p>Finally letâ€™s quickly look at an XOR.</p>\n\n<p>11001010 ^ <br />\n 11100001 <br />\n â€”â€”â€”â€”â€“ <br />\n 00101011</p>\n\n<p>Here you can see that the positions that both were on are now off.</p>\n\n<p>Ok. Cool. What the heck is the point though?</p>\n\n<p>The point is we can use these operators to turn off and on specific positions. Imagine we have an empty byte. We want to turn on the 3rd position specifically. Easy, we just OR it.</p>\n\n<p>00000000 | <br />\n 00000100 <br />\n â€”â€”â€”â€”- <br />\n 00000100</p>\n\n<p>Now obviously we could have just said it equaled the second byte. But what if the first one wasnâ€™t empty. What if we had something like the following:</p>\n\n<p>11010010</p>\n\n<p>now turning on the third bit without destroying the rest would seem a little tricky. But if we OR it with our byte above we get</p>\n\n<p>11010010 <br />\n 00000100 <br />\n â€”â€”â€”â€” <br />\n 11010110</p>\n\n<p>which is exactly the same but with the third bit on. Plus, if it had already been on we would not have done any damage.</p>\n\n<p>What about turning one off you ask. Easy peasy. You OR it with the NOT of the one you want offâ€¦ seeâ€¦simple.</p>\n\n<p>So lets say we want to turn that pesky third bit back off. Hereâ€™s how to do it.</p>\n\n<p>We have: <br />\n 11010110 and we want to AND it with the NOT of the bit we want off, which would be <br />\n 11111011</p>\n\n<p>In this way, anything that was on stays on, anything that was off stays off and our special bit is turned off.</p>\n\n<p>And just quickly before moving on, to tell if a specific bit is on or not you and it with the but you want to check. So letâ€™s see if that third bit is on.</p>\n\n<p>11010010 &amp; <br />\n 00000100 <br />\n â€”â€”â€”â€” <br />\n 00000000</p>\n\n<p>what about the 8thÂ bit?</p>\n\n<p>11010010 &amp; <br />\n 10000000 <br />\n â€”â€”â€”â€” <br />\n 10000000</p>\n\n<p>so if the result is all 0â€™s your bit is off. Anything else and itâ€™s on.</p>\n\n<p>â€œThatâ€™s all greatâ€ you say, but I still donâ€™t see the point. Well Iâ€™m getting to it. Some of you may have already seen it. These bytes can be represented as numbers. For those of you who understand your binary itâ€™s simply a base 2 number system with the same rules as the base 10 one we use everyday.</p>\n\n<p>So our base 10 (or decimal system) works on columns of 10 to the power of (which I will represent with ^ so donâ€™t get that confused with the bitwise XOR)</p>\n\n<p>We saw this at school. We have the units column, the tens column, the hundreds column, the thousands column and you just add them all up.</p>\n\n<p>So 245 is:</p>\n\n<p>(2 * 10^2) + (4 * 10^1) + (5 * 10^0). Note: Anything to the power of 0 is 1.</p>\n\n<p>= 200 + 40 + 5 <br />\n =245</p>\n\n<p>Binary works the same, except it is base 2 so each column is 2 to a power. <br />\n 101 is:</p>\n\n<p>(1 * 2^2) + (0 * 2^1) + (1 * 2^0) <br />\n = 1*4 + 0 * 2 + 1 * 1 <br />\n = 5 <br />\n so 101 in binary is 5.</p>\n\n<p>So what does that mean for us? It means these things can be represented as numbers that can be saved to PlayerPrefs (look out, Iâ€™m starting to get to a relevant point here).</p>\n\n<p>Practical Usages</p>\n\n<p>Now we canâ€™t save a byte to PlayerPrefs. But we can save an int. Thatâ€™s handy, but we havenâ€™t seen a use for this yet. Youâ€™ll remember at the beginning I mentioned bools. If your games are anything like mine, they can have a tendency to have a mass of bools. Since Iâ€™m making iOS and Android games and using OpenFeint Iâ€™m tracking a heap of achievements at the least. Each one is a bool. It occurred to me that this is very inefficient in two ways.</p>\n\n<p>Firstly a the size of a bool is at least a byte. I did a quick google on the size of a bool and there is some contention. Most say a byte, but there seem to be some possible situations where they can be 2 bytes, or even 4. Thatâ€™s crazy, a bool is a binary state, itâ€™s true or false, on or off, 1 or 0. Even if itâ€™s only one byte thatâ€™s 8 times bigger than it really needs to be.</p>\n\n<p>Secondly my functions are ridiculous. If I have 20 something achievements I have a function for unlocking each one. I could optimise that by having an enum perhaps and passing that in. Then Iâ€™d have one function that would have a switch statement in it with a case for each one. And Iâ€™d still have 20 something bools being written to PlayerPrefs.</p>\n\n<p>So I have way too much code to write and manage and Iâ€™m saving 20 bytes (assuming 20 bools) at least. Thatâ€™s 160 bits to represent the same data that could be represented using 20 bits.</p>\n\n<p>So letâ€™s do something about it.</p>\n\n<p>The Octobool</p>\n\n<p>Octobool is a term that a good mate of mine introduced to me. It was the way he had been taught to handle this type of situation and it basically uses a single byte to hold the data of 8 bools. Each bit is a bool. The problem for us there is we canâ€™t write a byte to PlayerPrefs. Which brings me toâ€¦</p>\n\n<p>BitStrings</p>\n\n<p>BitStrings are what I was taught. It uses an int to store the bools. Obviously if you have 8 or less bools to store a byte would be better, but youâ€™d still have to store it as an int in the PlayerPrefs. With a BitString you can use an int that suits your needs. There are standard ints, which are normally 32 bits, shorts (16 bits) and longs (64 bits). There are also signed and unsigned. Let me just say here itâ€™s best to use unsigned. An int is usually signed by default, so I would recommend you use an unsigned int (for those new to coding an unsigned int is one that simply has no sign, meaning it canâ€™t be negative. It also means that the bit that would have to be reserved to represent the sign is freed up). The problem with signed ints is you canâ€™t use the sign but as a bool because the end result (the number) would then vary depending on if that bool is true or false. To access unsigned ints you simply put a u in front of the type declaration. For short and long you just use the types short and long. Simple. <br />\n So: <br />\n int standardInt; //32bit value between -2147483648 and 2147483647 (-2^31 and 2^31 -1) <br />\n uint unsignedStandardInt; //32bit value between 0 and 4294967295 (2^32 -1) <br />\n short shortInt; //16bit <br />\n ushort unsignedShort; //16bit positive values <br />\n long longInt; //64bit <br />\n ulong unsignedLongInt; //64bit positive values</p>\n\n<p>(As a note I took a quick look at MSDN and Iâ€™m not sure but I think a long can only be signed, they donâ€™t mention an unsigned version, however in MonoDevelop ulong is a recognised type so Iâ€™m a bit up in the air there. I think it must exist if the type is recognised by the IDE, so if you have more than 32 bools that you would like to store together, Iâ€™m pretty sure you can do it).</p>\n\n<p>BitArrays</p>\n\n<p>BitArrays are a structure that exists in c# that I at first thought was a BitString, which was going to save me having to write a class myself. However I had quite a bit of trouble with it. Mainly getting itâ€™s contents into an int for saving. It seemed to have a CopyTo() function but that could only save to ints that were in an array, so I had to make an int array with one int in it to copy the BitArray into and manipulating the contents of the BitArray wasnâ€™t as straight forward as I would have liked. I posted the question on the Unity forum and was pointed in the right direction (thanks Ntero!). There is a structure in c# to do what we want. Itâ€™s called a FlaggedEnum.</p>\n\n<p>FlaggedEnum</p>\n\n<p>Itâ€™s a little difficult to wrap your head around at first, I think basically because itâ€™s very simple. I will quickly explain an enum for those who arenâ€™t sure what they are. An enum is basically wrapping an integer in a word to make it easier to read your code. So maybe you have your game states stored as an enum. There is a menu state, a paused state, a play state, maybe and endscreen state or something like that. You then create an enum that has words to represent each of these, but underneath they are really just integers. You could do the same thing with #DEFINE or even just an int with some comments. Something like:</p>\n\n<p>int gameState; //1 = menu, 2 = play, 3 = paused, 4 = end screen.</p>\n\n<p>And you just have to remember those. Your game loop has a switch in it that checks these and you have your logic for each state. You can do the same thing with an enum but it makes you game loop look a little clearer.</p>\n\n<p>enum GameState <br />\n { <br />\n GS<em>MENU, <br />\n GS</em>PLAY, <br />\n GS<em>PAUSED, <br />\n GS</em>END_SCREEN <br />\n };</p>\n\n<p>GameState m_state;</p>\n\n<p>couple of things to note there. <br />\n First that is my personal convention for defining an enum, most of the coders I have seen do the same. Capitals for the values, use underscores, and usually have some sort of code at the start. In this case there is unlikely to be another enum with similar names, but itâ€™s safer this way. So GS is for GameState. Notice there are commas after each entry except the last (you can have one, but you donâ€™t need it). Also note the semi-colon after the closing curly bracket. Donâ€™t forget to actually create an instance of this to use in your game as well. <br />\n So I have no numeric values in here. The compiler will therefore assume it starts at 0 and increments. So GS_PLAY is actually equal to 1. i.e. if you wrote:</p>\n\n<p>Debug.Log(((int)GS_PLAY).ToString());</p>\n\n<p>it would debug out 1</p>\n\n<p>what I could do is start anywhere:</p>\n\n<p>enum GameState <br />\n { <br />\n GS<em>MENU = 10, <br />\n GS</em>PLAY, <br />\n GS<em>PAUSED, <br />\n GS</em>END_SCREEN <br />\n };</p>\n\n<p>in which case GS_PLAY now equals 11 and so on.</p>\n\n<p>Take it a step further and I can do this:</p>\n\n<p>enum GameState <br />\n { <br />\n GS<em>MENU = 10, <br />\n GS</em>PLAY = 20, <br />\n GS<em>PAUSED = 100, <br />\n GS</em>END_SCREEN = 55 <br />\n };</p>\n\n<p>There is absolutely no reason to do this (and many reasons not to), but it works. Itâ€™s great that we can do this, because we need it for the next step.</p>\n\n<p>So thatâ€™s enums. FlaggedEnums have a flags attribute set on them. This allows you to do bitwise operations on them. To do that all you need to do is add the following line: <br />\n [FlagsAttribute]</p>\n\n<p>Lets create an enum that has a little more relevance. If you would like to access this from any of your scripts just make a class for your enums. It would look something like this.</p>\n\n<p>using UnityEngine; <br />\n using System; <br />\n using System.Collections;</p>\n\n<p>public class FlaggedEnums : MonoBehaviour <br />\n { <br />\n [FlagsAttribute] <br />\n public enum AchievementFlags <br />\n { <br />\n AF<em>ACHIEVEMENT</em>1, <br />\n AF<em>ACHIEVEMENT</em>2, <br />\n AF<em>ACHIEVEMENT</em>3, <br />\n AF<em>ACHIEVEMENT</em>4, <br />\n AF<em>ACHIEVEMENT</em>5, <br />\n AF<em>ACHIEVEMENT</em>6, <br />\n AF<em>ACHIEVEMENT</em>7, <br />\n AF<em>ACHIEVEMENT</em>8, <br />\n AF<em>ACHIEVEMENT</em>9, <br />\n AF<em>ACHIEVEMENT</em>10, <br />\n AF<em>ACHIEVEMENT</em>11, <br />\n AF<em>ACHIEVEMENT</em>12, <br />\n AF<em>ACHIEVEMENT</em>13, <br />\n AF<em>ACHIEVEMENT</em>14, <br />\n AF<em>ACHIEVEMENT</em>15, <br />\n AF<em>ACHIEVEMENT</em>16, <br />\n AF<em>ACHIEVEMENT</em>17, <br />\n AF<em>ACHIEVEMENT</em>18, <br />\n AF<em>ACHIEVEMENT</em>19, <br />\n AF<em>ACHIEVEMENT</em>20, <br />\n } <br />\n }</p>\n\n<p>Which is great. But if we are going to perform bitwise operations on this and expect it work we need each of these to represent a bit in the number, so we need to modify to this:</p>\n\n<p>using UnityEngine; <br />\n using System; <br />\n using System.Collections;</p>\n\n<p>public class FlaggedEnums : MonoBehaviour <br />\n { <br />\n [FlagsAttribute] <br />\n public enum AchievementFlags <br />\n { <br />\n AF<em>ACHIEVEMENT</em>1 = 1, //0000 0000 0000 0000 0000 0000 0000 0001 <br />\n AF<em>ACHIEVEMENT</em>2 = 2, //0000 0000 0000 0000 0000 0000 0000 0010 <br />\n AF<em>ACHIEVEMENT</em>3 = 4, //0000 0000 0000 0000 0000 0000 0000 0100 <br />\n AF<em>ACHIEVEMENT</em>4 = 8, //0000 0000 0000 0000 0000 0000 0000 1000 <br />\n AF<em>ACHIEVEMENT</em>5 = 16, //0000 0000 0000 0000 0000 0000 0001 0000 <br />\n AF<em>ACHIEVEMENT</em>6 = 32, //0000 0000 0000 0000 0000 0000 0010 0000 <br />\n AF<em>ACHIEVEMENT</em>7 = 64, //0000 0000 0000 0000 0000 0000 0100 0000 <br />\n AF<em>ACHIEVEMENT</em>8 = 128, //0000 0000 0000 0000 0000 0000 1000 0000 <br />\n AF<em>ACHIEVEMENT</em>9 = 256, //0000 0000 0000 0000 0000 0001 0000 0000 <br />\n AF<em>ACHIEVEMENT</em>10 = 512, //0000 0000 0000 0000 0000 0010 0000 0000 <br />\n AF<em>ACHIEVEMENT</em>11 = 1024, //0000 0000 0000 0000 0000 0100 0000 0000 <br />\n AF<em>ACHIEVEMENT</em>12 = 2048, //0000 0000 0000 0000 0000 1000 0000 0000 <br />\n AF<em>ACHIEVEMENT</em>13 = 4096, //0000 0000 0000 0000 0001 0000 0000 0000 <br />\n AF<em>ACHIEVEMENT</em>14 = 8192, //0000 0000 0000 0000 0010 0000 0000 0000 <br />\n AF<em>ACHIEVEMENT</em>15 = 16384, //0000 0000 0000 0000 0100 0000 0000 0000 <br />\n AF<em>ACHIEVEMENT</em>16 = 32768, //0000 0000 0000 0000 1000 0000 0000 0000 <br />\n AF<em>ACHIEVEMENT</em>17 = 65536, //0000 0000 0000 0001 0000 0000 0000 0000 <br />\n AF<em>ACHIEVEMENT</em>18 = 131072, //0000 0000 0000 0010 0000 0000 0000 0000 <br />\n AF<em>ACHIEVEMENT</em>19 = 262144, //0000 0000 0000 0100 0000 0000 0000 0000 <br />\n AF<em>ACHIEVEMENT</em>20 = 524287, //0000 0000 0000 1000 0000 0000 0000 0000 <br />\n } <br />\n }</p>\n\n<p>As you can see, there are still some spaces in that 32bits that we could use if we need to. Base 2 is pretty simple to calculate, just keep doubling the previous value to get the next one. <br />\n I tend to also set two more values, in this case:</p>\n\n<p>AF_ALL_OFF = 0; <br />\n AF<em>ALL</em>ON = 1048573 // this is 20 bits on. I could have used 4294967295, which would have been all 32 bits on, this would have allowed me to add some more achievements in without needing to push the ALL_ON flag further out. Either way will work, you only ever test the values youâ€™ve set anyway.</p>\n\n<p>Now how do we use this?</p>\n\n<p>Exactly like we did at the beginning with the bitwise operators.</p>\n\n<p>We have an instance of this enum which probably holds a value that doesnâ€™t even exist on that list above because itâ€™s a combination of them. But thatâ€™s fine. Lets say if we have a blank, empty copy. We want to unlock an achievement. Remember our old way. Weâ€™d have maybe 20 functions, one for each achievement. Something like:</p>\n\n<p>manager.UnlockAchievementOne();</p>\n\n<p>which would call:</p>\n\n<p>public void UnlockAchievementOne() <br />\n { <br />\n if(!achievementOneUnlocked) <br />\n { <br />\n achievementOneUnlocked = true; <br />\n openFeint.UnlockAchievement(achievementOneID); //this is still going to be an issue for us and we would use key/value pair to handle this, but Iâ€™ll do another post on that later. <br />\n } <br />\n } <br />\n Or we could have something like:</p>\n\n<p>manager.UnlockAchievement(AchievementEnum.ACHIEVEMENT_ONE);</p>\n\n<p>which would call:</p>\n\n<p>public void UnlockAchievement(AchievementEnum achievement) <br />\n { <br />\n switch(achievement) <br />\n { <br />\n case AchievementEnum.ACHIEVEMENT_ONE: <br />\n { <br />\n if(!achievementOneUnlocked) <br />\n { <br />\n achievementOneUnlocked = true; <br />\n openFeint.UnlockAchievement(achievementOneID); <br />\n } <br />\n break; <br />\n } <br />\n etcâ€¦.. <br />\n } <br />\n }</p>\n\n<p>Or this way we can do the following</p>\n\n<p>manager.UnlockAchievement(AchievementFlags.AF<em>ACHIEVEMENT</em>1);</p>\n\n<p>which would call:</p>\n\n<p>public void UnlockAchievement(AchievementFlags unlockedAchievement) <br />\n { <br />\n if((mAchievements &amp; unlockedAchievement) ==Â 0) //if this achievement is not already unlocked. <br />\n { <br />\n mAchievements = mAchievements | unlockAchievement; //turn on the flag in our state of Â  Â  achievements. <br />\n //this is where we would use a key/value pair to get the ID of the achievement <br />\n } <br />\n }</p>\n\n<p>and that would be the whole function, no switch, just a few lines.</p>\n\n<p>Now how do we save that?</p>\n\n<p>Easy.</p>\n\n<p>uint stateOfAchievements = (uint)mAchievements; <br />\n PlayerPrefs.SetInt(â€œstate of achievementsâ€, stateOfAchievements);</p>\n\n<p>and to load is the opposite.</p>\n\n<p>uint stateOfAchievements = PlayerPrefs.GetInt(â€œstate of achievements); <br />\n mAchievements = (AchievementFlags)stateOfAchievements;</p>\n\n<p>And that is that. I think.</p>\n\n<p>I hope that was informative and helpful. I really hope it was clear. I have an 11 month old who doesnâ€™t sleep well so Iâ€™m pretty tired and bit manipulation can do your head in at the best of times. If you have any questions donâ€™t hesitate to comment or email, Iâ€™ll usually respond fairly quickly. If you want to correct me, again go right ahead.</p>\n\n<p>I have another blog about Integrating OpenFeint with Unity (yes, number 3) that uses the latest (for now) versions of everything. Again there have been a few changes, so that should be up shortly. Iâ€™ll also endeavour to put up a little post on key/value pairs if anyone is interested. I havenâ€™t used them much, but they are pretty straight forward.</p>\n\n<p>Thanks for reading.</p>\n\n<p>Adsy.</p>\n\n<p>â€”â€”â€”â€”â€”â€”â€”â€”</p>\n\n<p>So that was the original post. Itâ€™s long, but I think sufficiently detailed for complete beginners. Bitstrings are a complex and somewhat abstract concept. But they can also be very useful. What Iâ€™ve described here was the first case I needed them for. Using them to store a heap of meaningful bools is one way. But they can also be very handy in tilebased systems. I will follow this post up with another in the coming weeks describing how to use them in much larger amounts to store information on visibility or binary tile states (such as active/inactive or walkable/non-walkable).</p>\n\n<p>One final note, Iâ€™ve noticed, when using FlaggedEnums you can debug them out using .ToString() and it will actually display all the enum identifiers that are on. Eg. (ACHIEVEMENT<em>01,ACHIEVEMENT</em>03,ACHIEVEMENT_08)</p>\n\n<p>Hope that was informative.</p>\n\n<p>Chat later,</p>\n\n<p>Adsy</p>","image":"http://res.cloudinary.com/adamsingle/image/upload/v1443437752/Binary-Code_llevdp.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-06-15T21:27:17.000Z","created_by":1,"updated_at":"2014-08-25T14:12:16.000Z","updated_by":1,"published_at":"2013-06-15T21:27:17.000Z","published_by":1},{"id":27,"uuid":"dad29310-272f-4f01-a151-a7debc09dc06","title":"Disney's Electric Beat","slug":"disneys-electric-beat","markdown":"\nElectric Beat is a small rhythm game made for Disney Japan by Liquid Interactive. Liquid brought me on to develop the game in Unity. Most of the art assets were created at Liquid, with some UI, the music and final say all coming from Disney Japan. Itâ€™s bright and flashy and very Disney. Imagine a simplified Guitar Hero on a rollercoaster like fret board.\n\n[![ElectricBeatTitlePage](http://res.cloudinary.com/adamsingle/image/upload/v1443437747/ElectricBeatTitlePage_jag2ko.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437747/ElectricBeatTitlePage_jag2ko.jpg)\n\nWith an 8 week conception to delivery production cycle, this was a tough game to make. From the development side, itâ€™s got a few things going for it. Firstly, it was only a single level. For speed of production we could minimise level building tools as we only needed to create the one, defined experience. Secondly, it was being made as a preinstalled game for a specific, and small, set of Japanese Disney phones. This meant the hardware specs were nicely set in stone, despite being for Android.\n\nThere were some delays getting assets from the client that led to the delivery time being pushed out, but Iâ€™m proud to say it would have met the crazily short 8 week deadline otherwise.\n\nSadly, since this game only exists on a few specific handsets in Japan, many of you reading this will never play it, or even see it, in person. So I have included as much as I can here so you can get a feel for it. It was a lot of fun and the challenge provided many valuable lessons that helped speed up my process. I look forward to working with Disney and Liquid again in the future.\n\nÂ \n\nScreenshots:\n\n[nggallery id=6]\n\nThe following is some game play footage. The audio is removed. The song in the game was made specifically for it and downloading it is unlocked by completing the level. Until I get permission to share it, Iâ€™ll leave it off.\n\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/aixmBZ2ttrA?feature=oembed\" width=\"640\"></iframe>\n\n\n","html":"<p>Electric Beat is a small rhythm game made for Disney Japan by Liquid Interactive. Liquid brought me on to develop the game in Unity. Most of the art assets were created at Liquid, with some UI, the music and final say all coming from Disney Japan. Itâ€™s bright and flashy and very Disney. Imagine a simplified Guitar Hero on a rollercoaster like fret board.</p>\n\n<p><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437747/ElectricBeatTitlePage_jag2ko.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437747/ElectricBeatTitlePage_jag2ko.jpg\" alt=\"ElectricBeatTitlePage\" title=\"\" /></a></p>\n\n<p>With an 8 week conception to delivery production cycle, this was a tough game to make. From the development side, itâ€™s got a few things going for it. Firstly, it was only a single level. For speed of production we could minimise level building tools as we only needed to create the one, defined experience. Secondly, it was being made as a preinstalled game for a specific, and small, set of Japanese Disney phones. This meant the hardware specs were nicely set in stone, despite being for Android.</p>\n\n<p>There were some delays getting assets from the client that led to the delivery time being pushed out, but Iâ€™m proud to say it would have met the crazily short 8 week deadline otherwise.</p>\n\n<p>Sadly, since this game only exists on a few specific handsets in Japan, many of you reading this will never play it, or even see it, in person. So I have included as much as I can here so you can get a feel for it. It was a lot of fun and the challenge provided many valuable lessons that helped speed up my process. I look forward to working with Disney and Liquid again in the future.</p>\n\n<p>Screenshots:</p>\n\n<p>[nggallery id=6]</p>\n\n<p>The following is some game play footage. The audio is removed. The song in the game was made specifically for it and downloading it is unlocked by completing the level. Until I get permission to share it, Iâ€™ll leave it off.</p>\n\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/aixmBZ2ttrA?feature=oembed\" width=\"640\"></iframe>","image":"http://res.cloudinary.com/adamsingle/image/upload/v1443437689/ElectricBeatBanner1_mwkf9v.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-07-31T13:11:46.000Z","created_by":1,"updated_at":"2015-09-28T20:55:47.000Z","updated_by":1,"published_at":"2013-07-31T13:11:46.000Z","published_by":1},{"id":28,"uuid":"421077f3-c4d8-4dd0-8439-9f8091c77d12","title":"Robot University","slug":"robot-university","markdown":"\n[info] Updates:\n\nâ€“[[update] On Site Induction](http://adamsingle.com/robot-university-on-site-induction/ \"Robot University â€“ On Site Induction\")  \n â€“[[update] Camera Set Up ](http://wp.me/p2Y6jt-wN)  \n â€“[[update] Camera Set Up â€“ Final ](http://adamsingle.com/robot-university-camera-setup-final/)\n\n[/info]\n\nRobot University is an interactive public display at [QUTâ€™s The Cube](http://www.thecube.qut.edu.au/ \"The Cube\"). It is the first Digital Writing Residency in Australia, and it has been awarded to Christy Dena from [Universe Creation 101](http://www.universecreation101.com/ \"Universe Creation 101\")Â and she has selected me to be the programmer in the team. The cube is a $230 million Science and Technology center. We will be taking advantage of the touch screens and Kinect motion sensors to build a unique experience for the visitors.\n\nTo quote Christy:\n\n> The project, provisionally titled â€œRobot University,â€ aims to transform negative attitudes towards robots. Western entertainment often paints robots as killing machines bent on our demise.Â Itâ€™s important that we consider the cultural impact of robots and how we interact with them now, so that we can better prepare ourselves for our ever-growing community of robotsâ€¦a new species weâ€™ve created.â€\n\nWe are only in the early design stages now, but I hope to add a few development blog posts here as we go along.\n\nThe other members of our team are:\n\n[Christy Dena](http://www.universecreation101.com/people/) â€“ Writer, designer and director\n\n[Jacek Tuschewski](http://lamaic.com/audio.php)Â â€“ Sound designer and composer\n\n[Paul Stapelberg](http://paulstapelberg.com/)Â â€“ 3D modeller and animator\n\n[Simon Boxer](http://simonboxer.com/)Â â€“ Visual artist\n\nÂ \n\n[Kirsty Boyle](http://www.onnai.com/)Â â€“ Creative associate\n\n[Prof Peter Corke](http://staff.qut.edu.au/staff/corkep/)Â â€“ Research associate\n\nÂ \n\n[Lubi Thomas](http://au.linkedin.com/pub/lubi-thomas/12/658/330)Â â€“ Senior curator, The Cube\n\nRachael Parsons â€“ Project manager, The Cube\n\nÂ \n\nPress:\n\n- ***Australia Council for the Arts***Â â€˜[July Newsletter](http://view.s4.exacttarget.com/?j=febf1d7477650c75&m=fe93157070620c7a74&ls=fe2110757167057a731379&l=ff281c777067&s=fe5713777462017f7c17&jb=ffcf14&ju=fe6316727d63067e7716&r=0)â€˜ â€“ Tony Grybowski, July 2013\n- ***Artery***Â â€˜[Christy Denaâ€™s digital writing residency will make you rethink robots](http://artery.australiacouncil.gov.au/2013/07/christy-denas-digital-writing-residency-will-make-you-rethink-robots/)â€˜ â€“ Elliott Bledsoe, 10 July 2013 [reposted onÂ [ElliottBledsoe.com](http://elliottbledsoe.com/2013/07/christy-dena-digital-writing-residency/)]\n- ***Buziaulane***Â â€˜[Robot Ethics](http://buziaulane.blogspot.nl/2013/06/bpn-1638-robot-ethics.html)â€˜ â€“ Jak Boumans, 9 June 2013\n- ***Arts Hub***Â â€˜[Christy Dena takes up Australiaâ€™s First Digital Writing Residency](http://au.artshub.com/au/news-article/news/publishing-and-writing/christy-dena-takes-up-australias-first-digital-writing-residency-195601)â€˜Â â€“ Paul Isber, 6 June 2013\n- ***Screenplay (The Age, Sydney Morning Herald, Brisbane Times, etc)***Â â€˜[Tuesday Newsday: Digging up the turkeys of the past, and solving problems of the future](http://www.theage.com.au/digital-life/games/blogs/screenplay/tuesday-newsday-digging-up-the-turkeys-of-the-past-and-solving-the-problems-of-the-future-20130603-2nmju.html)â€˜Â â€“ James Dominguez, 5 June 2013\n- ***The Australian***, â€˜[Writersâ€™ grant goes to digital writer](http://www.theaustralian.com.au/arts/writers-grant-goes-to-digital-storyteller/story-e6frg8n6-1226655415125)â€˜Â â€“ Bridget Cormack, 3 June 2013 ([Print scan](http://www.universecreation101.com/wp-content/uploads/2013/06/ChristyDena_TheAust_030613.jpg))\n- ***QUT***,Â [â€˜Digital writing residency explores robot ethics](http://www.qut.edu.au/about/news/news?news-id=59017)â€˜Â â€“ Kate Haggman, 3 June 2013\n\n\n","html":"<p>[info] Updates:</p>\n\n<p>â€“<a href=\"http://adamsingle.com/robot-university-on-site-induction/\" title=\"Robot University â€“ On Site Induction\">[update] On Site Induction</a> <br />\n â€“<a href=\"http://wp.me/p2Y6jt-wN\">[update] Camera Set Up </a> <br />\n â€“<a href=\"http://adamsingle.com/robot-university-camera-setup-final/\">[update] Camera Set Up â€“ Final </a></p>\n\n<p>[/info]</p>\n\n<p>Robot University is an interactive public display at <a href=\"http://www.thecube.qut.edu.au/\" title=\"The Cube\">QUTâ€™s The Cube</a>. It is the first Digital Writing Residency in Australia, and it has been awarded to Christy Dena from <a href=\"http://www.universecreation101.com/\" title=\"Universe Creation 101\">Universe Creation 101</a>Â and she has selected me to be the programmer in the team. The cube is a $230 million Science and Technology center. We will be taking advantage of the touch screens and Kinect motion sensors to build a unique experience for the visitors.</p>\n\n<p>To quote Christy:</p>\n\n<blockquote>\n  <p>The project, provisionally titled â€œRobot University,â€ aims to transform negative attitudes towards robots. Western entertainment often paints robots as killing machines bent on our demise.Â Itâ€™s important that we consider the cultural impact of robots and how we interact with them now, so that we can better prepare ourselves for our ever-growing community of robotsâ€¦a new species weâ€™ve created.â€</p>\n</blockquote>\n\n<p>We are only in the early design stages now, but I hope to add a few development blog posts here as we go along.</p>\n\n<p>The other members of our team are:</p>\n\n<p><a href=\"http://www.universecreation101.com/people/\">Christy Dena</a> â€“ Writer, designer and director</p>\n\n<p><a href=\"http://lamaic.com/audio.php\">Jacek Tuschewski</a>Â â€“ Sound designer and composer</p>\n\n<p><a href=\"http://paulstapelberg.com/\">Paul Stapelberg</a>Â â€“ 3D modeller and animator</p>\n\n<p><a href=\"http://simonboxer.com/\">Simon Boxer</a>Â â€“ Visual artist</p>\n\n<p><a href=\"http://www.onnai.com/\">Kirsty Boyle</a>Â â€“ Creative associate</p>\n\n<p><a href=\"http://staff.qut.edu.au/staff/corkep/\">Prof Peter Corke</a>Â â€“ Research associate</p>\n\n<p><a href=\"http://au.linkedin.com/pub/lubi-thomas/12/658/330\">Lubi Thomas</a>Â â€“ Senior curator, The Cube</p>\n\n<p>Rachael Parsons â€“ Project manager, The Cube</p>\n\n<p>Press:</p>\n\n<ul>\n<li><strong><em>Australia Council for the Arts</em></strong>Â â€˜<a href=\"http://view.s4.exacttarget.com/?j=febf1d7477650c75&amp;m=fe93157070620c7a74&amp;ls=fe2110757167057a731379&amp;l=ff281c777067&amp;s=fe5713777462017f7c17&amp;jb=ffcf14&amp;ju=fe6316727d63067e7716&amp;r=0\">July Newsletter</a>â€˜ â€“ Tony Grybowski, July 2013</li>\n<li><strong><em>Artery</em></strong>Â â€˜<a href=\"http://artery.australiacouncil.gov.au/2013/07/christy-denas-digital-writing-residency-will-make-you-rethink-robots/\">Christy Denaâ€™s digital writing residency will make you rethink robots</a>â€˜ â€“ Elliott Bledsoe, 10 July 2013 [reposted onÂ <a href=\"http://elliottbledsoe.com/2013/07/christy-dena-digital-writing-residency/\">ElliottBledsoe.com</a>]</li>\n<li><strong><em>Buziaulane</em></strong>Â â€˜<a href=\"http://buziaulane.blogspot.nl/2013/06/bpn-1638-robot-ethics.html\">Robot Ethics</a>â€˜ â€“ Jak Boumans, 9 June 2013</li>\n<li><strong><em>Arts Hub</em></strong>Â â€˜<a href=\"http://au.artshub.com/au/news-article/news/publishing-and-writing/christy-dena-takes-up-australias-first-digital-writing-residency-195601\">Christy Dena takes up Australiaâ€™s First Digital Writing Residency</a>â€˜Â â€“ Paul Isber, 6 June 2013</li>\n<li><strong><em>Screenplay (The Age, Sydney Morning Herald, Brisbane Times, etc)</em></strong>Â â€˜<a href=\"http://www.theage.com.au/digital-life/games/blogs/screenplay/tuesday-newsday-digging-up-the-turkeys-of-the-past-and-solving-the-problems-of-the-future-20130603-2nmju.html\">Tuesday Newsday: Digging up the turkeys of the past, and solving problems of the future</a>â€˜Â â€“ James Dominguez, 5 June 2013</li>\n<li><strong><em>The Australian</em></strong>, â€˜<a href=\"http://www.theaustralian.com.au/arts/writers-grant-goes-to-digital-storyteller/story-e6frg8n6-1226655415125\">Writersâ€™ grant goes to digital writer</a>â€˜Â â€“ Bridget Cormack, 3 June 2013 (<a href=\"http://www.universecreation101.com/wp-content/uploads/2013/06/ChristyDena_TheAust_030613.jpg\">Print scan</a>)</li>\n<li><strong><em>QUT</em></strong>,Â <a href=\"http://www.qut.edu.au/about/news/news?news-id=59017\">â€˜Digital writing residency explores robot ethics</a>â€˜Â â€“ Kate Haggman, 3 June 2013</li>\n</ul>","image":"http://res.cloudinary.com/adamsingle/image/upload/v1443437688/RobotUniversityBanner_ro65xy.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-07-31T13:48:57.000Z","created_by":1,"updated_at":"2013-10-14T16:25:01.000Z","updated_by":1,"published_at":"2013-07-31T13:48:57.000Z","published_by":1},{"id":29,"uuid":"0f8b7a41-86e1-4fb7-b366-2069d4ed2f4f","title":"Robot University - On Site Induction","slug":"robot-university-on-site-induction","markdown":"\n[info][Back to Robot University Main Page](http://adamsingle.com/robot-university/ \"Robot University\")[/info]\n\nThis week the creative seas of our little collective met and lashed the mighty coastline that is The Cube. Probing for weaknesses, seeking pathways to new ideas.\n\n[![IMG_3390](http://res.cloudinary.com/adamsingle/image/upload/h_334,w_640/v1443437687/IMG_3390_ddt3k4.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437687/IMG_3390_ddt3k4.jpg)\n\nThis was the first time we had all been together in one place, and for many of us, the first time we had met each other in person. This in itself is a wonderful step forward. Being able to hold an impromptu discussion with someone, on anything at all, is incredibly important when it comes to building your impression, trust and confidence in a person that you are going to be working with. Iâ€™m delighted at the professionalism, creativity and motivation that Christy, Jacek, Simon and Paul showed. I am very much looking forward to this project.\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_1990\" style=\"width: 1034px\">[![TeamatCube](http://res.cloudinary.com/adamsingle/image/upload/h_480,w_640/v1443437685/TeamatCube_x0bklg.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437685/TeamatCube_x0bklg.jpg)Left to Right: Paul Stapelberg, Jacek Tuschewski, Christy Dena, Simon Boxer and me\n\n</div>That was the first exciting part. The second was the space weâ€™ll be working in. If you live in Brisbane, come here often, or even infrequently, in fact, if you ever visit in the future, if only for a day, you must see [The Cube](http://www.thecube.qut.edu.au/ \"The Cube\"). There are photos on the site, and Iâ€™ll be adding many more in this post, but until you stand in front of it, it doesnâ€™t quite sink in. And when you are looking at it with the eyes of a developer, it gets your heart rate right up. So much potential.\n\nWe spent the two days of our induction meeting the amazing staff at The Cube and touring the space weâ€™ll be developing in and for. Everyone was incredibly helpful and friendly, and clearly have a passion for seeing awesome content on their amazing facility. I was blown away with the whole campus. Itâ€™s been a while since I was on one, and I was struck with an overwhelming desire to return to studies. Especially during our tour of the robotics labs (check out the gallery just below for a taste of that). Although speaking to the guys there I realised my passion isnâ€™t so much with robotics as the AI behind them. Thatâ€™s still what I really want to do one day. If I ever find time Iâ€™ll actually get stuck into the many free AI university level courses available online.\n\n[nggallery id=9]\n\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"480\" src=\"https://www.youtube.com/embed/eH2f9HGARKY?feature=oembed\" width=\"640\"></iframe>\n\nI spent a lot of my time before the schedule kicked in to observe people using the installations that are currently up on the walls. There is a huge interactive reef on Zone 1 and 2. Zone 1 and 2 is the big one. Itâ€™s combined into one zone really, and has a different set up to zones 3 and 4 (which are the zones we are building for. See the specs further down). This drew some attention, predominantly for itâ€™s sheer scale in my opinion.\n\n[nggallery id=19]\n\nÂ \n\nThe one that really caught peoples attention was the physics playground. This is a great interactive installation that allows you to change the gravity to match the different planets in our solar system and play with a mass of wooden blocks. There are also plenty of other interactive elements, but itâ€™s the blocks that people are really drawn to. This was also set up on zone 3, which is the one we are most likely deploying on.\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_2001\" style=\"width: 891px\">[![The Cube - Zone 3. Physics Playground.](http://res.cloudinary.com/adamsingle/image/upload/v1443437684/Zone3_shserx.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437684/Zone3_shserx.jpg)The Cube â€“ Zone 3. Physics Playground.\n\n</div>Check out the video of a group of Japanese school kids. They spent ages here.\n\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/X5antXrqh-I?feature=oembed\" width=\"640\"></iframe>\n\nÂ \n\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/VGlxgKjg1ho?feature=oembed\" width=\"640\"></iframe>\n\nÂ \n\nFor those technically interested, here is a breakdown of the space.\n\nThe wall consists of 12 55-inch Multitaction MT553s. They are an optical (infra-red) based unit, able to accept an unlimited number of touch events and will be using the TUIO touch protocol. Each panel is installed in the portrait orientation and has a resolution of 1080 x 1920. Panels are paired, each pair being controlled by a single â€œnodeâ€ computer running 2 Intel Xeon E5-2643 3.33Ghz CPUs, 32GB quad-channel, 1600Mhz of RAM, Creative X-FI Extreme PCIe sound adapter and an NVIDIA GTX690 graphics card.\n\nAbove the Touch Panels is a large projection zone. This uses 3 Panasonic DZ6700 projectors connected to another â€œnodeâ€ PC which uses edge blending to composite the output to a single image with a resolution of 5360 x 1114.\n\nAs a predominantly mobile developer, you can perhaps imagine how my head spins a little at the thought. When I first started out I was trying to fit a game into 30MB to run on a 320Ã—480 screen with 256MB RAM. In some ways, this removes a lot of the challenges I usually deal with. Optimisation, although an integral part of game development no matter what (and completely drummed into me from mobile dev), is somewhat moot on this set up. Theoretically there isnâ€™t much this thing wonâ€™t be able to handle. And considering our scope restrictions, we shouldnâ€™t come close to maxing it out. But, having said that, there is a new challenge. Although the wall appears (or in our case, will appear) to be one large interactive scene, it will be running simultaneously on 7 different machines (12 touch screens gives 6 machines controlling 2 each, and one more to control the three projectors overhead). This is certainly something Iâ€™ve never come across before.\n\nSo, my first task is clear. I need to get a test rig happening up there. We have a test environment available to us that uses 4 touch screens (set up the same way as the walls) and a projected (though smaller) panel above. So this is a 3 system set up, but once I have it working on that, extending to the 7 system set up wonâ€™t be any more difficult. I plan to treat this like any multiplayer game and use Unityâ€™s built in networking to set up an environment where each playerâ€™s camera is fixed in the world, defining their view. When assembled in the correct configuration you get a seamless view of the world as if through one giant camera. I actually find this an interesting starting point for an actual multiplayer game, I may toy with the idea a little more after I this project, but imagine playing a game where you canâ€™t move your camera, and neither can anyone else, but everyone is looking at a different part of the world. Or even a board game that requires the players to put their iPads together. Or maybe they only do that at certain times to solve things together. Could be some interesting ideas in there.\n\nWhen I get the rig working in Unity Iâ€™ll do up a video showing how Iâ€™ve set it up, and then another once I have it up on the test set up, so keep an eye out for that (there may even be some Kinect detection happening in that one).\n\nAs you can tell, very excited about this project. I hope to keep you all up to date as I go along. Iâ€™ll either link to the blog posts of other team members from the main [Robot University page](http://adamsingle.com/robot-university/ \"Robot University\")Â or write updates that include some of the work they are doing. And be sure to check out The Cube if you get the opportunity. Get a feel for whatâ€™s there now, because we plan on outdoing them ï¿½ï¿½\n\nChat later,\n\nAdsy\n\nÂ \n\nÂ \n\nÂ \n\nÂ \n\n\n","html":"<p>[info]<a href=\"http://adamsingle.com/robot-university/\" title=\"Robot University\">Back to Robot University Main Page</a>[/info]</p>\n\n<p>This week the creative seas of our little collective met and lashed the mighty coastline that is The Cube. Probing for weaknesses, seeking pathways to new ideas.</p>\n\n<p><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437687/IMG_3390_ddt3k4.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/h_334,w_640/v1443437687/IMG_3390_ddt3k4.jpg\" alt=\"IMG_3390\" title=\"\" /></a></p>\n\n<p>This was the first time we had all been together in one place, and for many of us, the first time we had met each other in person. This in itself is a wonderful step forward. Being able to hold an impromptu discussion with someone, on anything at all, is incredibly important when it comes to building your impression, trust and confidence in a person that you are going to be working with. Iâ€™m delighted at the professionalism, creativity and motivation that Christy, Jacek, Simon and Paul showed. I am very much looking forward to this project.</p>\n\n<p><div class=\"wp-caption aligncenter\" id=\"attachment_1990\" style=\"width: 1034px\"><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437685/TeamatCube_x0bklg.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/h_480,w_640/v1443437685/TeamatCube_x0bklg.jpg\" alt=\"TeamatCube\" title=\"\" /></a>Left to Right: Paul Stapelberg, Jacek Tuschewski, Christy Dena, Simon Boxer and me</p>\n\n<p></div>That was the first exciting part. The second was the space weâ€™ll be working in. If you live in Brisbane, come here often, or even infrequently, in fact, if you ever visit in the future, if only for a day, you must see <a href=\"http://www.thecube.qut.edu.au/\" title=\"The Cube\">The Cube</a>. There are photos on the site, and Iâ€™ll be adding many more in this post, but until you stand in front of it, it doesnâ€™t quite sink in. And when you are looking at it with the eyes of a developer, it gets your heart rate right up. So much potential.</p>\n\n<p>We spent the two days of our induction meeting the amazing staff at The Cube and touring the space weâ€™ll be developing in and for. Everyone was incredibly helpful and friendly, and clearly have a passion for seeing awesome content on their amazing facility. I was blown away with the whole campus. Itâ€™s been a while since I was on one, and I was struck with an overwhelming desire to return to studies. Especially during our tour of the robotics labs (check out the gallery just below for a taste of that). Although speaking to the guys there I realised my passion isnâ€™t so much with robotics as the AI behind them. Thatâ€™s still what I really want to do one day. If I ever find time Iâ€™ll actually get stuck into the many free AI university level courses available online.</p>\n\n<p>[nggallery id=9]</p>\n\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"480\" src=\"https://www.youtube.com/embed/eH2f9HGARKY?feature=oembed\" width=\"640\"></iframe>\n\n<p>I spent a lot of my time before the schedule kicked in to observe people using the installations that are currently up on the walls. There is a huge interactive reef on Zone 1 and 2. Zone 1 and 2 is the big one. Itâ€™s combined into one zone really, and has a different set up to zones 3 and 4 (which are the zones we are building for. See the specs further down). This drew some attention, predominantly for itâ€™s sheer scale in my opinion.</p>\n\n<p>[nggallery id=19]</p>\n\n<p>The one that really caught peoples attention was the physics playground. This is a great interactive installation that allows you to change the gravity to match the different planets in our solar system and play with a mass of wooden blocks. There are also plenty of other interactive elements, but itâ€™s the blocks that people are really drawn to. This was also set up on zone 3, which is the one we are most likely deploying on.</p>\n\n<p><div class=\"wp-caption aligncenter\" id=\"attachment_2001\" style=\"width: 891px\"><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437684/Zone3_shserx.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437684/Zone3_shserx.jpg\" alt=\"The Cube - Zone 3. Physics Playground.\" title=\"\" /></a>The Cube â€“ Zone 3. Physics Playground.</p>\n\n<p></div>Check out the video of a group of Japanese school kids. They spent ages here.</p>\n\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/X5antXrqh-I?feature=oembed\" width=\"640\"></iframe>\n\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"360\" src=\"https://www.youtube.com/embed/VGlxgKjg1ho?feature=oembed\" width=\"640\"></iframe>\n\n<p>For those technically interested, here is a breakdown of the space.</p>\n\n<p>The wall consists of 12 55-inch Multitaction MT553s. They are an optical (infra-red) based unit, able to accept an unlimited number of touch events and will be using the TUIO touch protocol. Each panel is installed in the portrait orientation and has a resolution of 1080 x 1920. Panels are paired, each pair being controlled by a single â€œnodeâ€ computer running 2 Intel Xeon E5-2643 3.33Ghz CPUs, 32GB quad-channel, 1600Mhz of RAM, Creative X-FI Extreme PCIe sound adapter and an NVIDIA GTX690 graphics card.</p>\n\n<p>Above the Touch Panels is a large projection zone. This uses 3 Panasonic DZ6700 projectors connected to another â€œnodeâ€ PC which uses edge blending to composite the output to a single image with a resolution of 5360 x 1114.</p>\n\n<p>As a predominantly mobile developer, you can perhaps imagine how my head spins a little at the thought. When I first started out I was trying to fit a game into 30MB to run on a 320Ã—480 screen with 256MB RAM. In some ways, this removes a lot of the challenges I usually deal with. Optimisation, although an integral part of game development no matter what (and completely drummed into me from mobile dev), is somewhat moot on this set up. Theoretically there isnâ€™t much this thing wonâ€™t be able to handle. And considering our scope restrictions, we shouldnâ€™t come close to maxing it out. But, having said that, there is a new challenge. Although the wall appears (or in our case, will appear) to be one large interactive scene, it will be running simultaneously on 7 different machines (12 touch screens gives 6 machines controlling 2 each, and one more to control the three projectors overhead). This is certainly something Iâ€™ve never come across before.</p>\n\n<p>So, my first task is clear. I need to get a test rig happening up there. We have a test environment available to us that uses 4 touch screens (set up the same way as the walls) and a projected (though smaller) panel above. So this is a 3 system set up, but once I have it working on that, extending to the 7 system set up wonâ€™t be any more difficult. I plan to treat this like any multiplayer game and use Unityâ€™s built in networking to set up an environment where each playerâ€™s camera is fixed in the world, defining their view. When assembled in the correct configuration you get a seamless view of the world as if through one giant camera. I actually find this an interesting starting point for an actual multiplayer game, I may toy with the idea a little more after I this project, but imagine playing a game where you canâ€™t move your camera, and neither can anyone else, but everyone is looking at a different part of the world. Or even a board game that requires the players to put their iPads together. Or maybe they only do that at certain times to solve things together. Could be some interesting ideas in there.</p>\n\n<p>When I get the rig working in Unity Iâ€™ll do up a video showing how Iâ€™ve set it up, and then another once I have it up on the test set up, so keep an eye out for that (there may even be some Kinect detection happening in that one).</p>\n\n<p>As you can tell, very excited about this project. I hope to keep you all up to date as I go along. Iâ€™ll either link to the blog posts of other team members from the main <a href=\"http://adamsingle.com/robot-university/\" title=\"Robot University\">Robot University page</a>Â or write updates that include some of the work they are doing. And be sure to check out The Cube if you get the opportunity. Get a feel for whatâ€™s there now, because we plan on outdoing them ï¿½ï¿½</p>\n\n<p>Chat later,</p>\n\n<p>Adsy</p>","image":"http://res.cloudinary.com/adamsingle/image/upload/v1443437683/InductionBanner_almezr.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-08-12T15:00:57.000Z","created_by":1,"updated_at":"2015-09-28T20:54:47.000Z","updated_by":1,"published_at":"2013-08-12T15:00:57.000Z","published_by":1},{"id":30,"uuid":"8021f7f8-74bb-4a08-9459-4ef03ddffd86","title":"Robot University - Camera Set Up","slug":"robot-university-camera-set-2","markdown":"\n[info][Back to Robot University Main Page](http://adamsingle.com/robot-university/ \"Robot University\")[/info]\n\nSo last update on Robot University I promised a post describing the camera rig set up once I had it working. That was a few weeks ago. I only just got it working. Almost. It has turned out to be a greater challenge than I anticipated.\n\nHereâ€™s a recap of the situation. The wall at The Cube that will be displaying Robot University is made up of 12 touch screen panels, set up as linked pairs controlled by a single PC called a node. The panels are in portrait orientation, side by side along the bottom of the wall. The top of the wall is three projectors being handled by another node. This node handles the image compositing, so thankfully I donâ€™t need to worry about combining and overlapping three projectors, I can simply treat this is a good old fashioned single machine with some sort of crazy monitor running a 5360 x 1114 resolution.\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_2001\" style=\"width: 574px\">[![The Cube - Zone 3. Physics Playground.](http://res.cloudinary.com/adamsingle/image/upload/v1443437684/Zone3_shserx.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437684/Zone3_shserx.jpg)The Cube â€“ Zone 3. Physics Playground.\n\n</div>Now my initial thought was that each node would have a camera in the scene that it would set up based on itâ€™s node number (or I build all the cameras in the scene and each node deletes the ones it doesnâ€™t need based on itâ€™s node number) so I immediately started experimenting with that. Since this is a single scene that basically needs to look like youâ€™re looking straight into it no matter where on the wall you are standing, my first thought was cameras side by side and just figure out how to stitch them together. But that doesnâ€™t work because of the shape of a perspective frustum and issues with camera angle. Let me show you.\n\n[![BadStereo](http://res.cloudinary.com/adamsingle/image/upload/v1443437683/BadStereo_plp3uh.png)](http://res.cloudinary.com/adamsingle/image/upload/v1443437683/BadStereo_plp3uh.png)\n\nNow as you can see, this image is actually referring to how our eyes process an image, but it effectively displays how two perspective cameras side by side arenâ€™t going to see an object form the same angle. In the case of our eyes, the brain compensates, but programatically these obviously arenâ€™t going to stitch together. Especially not when there are 6 of them in parallel.\n\nSo my next thought was a fan of cameras. This would line up edges of the frustums so there are no gaps between them, essentially creating one really wide frustum. This works, as you can see in the image, but youâ€™ll notice it creates a view just like a panoramic photo on your phone (since itâ€™s done in exactly the same way). This is because you are looking at the scene from a singe point of view, so as you point the camera to the far left and right you are much further from it then you are form the middle, so you get a bowed look to it. You could compensate for this physically and wrap the scene in a crescent shape around the camera position. But then the whole team has to keep factoring that in and thinking in that space. It would be better to find a solution that allowed us to build the scene as you would expect it to exist, in a straight line.\n\nSo it took me a lot of playing around, but eventually I managed to sit down and put the problem into words. What, exactly, was I trying to achieve here? I want to look at this scene through a single camera, but only display parts of that view to each node. So instead of multiple cameras being stitched together to show the scene, one camera being cut up into the node spaces. Iâ€™m sure such a thing would be possible, but Iâ€™d never heard of it being done, nor could I think of a game play reason to do it, so I wasnâ€™t expecting to find a solution out there for me, I was expecting to have to spend a lot of time down the matrix math rabbit hole. I was wrong. Itâ€™s apparently a common technique (though I still canâ€™t think of a use for it outside of this rather unique project). Itâ€™s called a Scissor. Unity already has built in functionality for controlling the View rect. That is you can easily render the cameras entire frustum into just a sub section of the screen space. This I can think of a use for. Mini maps are the first that come to mind, rear view mirrors are another I thought of. I understand they are normally done with shaders, but you could potentially treat it like a reverse camera in a car and render it onto just a section of the screen space. This wouldnâ€™t work if you wanted it to look pretty and have it on the surface of a model of the mirror in the car. But in the early racing games that had this feature it was just a little rectangle at the top of screen. Anyway, this is easy to do. But I didnâ€™t want that. I needed to only render a subsection of the cameras view to all of itâ€™s screen space. Essentially the reverse. Traditionally a Scissor cut on the camera is used to only render that subsection of the view into that subsection of the screen. So it was similar to the View rect in unity, except it didnâ€™t render the whole camera view, only what fits into the new view rect. I was lucky enough to find someone sharing a little script that did the scissor for me. I just had to modify it slightly so that it would render the cut to the whole screen. A single line of code. I haveâ€™t had time to completely deconstruct this code and figure out how itâ€™s doing it, but there is a warning that one of the values isnâ€™t being used. So I will eventually take a look at that. But it works, so Iâ€™ll share it here.\n\n*using UnityEngine;*\n\n***using System.Collections;*\n\n*Â *\n\n***public class Scissor : MonoBehaviour*\n\n*{*\n\n*public Rect scissorRect = new Rect (0,0,1,1);*\n\n*public Rect viewRect = new Rect(0,0,1,1);*\n\n*Â *\n\n*public static void SetScissorRect( Camera cam, Rect r, Rect view )*\n\n*{*\n\n*if ( r.x < 0 )*\n\n*{*\n\n*r.width += r.x;*\n\n*r.x = 0;*\n\n*}*\n\n*Â *\n\n*if ( r.y < 0 )*\n\n*{*\n\n*r.height += r.y;*\n\n*r.y = 0;*\n\n*}*\n\n*Â *\n\n*r.width = Mathf.Min( 1 â€“ r.x, r.width );*\n\n*r.height = Mathf.Min( 1 â€“ r.y, r.height );*\n\n*Â *\n\n*cam.rect = new Rect (0,0,1,1);*\n\n*cam.ResetProjectionMatrix ();*\n\n*Matrix4x4 m = cam.projectionMatrix;*\n\n*cam.rect = r;*\n\n*Matrix4x4 m1 = Matrix4x4.TRS( new Vector3( r.x, r.y, 0 ), Quaternion.identity, new Vector3( r.width, r.height, 1 ) );*\n\n***Matrix4x4 m2 = Matrix4x4.TRS (new Vector3 ( ( 1/r.width â€“ 1), ( 1/r.height â€“ 1 ), 0), Quaternion.identity, new Vector3 (1/r.width, 1/r.height, 1));*\n\n*Matrix4x4 m3 = Matrix4x4.TRS( new Vector3( -r.x * 2 / r.width, -r.y * 2 / r.height, 0 ), Quaternion.identity, Vector3.one );*\n\n*cam.projectionMatrix = m3 * m2 * m;*\n\n*cam.rect = view;*\n\n*}*\n\n*Â *\n\n*void OnPreRender ()*\n\n*{*\n\n*SetScissorRect( camera, scissorRect, viewRect );*\n\n*}*\n\n*}*\n\nThe only thing I added here is the final line in the SetScissorRect() function. This renders the scissor cut to a different view rect (in my case Iâ€™m always using 0,0,1,1 which is the full screen.\n\n##### \n\nSo, now I could split my camera view the way I needed it. I just needed to make it a little data driven to calculate the size of the scissor cuts. Since the test wall we use has only 4 touch screens and a smaller projector, I wanted code that would work on both. So I set it up to read a little text config file that told the program which node it was and how many nodes there are total. If the node number was the last one (so if it was the same as the number of nodes) it would make the assumption it was the projector node. Otherwise it would use the numbers to calculate how wide itâ€™s cut was and where along the bottom it was. This worked a treat. After some trial and error I eventually realised (should not have taken me so long) that the aspects of the cameras had to all be the same. So whatever the aspects were on the bottom, thatâ€™s the aspect the top needed to be to line up.\n\nNow we are at the last little problem to solve. Each touch screen has a frame on it. That actual rendering screen doesnâ€™t go all the way to the edge. But the view into the world assumes otherwise. This isnâ€™t a big deal on itâ€™s own, the human eye can ignore that without even being aware of it. But the projector space has none of that. So anything that needs to line up where two touch panels meet and the top (like the very large robot in the centre), wonâ€™t line up properly because the pixels are next to each other physically on the projector space, but separated by the frame of the screens on the bottom. So I need to calculate the world space taken up by these frames and trim those off the scissor rects. This will mean some of the world will be hidden behind the frames of the screens, but that fits the world we are creating since these are supposed to be as windows into the scene. Plus itâ€™s necessary to things lined up above and below.\n\nThe final step for the camera set up to be called working was getting the networking set up so something could pass from one screen to another. Since technically they are all showing different, but identical, scenes nothing could move across the environment. The main one for that will again be the large robot in the middle. Any animations he has need to be in sync across all nodes or it just wonâ€™t work. Luckily Unityâ€™s networking is pretty easy to set up for something as simple as this. I wrote a little script that has a list of objects for each node. Anything in the scene that needs to sync across the network will be assigned to a node (to spread the load) and that node will instantiate them at load up. All the other nodes then get one created on their end automatically by the network library built into unity. Another little script checks to see if the object is owned by this node or not and deactivates any logic scripts if it isnâ€™t so the only instance thatâ€™s doing anything is the one on the node that owns it. That worked very nicely and much quicker than I had anticipated (networking is not my strongest coder discipline), which is good since the camera set up took longer than I had hoped.\n\nAll in all, a lot of the core functionality for the set up is in. I have touch working to an extent, though the TUIO protocol isnâ€™t super clean or easy to understand when youâ€™re used to unityâ€™s built in Input handling touch on mobile. Iâ€™ll do another post on that shortly. The only final note Iâ€™ll make is about the data loading. As I said, I was using a text file to load in essentially 2 numbers that were used to define everything. This wasnâ€™t the most convenient way to do it since each file had to have the same name (since the code loaded the file based on a path and file name) so putting the exe on each machine also meant manually dropping a text file on each and making sure you got the right one. So a bit of digging showed you could use command line arguments. .net gives very simple access to these. So we could run the exe from the command line with some extra arguments for the numbers. We were already running it from command line to use the -popupwindow argument that creates a window without a frame (this was needed to get fullscreen across two touch screens, since full screen defaulted to one of the two as windows treated it like an extended desktop over two monitors). So by creating shortcuts to a single network location, and modifying the path of each shortcut to include the extra arguments, we could set up each machine to run perfectly each time. All I have to do is replace the files on the network with a new version and when I run the shortcut on each machine itâ€™s running the new code with itâ€™s own arguments already set up. Made my testing process much quicker. If anyone is interested in seeing how to do set up command line arguments Iâ€™m happy to do a very quick little post on it, itâ€™s not difficult.\n\nThatâ€™s all for now. Next post Iâ€™ll talk a bit about touch input. I want to wait till I have some placeholder UI in so I can talk about interacting with it, since itâ€™s not as straight forward as I would have liked.\n\nHope you found that interesting,  \n Chat later,  \n Adsy.\n\n\n","html":"<p>[info]<a href=\"http://adamsingle.com/robot-university/\" title=\"Robot University\">Back to Robot University Main Page</a>[/info]</p>\n\n<p>So last update on Robot University I promised a post describing the camera rig set up once I had it working. That was a few weeks ago. I only just got it working. Almost. It has turned out to be a greater challenge than I anticipated.</p>\n\n<p>Hereâ€™s a recap of the situation. The wall at The Cube that will be displaying Robot University is made up of 12 touch screen panels, set up as linked pairs controlled by a single PC called a node. The panels are in portrait orientation, side by side along the bottom of the wall. The top of the wall is three projectors being handled by another node. This node handles the image compositing, so thankfully I donâ€™t need to worry about combining and overlapping three projectors, I can simply treat this is a good old fashioned single machine with some sort of crazy monitor running a 5360 x 1114 resolution.</p>\n\n<p><div class=\"wp-caption aligncenter\" id=\"attachment_2001\" style=\"width: 574px\"><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437684/Zone3_shserx.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437684/Zone3_shserx.jpg\" alt=\"The Cube - Zone 3. Physics Playground.\" title=\"\" /></a>The Cube â€“ Zone 3. Physics Playground.</p>\n\n<p></div>Now my initial thought was that each node would have a camera in the scene that it would set up based on itâ€™s node number (or I build all the cameras in the scene and each node deletes the ones it doesnâ€™t need based on itâ€™s node number) so I immediately started experimenting with that. Since this is a single scene that basically needs to look like youâ€™re looking straight into it no matter where on the wall you are standing, my first thought was cameras side by side and just figure out how to stitch them together. But that doesnâ€™t work because of the shape of a perspective frustum and issues with camera angle. Let me show you.</p>\n\n<p><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437683/BadStereo_plp3uh.png\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437683/BadStereo_plp3uh.png\" alt=\"BadStereo\" title=\"\" /></a></p>\n\n<p>Now as you can see, this image is actually referring to how our eyes process an image, but it effectively displays how two perspective cameras side by side arenâ€™t going to see an object form the same angle. In the case of our eyes, the brain compensates, but programatically these obviously arenâ€™t going to stitch together. Especially not when there are 6 of them in parallel.</p>\n\n<p>So my next thought was a fan of cameras. This would line up edges of the frustums so there are no gaps between them, essentially creating one really wide frustum. This works, as you can see in the image, but youâ€™ll notice it creates a view just like a panoramic photo on your phone (since itâ€™s done in exactly the same way). This is because you are looking at the scene from a singe point of view, so as you point the camera to the far left and right you are much further from it then you are form the middle, so you get a bowed look to it. You could compensate for this physically and wrap the scene in a crescent shape around the camera position. But then the whole team has to keep factoring that in and thinking in that space. It would be better to find a solution that allowed us to build the scene as you would expect it to exist, in a straight line.</p>\n\n<p>So it took me a lot of playing around, but eventually I managed to sit down and put the problem into words. What, exactly, was I trying to achieve here? I want to look at this scene through a single camera, but only display parts of that view to each node. So instead of multiple cameras being stitched together to show the scene, one camera being cut up into the node spaces. Iâ€™m sure such a thing would be possible, but Iâ€™d never heard of it being done, nor could I think of a game play reason to do it, so I wasnâ€™t expecting to find a solution out there for me, I was expecting to have to spend a lot of time down the matrix math rabbit hole. I was wrong. Itâ€™s apparently a common technique (though I still canâ€™t think of a use for it outside of this rather unique project). Itâ€™s called a Scissor. Unity already has built in functionality for controlling the View rect. That is you can easily render the cameras entire frustum into just a sub section of the screen space. This I can think of a use for. Mini maps are the first that come to mind, rear view mirrors are another I thought of. I understand they are normally done with shaders, but you could potentially treat it like a reverse camera in a car and render it onto just a section of the screen space. This wouldnâ€™t work if you wanted it to look pretty and have it on the surface of a model of the mirror in the car. But in the early racing games that had this feature it was just a little rectangle at the top of screen. Anyway, this is easy to do. But I didnâ€™t want that. I needed to only render a subsection of the cameras view to all of itâ€™s screen space. Essentially the reverse. Traditionally a Scissor cut on the camera is used to only render that subsection of the view into that subsection of the screen. So it was similar to the View rect in unity, except it didnâ€™t render the whole camera view, only what fits into the new view rect. I was lucky enough to find someone sharing a little script that did the scissor for me. I just had to modify it slightly so that it would render the cut to the whole screen. A single line of code. I haveâ€™t had time to completely deconstruct this code and figure out how itâ€™s doing it, but there is a warning that one of the values isnâ€™t being used. So I will eventually take a look at that. But it works, so Iâ€™ll share it here.</p>\n\n<p><em>using UnityEngine;</em></p>\n\n<p><em>*</em>using System.Collections;*</p>\n\n<p>*Â *</p>\n\n<p><em>*</em>public class Scissor : MonoBehaviour*</p>\n\n<p><em>{</em></p>\n\n<p><em>public Rect scissorRect = new Rect (0,0,1,1);</em></p>\n\n<p><em>public Rect viewRect = new Rect(0,0,1,1);</em></p>\n\n<p>*Â *</p>\n\n<p><em>public static void SetScissorRect( Camera cam, Rect r, Rect view )</em></p>\n\n<p><em>{</em></p>\n\n<p><em>if ( r.x &lt; 0 )</em></p>\n\n<p><em>{</em></p>\n\n<p><em>r.width += r.x;</em></p>\n\n<p><em>r.x = 0;</em></p>\n\n<p><em>}</em></p>\n\n<p>*Â *</p>\n\n<p><em>if ( r.y &lt; 0 )</em></p>\n\n<p><em>{</em></p>\n\n<p><em>r.height += r.y;</em></p>\n\n<p><em>r.y = 0;</em></p>\n\n<p><em>}</em></p>\n\n<p>*Â *</p>\n\n<p><em>r.width = Mathf.Min( 1 â€“ r.x, r.width );</em></p>\n\n<p><em>r.height = Mathf.Min( 1 â€“ r.y, r.height );</em></p>\n\n<p>*Â *</p>\n\n<p><em>cam.rect = new Rect (0,0,1,1);</em></p>\n\n<p><em>cam.ResetProjectionMatrix ();</em></p>\n\n<p><em>Matrix4x4 m = cam.projectionMatrix;</em></p>\n\n<p><em>cam.rect = r;</em></p>\n\n<p><em>Matrix4x4 m1 = Matrix4x4.TRS( new Vector3( r.x, r.y, 0 ), Quaternion.identity, new Vector3( r.width, r.height, 1 ) );</em></p>\n\n<p><em>*</em>Matrix4x4 m2 = Matrix4x4.TRS (new Vector3 ( ( 1/r.width â€“ 1), ( 1/r.height â€“ 1 ), 0), Quaternion.identity, new Vector3 (1/r.width, 1/r.height, 1));*</p>\n\n<p><em>Matrix4x4 m3 = Matrix4x4.TRS( new Vector3( -r.x * 2 / r.width, -r.y * 2 / r.height, 0 ), Quaternion.identity, Vector3.one );</em></p>\n\n<p><em>cam.projectionMatrix = m3 * m2 * m;</em></p>\n\n<p><em>cam.rect = view;</em></p>\n\n<p><em>}</em></p>\n\n<p>*Â *</p>\n\n<p><em>void OnPreRender ()</em></p>\n\n<p><em>{</em></p>\n\n<p><em>SetScissorRect( camera, scissorRect, viewRect );</em></p>\n\n<p><em>}</em></p>\n\n<p><em>}</em></p>\n\n<p>The only thing I added here is the final line in the SetScissorRect() function. This renders the scissor cut to a different view rect (in my case Iâ€™m always using 0,0,1,1 which is the full screen.</p>\n\n<h5 id=\"\"> </h5>\n\n<p>So, now I could split my camera view the way I needed it. I just needed to make it a little data driven to calculate the size of the scissor cuts. Since the test wall we use has only 4 touch screens and a smaller projector, I wanted code that would work on both. So I set it up to read a little text config file that told the program which node it was and how many nodes there are total. If the node number was the last one (so if it was the same as the number of nodes) it would make the assumption it was the projector node. Otherwise it would use the numbers to calculate how wide itâ€™s cut was and where along the bottom it was. This worked a treat. After some trial and error I eventually realised (should not have taken me so long) that the aspects of the cameras had to all be the same. So whatever the aspects were on the bottom, thatâ€™s the aspect the top needed to be to line up.</p>\n\n<p>Now we are at the last little problem to solve. Each touch screen has a frame on it. That actual rendering screen doesnâ€™t go all the way to the edge. But the view into the world assumes otherwise. This isnâ€™t a big deal on itâ€™s own, the human eye can ignore that without even being aware of it. But the projector space has none of that. So anything that needs to line up where two touch panels meet and the top (like the very large robot in the centre), wonâ€™t line up properly because the pixels are next to each other physically on the projector space, but separated by the frame of the screens on the bottom. So I need to calculate the world space taken up by these frames and trim those off the scissor rects. This will mean some of the world will be hidden behind the frames of the screens, but that fits the world we are creating since these are supposed to be as windows into the scene. Plus itâ€™s necessary to things lined up above and below.</p>\n\n<p>The final step for the camera set up to be called working was getting the networking set up so something could pass from one screen to another. Since technically they are all showing different, but identical, scenes nothing could move across the environment. The main one for that will again be the large robot in the middle. Any animations he has need to be in sync across all nodes or it just wonâ€™t work. Luckily Unityâ€™s networking is pretty easy to set up for something as simple as this. I wrote a little script that has a list of objects for each node. Anything in the scene that needs to sync across the network will be assigned to a node (to spread the load) and that node will instantiate them at load up. All the other nodes then get one created on their end automatically by the network library built into unity. Another little script checks to see if the object is owned by this node or not and deactivates any logic scripts if it isnâ€™t so the only instance thatâ€™s doing anything is the one on the node that owns it. That worked very nicely and much quicker than I had anticipated (networking is not my strongest coder discipline), which is good since the camera set up took longer than I had hoped.</p>\n\n<p>All in all, a lot of the core functionality for the set up is in. I have touch working to an extent, though the TUIO protocol isnâ€™t super clean or easy to understand when youâ€™re used to unityâ€™s built in Input handling touch on mobile. Iâ€™ll do another post on that shortly. The only final note Iâ€™ll make is about the data loading. As I said, I was using a text file to load in essentially 2 numbers that were used to define everything. This wasnâ€™t the most convenient way to do it since each file had to have the same name (since the code loaded the file based on a path and file name) so putting the exe on each machine also meant manually dropping a text file on each and making sure you got the right one. So a bit of digging showed you could use command line arguments. .net gives very simple access to these. So we could run the exe from the command line with some extra arguments for the numbers. We were already running it from command line to use the -popupwindow argument that creates a window without a frame (this was needed to get fullscreen across two touch screens, since full screen defaulted to one of the two as windows treated it like an extended desktop over two monitors). So by creating shortcuts to a single network location, and modifying the path of each shortcut to include the extra arguments, we could set up each machine to run perfectly each time. All I have to do is replace the files on the network with a new version and when I run the shortcut on each machine itâ€™s running the new code with itâ€™s own arguments already set up. Made my testing process much quicker. If anyone is interested in seeing how to do set up command line arguments Iâ€™m happy to do a very quick little post on it, itâ€™s not difficult.</p>\n\n<p>Thatâ€™s all for now. Next post Iâ€™ll talk a bit about touch input. I want to wait till I have some placeholder UI in so I can talk about interacting with it, since itâ€™s not as straight forward as I would have liked.</p>\n\n<p>Hope you found that interesting, <br />\n Chat later, <br />\n Adsy.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-09-09T16:00:31.000Z","created_by":1,"updated_at":"2015-09-28T20:54:44.000Z","updated_by":1,"published_at":"2013-09-09T16:00:31.000Z","published_by":1},{"id":31,"uuid":"c1da2cf0-fd62-4bac-9c78-e9bc475277e9","title":"Robot University - Camera set up [Final]","slug":"robot-university-camera-setup-final","markdown":"\n[info][Back to Robot University Main Page](http://adamsingle.com/robot-university/ \"Robot University\")[/info]\n\nGood morning, day, evening or night. This is quite overdue, but as with any indie dev, Iâ€™ve been pretty busy. More than a few projects on the table at the moment, and Robot University has been throwing some challenges at us. I know, we knew that when we started. But itâ€™s one of those projects where you can never identify them before they smack you in the face.\n\nThe plan was to get the camera system sorted out in the first week or two, then nail down touch input, tie it into 2D Toolkit UI and I can sit back and wait for content to come my way. Sure, thereâ€™s more to it than that. I have a dialog tree to implement. And I havenâ€™t used 2D Toolkit before, so all the UI, and itâ€™s various transitions and functions, will be new to me and take time to figure out and bug test, but essentially the core should be a few weeks work. Well, weâ€™re nearly half way, and I think I just got the camera system sorted out. Touch input is still toying with me. So Iâ€™m going to have plenty of late nights in the months to come.\n\nLetâ€™s talk cameras. Â Last update I said I had it in the bag. I didnâ€™t quite. There was one thing I had failed to take into account, and I can thank my dear friend Hans Van Vliet for helping me find it. Hopefully everyone remembers the setup for the Cube walls. If not, duck back to the last post for a recap. The camera solution involved using one camera looking at everything, scissor off the part you wanted to show depending on which node in the wall you were, then fill that to screen. The problem was the projector space on top had a different resolution, or more importantly, aspect ratio, than the panels down below. So putting either into the others aspect wasnâ€™t going to solve anything. What we had last time was the projector space being squashed down to fit. Everything lined up horizontally with the touch panels, but was all out vertically in the projector space. The solution is actually rather simple and obvious, in hindsight. Some of you reading may already be scoffing at my missing it. If we are looking at this scene in Unity using one camera, we need to look at this wall, these collective screens, as one â€œmonitorâ€. And a monitor only has one aspect ratio. You canâ€™t have a different one across the top half. So I needed to calculate the aspect ratio and resolution of the â€œwall screenâ€. This basically means converting one set of pixel space into the other.\n\nHere goes:\n\nThe projector space is 5470 x 1170. Each touch panel is 1080 x 1920. There are 12 panels side by side. So the â€œtouch panel spaceâ€ is (1080 * 12) x 1920 or 12960 x 1920. Try and picture this using this image (again):\n\nÂ \n\n<div class=\"wp-caption aligncenter\" id=\"attachment_2001\" style=\"width: 891px\">[![The Cube - Zone 3. Physics Playground.](http://res.cloudinary.com/adamsingle/image/upload/v1443437684/Zone3_shserx.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437684/Zone3_shserx.jpg)The Cube â€“ Zone 3. Physics Playground.\n\n</div>Â \n\nThe top â€œhalfâ€ (itâ€™s clearly not half) is the projector. Thatâ€™s 5470 pixels wide. The panels are basically the same physical width, but have almost 13000 pixels in that space.\n\nSo, we want to know how many â€œprojector space pixelsâ€ fit into a â€œtouch panel pixelâ€.\n\nOr\n\n5470 / 12960 = 0.4221.\n\nSo we can now convert the pixel height of the touch panels to the same â€œpixel spaceâ€ by multiplying 1920 by 0.4221. Which is 810.37. Obviously we need to drop the .37, canâ€™t have a fraction of a pixel, but close enough is good enough.\n\nSo what weâ€™ve done here is say, letâ€™s pretend the touch panels have the same pixels across as the projector space, like a normal monitor would. If that were the case, the number of these sized pixels in the vertical height of the panels would be 810. Add that to the vertical height of the projector space and we get the height of our â€œwall screenâ€, which is 1980.\n\nSo the wall, as a single monitor, has the pixel dimensions 5470 x 1980. We can now create that custom resolution in Unity and work within it. I can now set the cameras aspect ratio in script to be 5470 / 1980 and I know that what the artists see in editor is what will be on the wall.\n\nSo thatâ€™s enough for this week probably. Iâ€™ll briefly mention that the solution for filling the two panels that I mentioned last week also didnâ€™t work. Well, it did, but setting all the touch panels to a custom resolution that none of the other projects on the wall used had what should have been obvious repercussions. The solution actually ended up being to set, in editor, the application to be a sizable window and to use a script to launch the the exe and set the window size to be the width and height we needed. For those who canâ€™t remember, each node controls two touch panels, so their â€œscreenâ€ is actually (1080 * 2) x 1920 or 2160 wide. But the set up in windows is two screens with a stretched desktop. As most of you probably know, maximising a window on one of two monitors will not make it fill both monitors. Hence our solution to set up a custom resolution of 2160 x 1920. The sizable window solution worked well.\n\nNext post Iâ€™ll talk about touch input (hopefully working fully by then) and after that Iâ€™ll talk about the networking, which worked almost without a hitch. Much to my surprise as Iâ€™d estimated it to be the most likely to take ages to figure out and get working. Typical. Donâ€™t know why us programmers bother even trying to guess whatâ€™ll happen during a project.\n\nThanks for reading,\n\nChat later,\n\nAdsy.\n\n\n","html":"<p>[info]<a href=\"http://adamsingle.com/robot-university/\" title=\"Robot University\">Back to Robot University Main Page</a>[/info]</p>\n\n<p>Good morning, day, evening or night. This is quite overdue, but as with any indie dev, Iâ€™ve been pretty busy. More than a few projects on the table at the moment, and Robot University has been throwing some challenges at us. I know, we knew that when we started. But itâ€™s one of those projects where you can never identify them before they smack you in the face.</p>\n\n<p>The plan was to get the camera system sorted out in the first week or two, then nail down touch input, tie it into 2D Toolkit UI and I can sit back and wait for content to come my way. Sure, thereâ€™s more to it than that. I have a dialog tree to implement. And I havenâ€™t used 2D Toolkit before, so all the UI, and itâ€™s various transitions and functions, will be new to me and take time to figure out and bug test, but essentially the core should be a few weeks work. Well, weâ€™re nearly half way, and I think I just got the camera system sorted out. Touch input is still toying with me. So Iâ€™m going to have plenty of late nights in the months to come.</p>\n\n<p>Letâ€™s talk cameras. Â Last update I said I had it in the bag. I didnâ€™t quite. There was one thing I had failed to take into account, and I can thank my dear friend Hans Van Vliet for helping me find it. Hopefully everyone remembers the setup for the Cube walls. If not, duck back to the last post for a recap. The camera solution involved using one camera looking at everything, scissor off the part you wanted to show depending on which node in the wall you were, then fill that to screen. The problem was the projector space on top had a different resolution, or more importantly, aspect ratio, than the panels down below. So putting either into the others aspect wasnâ€™t going to solve anything. What we had last time was the projector space being squashed down to fit. Everything lined up horizontally with the touch panels, but was all out vertically in the projector space. The solution is actually rather simple and obvious, in hindsight. Some of you reading may already be scoffing at my missing it. If we are looking at this scene in Unity using one camera, we need to look at this wall, these collective screens, as one â€œmonitorâ€. And a monitor only has one aspect ratio. You canâ€™t have a different one across the top half. So I needed to calculate the aspect ratio and resolution of the â€œwall screenâ€. This basically means converting one set of pixel space into the other.</p>\n\n<p>Here goes:</p>\n\n<p>The projector space is 5470 x 1170. Each touch panel is 1080 x 1920. There are 12 panels side by side. So the â€œtouch panel spaceâ€ is (1080 * 12) x 1920 or 12960 x 1920. Try and picture this using this image (again):</p>\n\n<p><div class=\"wp-caption aligncenter\" id=\"attachment_2001\" style=\"width: 891px\"><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437684/Zone3_shserx.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437684/Zone3_shserx.jpg\" alt=\"The Cube - Zone 3. Physics Playground.\" title=\"\" /></a>The Cube â€“ Zone 3. Physics Playground.</p>\n\n<p></div>Â </p>\n\n<p>The top â€œhalfâ€ (itâ€™s clearly not half) is the projector. Thatâ€™s 5470 pixels wide. The panels are basically the same physical width, but have almost 13000 pixels in that space.</p>\n\n<p>So, we want to know how many â€œprojector space pixelsâ€ fit into a â€œtouch panel pixelâ€.</p>\n\n<p>Or</p>\n\n<p>5470 / 12960 = 0.4221.</p>\n\n<p>So we can now convert the pixel height of the touch panels to the same â€œpixel spaceâ€ by multiplying 1920 by 0.4221. Which is 810.37. Obviously we need to drop the .37, canâ€™t have a fraction of a pixel, but close enough is good enough.</p>\n\n<p>So what weâ€™ve done here is say, letâ€™s pretend the touch panels have the same pixels across as the projector space, like a normal monitor would. If that were the case, the number of these sized pixels in the vertical height of the panels would be 810. Add that to the vertical height of the projector space and we get the height of our â€œwall screenâ€, which is 1980.</p>\n\n<p>So the wall, as a single monitor, has the pixel dimensions 5470 x 1980. We can now create that custom resolution in Unity and work within it. I can now set the cameras aspect ratio in script to be 5470 / 1980 and I know that what the artists see in editor is what will be on the wall.</p>\n\n<p>So thatâ€™s enough for this week probably. Iâ€™ll briefly mention that the solution for filling the two panels that I mentioned last week also didnâ€™t work. Well, it did, but setting all the touch panels to a custom resolution that none of the other projects on the wall used had what should have been obvious repercussions. The solution actually ended up being to set, in editor, the application to be a sizable window and to use a script to launch the the exe and set the window size to be the width and height we needed. For those who canâ€™t remember, each node controls two touch panels, so their â€œscreenâ€ is actually (1080 * 2) x 1920 or 2160 wide. But the set up in windows is two screens with a stretched desktop. As most of you probably know, maximising a window on one of two monitors will not make it fill both monitors. Hence our solution to set up a custom resolution of 2160 x 1920. The sizable window solution worked well.</p>\n\n<p>Next post Iâ€™ll talk about touch input (hopefully working fully by then) and after that Iâ€™ll talk about the networking, which worked almost without a hitch. Much to my surprise as Iâ€™d estimated it to be the most likely to take ages to figure out and get working. Typical. Donâ€™t know why us programmers bother even trying to guess whatâ€™ll happen during a project.</p>\n\n<p>Thanks for reading,</p>\n\n<p>Chat later,</p>\n\n<p>Adsy.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-10-14T12:00:25.000Z","created_by":1,"updated_at":"2015-09-28T20:54:44.000Z","updated_by":1,"published_at":"2013-10-14T12:00:25.000Z","published_by":1},{"id":32,"uuid":"4cb3025d-ca00-4a1a-a433-d0bd2a51bc70","title":"Robot University - Input","slug":"robot-university-input","markdown":"\nRobot University Update 4 â€“ Input\n\nGood morning, day, evening or night friends. My last two posts have been discussing the rather unique issues for setting up a camera in Unity for a project spanning an entire wall of the Cube. The last post stated that the camera was solved. This isnâ€™t quite the case. There is still another issue to solve, but letâ€™s take a break from cameras. This week we got input working, so weâ€™ll talk about that.\n\nThe touch panels at The Cube use the TUIO protocol. This is â€œan open framework that defines a common protocol and API for tangible touch surfaces.â€ ([http://www.tuio.org/](http://www.tuio.org/)). What this means for us is that Unityâ€™s Input API isnâ€™t going to help us here, it doesnâ€™t, by default, receive TUIO touches.\n\nIf you are ever doing a project in Unity that uses TUIO, simply go here ([https://code.google.com/p/unity3d-tuio/](https://code.google.com/p/unity3d-tuio/)) itâ€™s brilliant and super easy. Import the package, drag the TuioInput prefab into the scene and youâ€™re set up already basically. The only thing to double check is the TuioConfiguration.cs file. This is an entire class holding a public int (donâ€™t ask me why). This is the port that the touch panel is broadcasting on. TUIO uses a pretty simple method of sending touch information across the network. So make sure youâ€™re listening on the correct port, it defaults to 3333 which seems to be a standard of sorts. Thatâ€™s it, you are now receiving touch data.\n\nThe next part is the true beauty of this package. To get that touch data you just have to slightly modify your code. Instead of something like\n\nif(Input.touchCount > 0)\n\n{\n\n}\n\nyou use\n\nif(TuioInput.touchCount > 0)\n\n{  \n }\n\nThatâ€™s it! They use unityâ€™s Touch struct internally, so TuioInput.touches contains UnityEngine.Touch objects. Which means any code youâ€™ve written to handle touch input, or any 3<sup>rd</sup> party plugins you have that use touch, simply need to be given TuioInputâ€™s touches instead of Inputâ€™s and everything will magically work for you. This is what I did in 2D Toolkit. I quickly jumped into tk2DUIManager and modified the CheckInputs() and CheckMultiTouchInputs() functions to include another condition for handling TuioInput.touches. The actual loop was identical code to what was already there, just copy, paste and replace any Input with TuioInput. Viola, I have 2D Toolkit UI recognising the touch panel touches.\n\nOf course, this is the Cube. So nothing is quite that simple. Since each node (computer) controls or managers two touch screens (treated as two monitors would normally be treated by any computer) I had a slight issue. The touch panels couldnâ€™t broadcast on their little local network with the same port number as each other. So they were actually set up on ports 3334 and 3335. My first thought was given that the tk2DUIManager is a singleton, I should be able to simple have two TuioInput prefabs in the scene, modify them to get their port numbers from somewhere else so that I could manually set them, and let them simply add their touches to the input manager. Iâ€™d then need to factor in the right panel being offset, since I needed to treat the two screens as a single space, so the touch data from the right panel would be 1080 short on the x and 1920 short on the y. But that didnâ€™t seem like a big issue. Then there is the small issue of these touch panels sitting in portrait mode, which means their coordinate system is rotated 90 degreesâ€¦ ok, thatâ€™s ok, slightly complicates the issue, but itâ€™s not too hard to rotate an x,y position (and offsetting it in the case of the right screen) before storing it. It was at this point that I was introduced to Tim Gurnett, a programmer at the Cube that is no longer stationed up in the section I sit to work, so we hadnâ€™t crossed paths before. Turns out Tim had already written a multiplexer for the touch panels that listened on both ports and mapped the two screens coords to one screen space for you, then creates new TUIO messages and sends them off on port 3333. Not just that, but it could handle the rotation for you too. Great, that saved me some time.\n\nSo on Tuesday the 15<sup>th</sup> of October we had another test on the downstairs wall, the actual full sized wall that this project will run on when it goes live. We do these every two weeks. In it we had some basic placeholder UI. Using the EventManager that I wrote to handle sending events across the network, this UI was recognising touch input and firing off animations on the Destructo bot. For a video of it in action take a look at the [official blog for Robot University.](http://www.robotuniproject.com/test-3-on-the-screens/ \"Robot University\")\n\nHere are some pics I took myself though.\n\n[![IMG_3890](http://res.cloudinary.com/adamsingle/image/upload/v1443437682/IMG_3890_mubbkn.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437682/IMG_3890_mubbkn.jpg) [![IMG_3891](http://res.cloudinary.com/adamsingle/image/upload/v1443437682/IMG_3891_psfr7w.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437682/IMG_3891_psfr7w.jpg) [![IMG_3893](http://res.cloudinary.com/adamsingle/image/upload/v1443437643/IMG_3893_y38egb.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437643/IMG_3893_y38egb.jpg) [![IMG_3894](http://res.cloudinary.com/adamsingle/image/upload/v1443437642/IMG_3894_wtaize.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437642/IMG_3894_wtaize.jpg) [![IMG_3895](http://res.cloudinary.com/adamsingle/image/upload/v1443437641/IMG_3895_urodzp.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437641/IMG_3895_urodzp.jpg)\n\nAll in all, I spent a decent amount of time trying to build this myself, and use some other code that had come my way, but the overall lesson is, if you want TUIO input in your game/project, use the cutdown TUIO framework from Mindstorm. Itâ€™s magic. You can also test TUIO at home using a smart phone. There are free apps for both android and iOS, android is called TUIODroid I believe, not sure what iOS is off the top of my head. Make sure your phone and computer are on the same wifi network, set up the app with your computers IP address and make sure the port is set in itâ€™s settings to the same you have in code (default 3333 remember, I think the app defaults to that too), then thatâ€™s it. Run your project in editor and use the phone as a touch interface. If you drop in the TouchDisplay and TouchConfig prefabs as well youâ€™ll get some nice little circles in the editor game window showing you your touches.\n\nThanks for reading,\n\nChat later,\n\nAdsy\n\n\n","html":"<p>Robot University Update 4 â€“ Input</p>\n\n<p>Good morning, day, evening or night friends. My last two posts have been discussing the rather unique issues for setting up a camera in Unity for a project spanning an entire wall of the Cube. The last post stated that the camera was solved. This isnâ€™t quite the case. There is still another issue to solve, but letâ€™s take a break from cameras. This week we got input working, so weâ€™ll talk about that.</p>\n\n<p>The touch panels at The Cube use the TUIO protocol. This is â€œan open framework that defines a common protocol and API for tangible touch surfaces.â€ (<a href=\"http://www.tuio.org/\">http://www.tuio.org/</a>). What this means for us is that Unityâ€™s Input API isnâ€™t going to help us here, it doesnâ€™t, by default, receive TUIO touches.</p>\n\n<p>If you are ever doing a project in Unity that uses TUIO, simply go here (<a href=\"https://code.google.com/p/unity3d-tuio/\">https://code.google.com/p/unity3d-tuio/</a>) itâ€™s brilliant and super easy. Import the package, drag the TuioInput prefab into the scene and youâ€™re set up already basically. The only thing to double check is the TuioConfiguration.cs file. This is an entire class holding a public int (donâ€™t ask me why). This is the port that the touch panel is broadcasting on. TUIO uses a pretty simple method of sending touch information across the network. So make sure youâ€™re listening on the correct port, it defaults to 3333 which seems to be a standard of sorts. Thatâ€™s it, you are now receiving touch data.</p>\n\n<p>The next part is the true beauty of this package. To get that touch data you just have to slightly modify your code. Instead of something like</p>\n\n<p>if(Input.touchCount > 0)</p>\n\n<p>{</p>\n\n<p>}</p>\n\n<p>you use</p>\n\n<p>if(TuioInput.touchCount > 0)</p>\n\n<p>{ <br />\n }</p>\n\n<p>Thatâ€™s it! They use unityâ€™s Touch struct internally, so TuioInput.touches contains UnityEngine.Touch objects. Which means any code youâ€™ve written to handle touch input, or any 3<sup>rd</sup> party plugins you have that use touch, simply need to be given TuioInputâ€™s touches instead of Inputâ€™s and everything will magically work for you. This is what I did in 2D Toolkit. I quickly jumped into tk2DUIManager and modified the CheckInputs() and CheckMultiTouchInputs() functions to include another condition for handling TuioInput.touches. The actual loop was identical code to what was already there, just copy, paste and replace any Input with TuioInput. Viola, I have 2D Toolkit UI recognising the touch panel touches.</p>\n\n<p>Of course, this is the Cube. So nothing is quite that simple. Since each node (computer) controls or managers two touch screens (treated as two monitors would normally be treated by any computer) I had a slight issue. The touch panels couldnâ€™t broadcast on their little local network with the same port number as each other. So they were actually set up on ports 3334 and 3335. My first thought was given that the tk2DUIManager is a singleton, I should be able to simple have two TuioInput prefabs in the scene, modify them to get their port numbers from somewhere else so that I could manually set them, and let them simply add their touches to the input manager. Iâ€™d then need to factor in the right panel being offset, since I needed to treat the two screens as a single space, so the touch data from the right panel would be 1080 short on the x and 1920 short on the y. But that didnâ€™t seem like a big issue. Then there is the small issue of these touch panels sitting in portrait mode, which means their coordinate system is rotated 90 degreesâ€¦ ok, thatâ€™s ok, slightly complicates the issue, but itâ€™s not too hard to rotate an x,y position (and offsetting it in the case of the right screen) before storing it. It was at this point that I was introduced to Tim Gurnett, a programmer at the Cube that is no longer stationed up in the section I sit to work, so we hadnâ€™t crossed paths before. Turns out Tim had already written a multiplexer for the touch panels that listened on both ports and mapped the two screens coords to one screen space for you, then creates new TUIO messages and sends them off on port 3333. Not just that, but it could handle the rotation for you too. Great, that saved me some time.</p>\n\n<p>So on Tuesday the 15<sup>th</sup> of October we had another test on the downstairs wall, the actual full sized wall that this project will run on when it goes live. We do these every two weeks. In it we had some basic placeholder UI. Using the EventManager that I wrote to handle sending events across the network, this UI was recognising touch input and firing off animations on the Destructo bot. For a video of it in action take a look at the <a href=\"http://www.robotuniproject.com/test-3-on-the-screens/\" title=\"Robot University\">official blog for Robot University.</a></p>\n\n<p>Here are some pics I took myself though.</p>\n\n<p><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437682/IMG_3890_mubbkn.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437682/IMG_3890_mubbkn.jpg\" alt=\"IMG<em>3890\" title=\"\" /></a> <a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437682/IMG_3891_psfr7w.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437682/IMG_3891_psfr7w.jpg\" alt=\"IMG</em>3891\" title=\"\" /></a> <a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437643/IMG_3893_y38egb.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437643/IMG_3893_y38egb.jpg\" alt=\"IMG<em>3893\" title=\"\" /></a> <a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437642/IMG_3894_wtaize.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437642/IMG_3894_wtaize.jpg\" alt=\"IMG</em>3894\" title=\"\" /></a> <a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437641/IMG_3895_urodzp.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437641/IMG_3895_urodzp.jpg\" alt=\"IMG_3895\" title=\"\" /></a></p>\n\n<p>All in all, I spent a decent amount of time trying to build this myself, and use some other code that had come my way, but the overall lesson is, if you want TUIO input in your game/project, use the cutdown TUIO framework from Mindstorm. Itâ€™s magic. You can also test TUIO at home using a smart phone. There are free apps for both android and iOS, android is called TUIODroid I believe, not sure what iOS is off the top of my head. Make sure your phone and computer are on the same wifi network, set up the app with your computers IP address and make sure the port is set in itâ€™s settings to the same you have in code (default 3333 remember, I think the app defaults to that too), then thatâ€™s it. Run your project in editor and use the phone as a touch interface. If you drop in the TouchDisplay and TouchConfig prefabs as well youâ€™ll get some nice little circles in the editor game window showing you your touches.</p>\n\n<p>Thanks for reading,</p>\n\n<p>Chat later,</p>\n\n<p>Adsy</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2013-10-18T11:00:58.000Z","created_by":1,"updated_at":"2015-09-28T20:54:42.000Z","updated_by":1,"published_at":"2013-10-18T11:00:58.000Z","published_by":1},{"id":35,"uuid":"dba063a5-9902-4731-a457-b943957db96c","title":"Robot University - The Kinects","slug":"robot-university-kinects","markdown":"\nMy humble apologies for ignoring this site and blog for so long. Much has happened since my last post, so I have some catching up to do. Expect a blog every week for a little while while I do just that. Today is a post I wrote many months ago and never got around to uploading it. Itâ€™s my final update on Robot University, which is well and truly finished. Next week I might put together a simple Post Mortem of the project, from my point of view, and share some of the media that resulted from it. After that itâ€™s all about the future. On to the kinects:\n\nRobot University Update â€“ Kinect Integration.\n\nI left this one off till quite late in development, because I wanted to be sure that I had it working as expected. Now that I have, Iâ€™d like to walk you through how we integrated 6 kinects into the Robot University installation.\n\nNow we arenâ€™t doing anything super amazing with them, just a simple little â€œcall to actionâ€. For those wondering what that is, a call to action is something that grabs a â€˜potentialâ€™ userâ€™s attention, and turns them into an â€˜actualâ€™ user. In our case, our potential users were people walking past the installation. Now audio is a big call to action, and we have that, but there will be times when the audio is turned down, most notably exam time for QUT. So we wanted to use the Kinects to add another call. We decided on a swarm of little bots that could follow the user as they walked past the wall. Hopefully the movement would be something that they caught out of the corner of their eye, and draw them to the wall. Once the user gets too close, the swarm scatters off screen.\n\nTo add a little bit of fun to this, we decided the swarm would track the closest person to the wall. So if you were walking past, they would begin to follow you, initially converging on your position from multiple offscreen positions. But if a second person suddenly started walking past the wall, closer to it than yourself, the swarm would abandon you and follow them.\n\nThe Cube had always had Kinect installation on itâ€™s â€œtodoâ€ list, but it hadnâ€™t been a high priority before now, so we had to wait to get them installed before we could really muck around with it, and I wonâ€™t lie, it took me a while to wrap my head around how to do what I wanted to do.\n\nLetâ€™s break it down. There are 6 nodes along the bottom of the wall, each controlling two touch panels. My initial discussions with the staff resulted in us all thinking we would only need 3 kinects to cover the distance along the wall with minimal overlap, though this would leave gaps in close. My main problem was I had no idea what sort of data I would be getting back from the Kinects, or how to handle someone being seen by more than one at a time.\n\nSo I needed to get one hooked up and debugging out data. I have a Kinect at home that came with my Xbox, so that was my starting point. Since Iâ€™m using a Mac, I had looked at the open source Kinect SDK, OpenNI. There is a Unity plugin for this already. However, it occurred to me that since the systems at The Cube were PCs, it was likely that the staff would want to use the official Microsoft SDK and drivers. So I set about setting up Windows on my little Macbook Air. This was pure hell. It was easy enough to set up with Bootcamp, but there just isnâ€™t enough internal memory to handle it. I have since bought Parallels, and am still having similar issues, but I finally realised I can have Windows installed on an external HDD (but not Parallels itself) so Iâ€™m in the process now of getting back half my internal hard drive space. The point is, I eventually got a Windows environment set up with Unity installed. I actually really love Parallels and being able to switch between the two OSs at will is awesome.\n\nFor some reason, however, I was getting an error in Unity saying I had no Kinect plugged in. Getting the Kinect drivers and SDK integrated into the actual project was as simple as importing the plugin on the Asset Store, very easy. But this issue was a little tricker to solve. I eventually discovered, hidden somewhere in the back of MSDN documentation, that the Xbox Kinects cannot be recognised by the Microsoft Drivers when running in a Virtual Machine. Sigh. So I had to get my hands on a Windows Kinect. Luckily these were what The Cube was using, and I was able to borrow one.\n\nSo with a rig finally set up at home I started looking into the data it was giving back. I made the mistake of not looking up what the Kinect returns, and making an assumption. I assumed, without really thinking about it, that the Kinect would return a normalised value within itâ€™s view, much like the Viewport value of a Unity Camera. Since I was testing this in a fairly small room, the numbers I were getting looked to support this to some extent (but with 0 being the middle instead of the left, so values from -0.5 to 0.5. Not exactly normalised, and this should have been my first warning). Unfortunately, once I got this same set up happening on the wall, I was getting values outside of these numbers. Which was throwing me. So after finally googling some docs, I discovered these values are actually meters from the middle of the sensor. To be fair, that does seem pretty strange. I never suspected Iâ€™d be getting physical distances. Guess Iâ€™m too used to working in virtual environments.\n\nOK, so I have another piece of the puzzle. I started to sketch up the problem. 6 kinects across a space. Each one giving data, in meters, of the closest person it could see. I could send this data to the server, but I had to figure out what to do with it. The first obvious problem is that someone standing in the middle of the sensor on node 5 would produce the same values (or close enough) as someone standing in the middle of node 1. So I needed a way to offset these values in world space so that the swarm new where the person was standing. This took me a while, and involved some doodling and free form note taking.\n\nEventually I figured it out. Since the data was in meters, I had to work in meters too. I knew the physical dimensions of the panels, and they are almost flush against each other, so a few mm wasnâ€™t going to be worth worrying about. Each panel is 692mm. This means the first Kinect is 692mm from the left edge of the project space. The 2nd Kinect was 1384mm from there, the 3rd another 1384 etc etc. This brought the total distance across the wall to about 8.3m. From this I could create a little equation to calculate the distance from the left edge that a person is standing using the position the kinect gives, and the node that kinect is attached to:\n\nDistance to first kinect in meters + ((node â€“ 1) * distance between kinects in meters) + kinect position.x\n\n= 0.692 + ((node â€“ 1) * 1.384) + kinect position.x\n\nSince I also knew the physical width of the whole space, I could convert this to a fraction of the width of the â€œcollective screenâ€ that was the whole environment by dividing it by 8.3. Now I basically had a Viewport position of the person. I could use the camera viewportToWorldPoint function to convert that into world space and use that as the position the swarm needs to track.\n\nThe only tricky part left was handling the logic for which kinect to track. After some teething issues I got that working too. Essentially the server, which controls the swarm, holds a last known position for each node (setting any nodes last known position to a huge number when it receives data indicating that sensor doesnâ€™t see anyone). It cycles through each node to check if the new position just received is closer than any last known positions. If it is, itâ€™s the new position to track, otherwise itâ€™s ignored. Thereâ€™s a little more logic for handling when to call the swarm in or send it running, but basically thatâ€™s the functionality we were after working. Youâ€™ll be able to come and see it for yourself in a couple of months if you happen to be in Brisbane.\n\nI hope you found that informative, or enjoyable. Both would be marvellous ï¿½ï¿½\n\nThanks for reading,\n\nAdsy.\n\nFinal Note:  \n Obviously, as I said, this was written some time ago, so you can see the installation right now down at the Cube. Itâ€™s been up for a few months now, so Iâ€™m not sure how much longer itâ€™ll be there. If you do get down there to see it, let me know what you thought of it.\n\n\n","html":"<p>My humble apologies for ignoring this site and blog for so long. Much has happened since my last post, so I have some catching up to do. Expect a blog every week for a little while while I do just that. Today is a post I wrote many months ago and never got around to uploading it. Itâ€™s my final update on Robot University, which is well and truly finished. Next week I might put together a simple Post Mortem of the project, from my point of view, and share some of the media that resulted from it. After that itâ€™s all about the future. On to the kinects:</p>\n\n<p>Robot University Update â€“ Kinect Integration.</p>\n\n<p>I left this one off till quite late in development, because I wanted to be sure that I had it working as expected. Now that I have, Iâ€™d like to walk you through how we integrated 6 kinects into the Robot University installation.</p>\n\n<p>Now we arenâ€™t doing anything super amazing with them, just a simple little â€œcall to actionâ€. For those wondering what that is, a call to action is something that grabs a â€˜potentialâ€™ userâ€™s attention, and turns them into an â€˜actualâ€™ user. In our case, our potential users were people walking past the installation. Now audio is a big call to action, and we have that, but there will be times when the audio is turned down, most notably exam time for QUT. So we wanted to use the Kinects to add another call. We decided on a swarm of little bots that could follow the user as they walked past the wall. Hopefully the movement would be something that they caught out of the corner of their eye, and draw them to the wall. Once the user gets too close, the swarm scatters off screen.</p>\n\n<p>To add a little bit of fun to this, we decided the swarm would track the closest person to the wall. So if you were walking past, they would begin to follow you, initially converging on your position from multiple offscreen positions. But if a second person suddenly started walking past the wall, closer to it than yourself, the swarm would abandon you and follow them.</p>\n\n<p>The Cube had always had Kinect installation on itâ€™s â€œtodoâ€ list, but it hadnâ€™t been a high priority before now, so we had to wait to get them installed before we could really muck around with it, and I wonâ€™t lie, it took me a while to wrap my head around how to do what I wanted to do.</p>\n\n<p>Letâ€™s break it down. There are 6 nodes along the bottom of the wall, each controlling two touch panels. My initial discussions with the staff resulted in us all thinking we would only need 3 kinects to cover the distance along the wall with minimal overlap, though this would leave gaps in close. My main problem was I had no idea what sort of data I would be getting back from the Kinects, or how to handle someone being seen by more than one at a time.</p>\n\n<p>So I needed to get one hooked up and debugging out data. I have a Kinect at home that came with my Xbox, so that was my starting point. Since Iâ€™m using a Mac, I had looked at the open source Kinect SDK, OpenNI. There is a Unity plugin for this already. However, it occurred to me that since the systems at The Cube were PCs, it was likely that the staff would want to use the official Microsoft SDK and drivers. So I set about setting up Windows on my little Macbook Air. This was pure hell. It was easy enough to set up with Bootcamp, but there just isnâ€™t enough internal memory to handle it. I have since bought Parallels, and am still having similar issues, but I finally realised I can have Windows installed on an external HDD (but not Parallels itself) so Iâ€™m in the process now of getting back half my internal hard drive space. The point is, I eventually got a Windows environment set up with Unity installed. I actually really love Parallels and being able to switch between the two OSs at will is awesome.</p>\n\n<p>For some reason, however, I was getting an error in Unity saying I had no Kinect plugged in. Getting the Kinect drivers and SDK integrated into the actual project was as simple as importing the plugin on the Asset Store, very easy. But this issue was a little tricker to solve. I eventually discovered, hidden somewhere in the back of MSDN documentation, that the Xbox Kinects cannot be recognised by the Microsoft Drivers when running in a Virtual Machine. Sigh. So I had to get my hands on a Windows Kinect. Luckily these were what The Cube was using, and I was able to borrow one.</p>\n\n<p>So with a rig finally set up at home I started looking into the data it was giving back. I made the mistake of not looking up what the Kinect returns, and making an assumption. I assumed, without really thinking about it, that the Kinect would return a normalised value within itâ€™s view, much like the Viewport value of a Unity Camera. Since I was testing this in a fairly small room, the numbers I were getting looked to support this to some extent (but with 0 being the middle instead of the left, so values from -0.5 to 0.5. Not exactly normalised, and this should have been my first warning). Unfortunately, once I got this same set up happening on the wall, I was getting values outside of these numbers. Which was throwing me. So after finally googling some docs, I discovered these values are actually meters from the middle of the sensor. To be fair, that does seem pretty strange. I never suspected Iâ€™d be getting physical distances. Guess Iâ€™m too used to working in virtual environments.</p>\n\n<p>OK, so I have another piece of the puzzle. I started to sketch up the problem. 6 kinects across a space. Each one giving data, in meters, of the closest person it could see. I could send this data to the server, but I had to figure out what to do with it. The first obvious problem is that someone standing in the middle of the sensor on node 5 would produce the same values (or close enough) as someone standing in the middle of node 1. So I needed a way to offset these values in world space so that the swarm new where the person was standing. This took me a while, and involved some doodling and free form note taking.</p>\n\n<p>Eventually I figured it out. Since the data was in meters, I had to work in meters too. I knew the physical dimensions of the panels, and they are almost flush against each other, so a few mm wasnâ€™t going to be worth worrying about. Each panel is 692mm. This means the first Kinect is 692mm from the left edge of the project space. The 2nd Kinect was 1384mm from there, the 3rd another 1384 etc etc. This brought the total distance across the wall to about 8.3m. From this I could create a little equation to calculate the distance from the left edge that a person is standing using the position the kinect gives, and the node that kinect is attached to:</p>\n\n<p>Distance to first kinect in meters + ((node â€“ 1) * distance between kinects in meters) + kinect position.x</p>\n\n<p>= 0.692 + ((node â€“ 1) * 1.384) + kinect position.x</p>\n\n<p>Since I also knew the physical width of the whole space, I could convert this to a fraction of the width of the â€œcollective screenâ€ that was the whole environment by dividing it by 8.3. Now I basically had a Viewport position of the person. I could use the camera viewportToWorldPoint function to convert that into world space and use that as the position the swarm needs to track.</p>\n\n<p>The only tricky part left was handling the logic for which kinect to track. After some teething issues I got that working too. Essentially the server, which controls the swarm, holds a last known position for each node (setting any nodes last known position to a huge number when it receives data indicating that sensor doesnâ€™t see anyone). It cycles through each node to check if the new position just received is closer than any last known positions. If it is, itâ€™s the new position to track, otherwise itâ€™s ignored. Thereâ€™s a little more logic for handling when to call the swarm in or send it running, but basically thatâ€™s the functionality we were after working. Youâ€™ll be able to come and see it for yourself in a couple of months if you happen to be in Brisbane.</p>\n\n<p>I hope you found that informative, or enjoyable. Both would be marvellous ï¿½ï¿½</p>\n\n<p>Thanks for reading,</p>\n\n<p>Adsy.</p>\n\n<p>Final Note: <br />\n Obviously, as I said, this was written some time ago, so you can see the installation right now down at the Cube. Itâ€™s been up for a few months now, so Iâ€™m not sure how much longer itâ€™ll be there. If you do get down there to see it, let me know what you thought of it.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-05-28T10:00:44.000Z","created_by":1,"updated_at":"2014-05-28T08:49:18.000Z","updated_by":1,"published_at":"2014-05-28T10:00:44.000Z","published_by":1},{"id":36,"uuid":"83e763b3-926b-4235-a09d-2b2428ed6b9e","title":"Time Management for the full time Dev, full time parent, part time Indie","slug":"time-management-sleep","markdown":"\n\n# Part 1 â€“ Sleep\n\nÂ \n\nWelcome to part one in a little series of posts Iâ€™m going to do over the next few weeks on time management for the part time indie. Let me first explain the title. I consider myself a Full Time/Part Time because I have a full time job, I have a young family with two kids under 5 and I have my own little indie studio. This usually feels like at least 3 jobs and the sheer number of things to do can feel overwhelming at times. But it can be managed.\n\nIn this intro post, weâ€™ll talk about what my days are like personally, talk about the needs I have commitment-wise and weâ€™ll talk a little bit about the arch nemesis of the Indie: Sleep. Ainâ€™t nobody got time for that.\n\nIâ€™d like to quickly point out that despite the fact Iâ€™m a developer in my day job, this series is in no way aimed at programmers in that same situation. This is for anyone that works full time and find they have a ton of ideas rolling around their head that they just canâ€™t get to because work sucks up all their time. I was just speaking to a young man last night who was saying that with the 2 hour commute to work, and 6 day work week, he has no time left to do anything. He is exactly who this series is aimed at.\n\nSo letâ€™s talk quickly about my life. This is in part in the hope that youâ€™ll find some aspect of what I manage thatâ€™s relatable to you and drive home the point that the techniques Iâ€™ll talk about can benefit you, and in part to add credibility to these techniques at all. Although, full disclosure, there is nothing here that I came up with. This is just a combination of techniques and lessons learned that have helped me and will hopefully help you.\n\nFirstly, I work full time. So thatâ€™s Monday to Friday, 9 till 5. I commute to work and that takes 30-40 minutes of pure train time (depending on the train I catch). By pure time I mean there is more time buffered around getting to and from the train station. Itâ€™s important to keep in mind â€œdeadâ€ time. It still comes out of your 24 hours obviously. Yes, the time I spend getting to work might be closer to an hour, but only the time spent on the train itself has the potential to be productive. Weâ€™ll talk more about â€œfilling in the cracksâ€ in a future post though.\n\nI have a young family. A beautiful wife, Lauren, who rightly expects some attention every now and then. And to be fair is a big part of why I can manage as much as I do. I rarely have to think about making my own dinner for instance and thatâ€™s a huge deal. I have two awesome kids, Harrison, aged 4 and a half (the halves are important at that age) and Eliza, whoâ€™s a little over 1. These guys not only demand, but deserve my attention as much as possible. And I mean actually possible. Not the â€œIâ€™ve got a ton to do, itâ€™s just not possibleâ€ kind of possible. On the priority list, these three sit above almost everything. Itâ€™s worth keeping in mind though that you can make compromises with them. My son loves making deals (though heâ€™s not keen on keeping his side of them) and thatâ€™s absolutely ok in my opinion. So long as you never renege on a deal you make.\n\nI am also the programmer for an amazing bitpop band called 7Bit Hero. We incorporate multiplayer gaming into our live performances. The audience can use our app to connect to our server and when certain songs come on, a game fires up on a big screen behind the band. The audienceâ€™s phone turns into a big join button and they race each other to get into the game. Some games have 8 players, some can go as high as 32. They are all simple, one button games, but the pure fun of seeing your little custom person up on the stage, responding to your commands to jump the jars or avoid the giant cactus slamming into the ground is awesome. This technology is still a very early prototype, and I try to allocate time to work on it each week.\n\nOn top of that Iâ€™m also the director and programmer of my own indie studio called Sly Budgie. We are 4 friends that really want to make the type of games we love to play. But none of us live in the same city as another, so itâ€™s all remote work. Plus, two of us have day jobs and other businesses and families while the other two live off contract work that can require a truck load of hours poured into them. Usually way outside the â€œnormalâ€ 9 to 5. So Sly Budgie exists in the cracks (which as I mentioned Iâ€™ll talk more about another day). We have actually decided to work on a non-game application weâ€™re calling Flock of Pain for a few reasons. To find out more on what that is all about feel free to check out [www.slybudgie.com](http://www.slybudgie.com)\n\nI like to dedicate one day a week, usually Friday, to prototyping and exploring new programming techniques (which is where the application idea for Sly Budgie came from) but at the moment Iâ€™ve just launched a new collaboration with another mate. Weâ€™re calling ourselves One Coin and are working on a super hero choose-your-own-adventure comicâ€¦strategyâ€¦RPG-ish kinda thing. Itâ€™s called Exemplar and you can find out more about that one at [www.onecoin.azurewebsites.net](http://www.onecoin.azurewebsites.net)\n\nWith three projects being worked on outside of work hours (and kids bed times), Iâ€™ve also temporarily shelved the day I was putting into working through online courses and learning new skills. I had just started a Udemy course on learning professional game art. As a coder it can be a huge block in productivity to not be able to slap out your own placeholder/prototype art, so I plan to fix that. Iâ€™ve temporarily reallocated that day to either Sly Budgie or One Coin, whichever needs the attention most that week.\n\nSo I have a lot of plates spinning here. And there is only so much time in a day. Letâ€™s broadly talk about an average day. My morning usually kicks off around 5.30, when the alarm goes off. Unless one of the kids decides earlier looks better. This happens more in the summer though, when the sun is up earlier. The morning routine keeps us going till we head for daycare about 7. By the time the drop off has been completed Iâ€™m probably over at the train station by about 7.30, though some days itâ€™s as late as 8. Around a 40 minute train trip into the city, then 5-10 minute walk to work depending on traffic (have to cross a big, busy road). Finish work at 5, usually manage to make it to the train station in time for the 5.12 express, so that gets into my station by about 5.45ish. Wait for my bus, that shows up about 10 to 6 and itâ€™s about 15 past by the time I walk in the front door.\n\nOnce there, weâ€™re in the night routine. Dinner, baths, stories, walking the little one to sleep, cleaning the kitchen, making lunches for the next day then odd jobs like folding washing, tidying etc. By the time I sit down to work, itâ€™s usually somewhere between 8.30 and 9.30. Some nights it might be as late as 10. Then Iâ€™ll work till around 11 or midnight. Most nights, at this stage, this work is punctuated with a baby waking up a few times and needing to be comforted back to sleep. Then up again at 5 or 5.30 to do it all again.\n\nWeekends are rarely work time, and if they are, itâ€™s only of a night, once the kids are asleep and anything we need to do around the house is done. Just like a week day. The days are dedicated to the family unless Iâ€™ve got a deadline looming that needs some extra time resource allocated to it.\n\nMy sleep is still punctuated by waking children, usually the baby these days, so itâ€™s not straight through. According to my FitBit, I usually get between 3 and 5 hours of sleep a night. And here we find the problem we are going to attempt to address today. I have read many, many blog posts on maximizing productivity. I get almost one a day from some source in my inbox. And almost every single one of them starts with â€œmake sure you get 8 hours sleep every nightâ€ or â€œhereâ€™s what time you have to go to bed to wake up rightâ€.\n\nThe problem is, what do you do if thatâ€™s just not an option? Obviously long term, thatâ€™s going to be your goal. You donâ€™t want to have as many balls in the air as I have forever. The plan is for at least one to land on a big pile of money that will take the pressure off ;). And you wonâ€™t always be woken by the kids. Right? They do sleep eventually donâ€™t they!? And although most nights I might only get 4 hours sleep, I canâ€™t keep that up indefinitely. At least once a fortnight, sometimes once a week if itâ€™s a physically big week, I will crash early. Often while trying to sooth one of the children to sleep. Itâ€™s surprisingly hard to calm another human being into sleep without putting yourself to sleep too (Iâ€™d love to see the results of a study where insomniacs were asked to do this).\n\nSo let me share with you my own rules on sleep.\n\n### Rule number 1:\n\n#### Donâ€™t set yourself up for a late one\n\nNever put yourself in a position where the work you plan on doing tonight needs to be done tonight (unless that choice is taken out of your hands. Not much you can do there). You need to accept that your body will need to make up for lost time at some point. That 8 hours sleep thing isnâ€™t a desirable. Itâ€™s something your body needs. What Iâ€™m talking about in this post is how to maintain as much alertness and productivity as possible while in what is technically a sleep deprived state. If you canâ€™t afford to pass out tonight because you need to finish what is due tomorrow, you are adding a ton of stress to your plate. On the flip side, being able to casually make the decision to do nothing tonight and accept your bodyâ€™s screaming desire to sleep has an opposite effect and youâ€™ll feel the stress fade away as you drift off to an early sleep.\n\n### Rule number 2:\n\n#### Eat correctly\n\nDiet. I donâ€™t mean the type of diet you â€œgo onâ€ to achieve some sort of goal. I mean diet in the actual meaning of the word. â€œThe kinds of food that a person, animal, or community habitually eatsâ€ [Oxford Dictionaries](www.oxforddictionaries.com/definition/english/diet). The Oxford Dictionary also describes the origin of the word as deriving from the original latin *diaita* meaning â€˜a way of lifeâ€™.\n\nIt is hugely important that you eat well. The trick to maximizing the efficiency of your sleep is just to have a healthy body. A healthy body is better at repairing itself, which includes the process of rejuvenation that occurs as we sleep. On top of that, junk food has a poor psychological effect on you. You are going to feel worse, even if you arenâ€™t conscious of the fact. That has an effect on your productivity, which will affect how much you get done in your limited time, which will affect the stress levels you have when you go to sleep (or simply how late you go to sleep). Also watch how much you eat. Over eating will leave you feeling heavy and slow. When your body feels slow, your mind follows suit. Finally, a little rule of thumb I try to stick to is donâ€™t eat after about 8pm. Give your body time to digest food before you lay down to sleep. Iâ€™ve found it has a positive effect on both the quality of my sleep and how long it takes me to get to sleep. Please note these are all anecdotal observations from both my personal experience and others Iâ€™ve worked and spoken with. Check out a 48 hour Game Jam to see it all in action.\n\n### Rule number 3:\n\n#### Exercise\n\nLast rule. Exercise. Of a night. Before you sit down to work. Before you eat if possible, itâ€™s hard to push yourself hard with a full stomach, but after is ok if it canâ€™t be avoided. It might sound counterproductive to spend some of what little time you have exercising instead of working, but I have found that it has multiple benefits. Firstly, the endorphin kick right after boosts creativity and motivation. Secondly, I feel more energetic with less sleep after exercising consistently for about a week. If you are inconsistent, it could well take you longer than that to feel the benefit when you wake up in the morning, same if you are well out of shape. So you need to commit to it and be consistent.\n\nAs for what exercise. Thatâ€™s pretty much up to you, but make it reasonably high intensity. Donâ€™t go for a stroll. Go for a job. Or even a power walk. Make sure you when you finish you have some elevation to heart rate and breathing rate or â€œpuffednessâ€ as I like to call it. The application I mentioned we are working on at Sly Budgie is actually a fitness application designed to give you High Intensity Interval Training circuits at home. Make it as simple as possible to get a really solid workout with minimal preparation time. That idea came from my own needs when trying to meet this rule. But you can find any bodyweight routine from a fitness magazine or online somewhere and use it. It doesnâ€™t need to be different every night, and it doesnâ€™t need to use all the latest gym equipment. Just so long as your heart and breathing ends up working harder than it is right now as youâ€™re reading this. If you can do something that makes you say â€œcome on!â€ as you work to push one more rep out, all the better. When youâ€™re done. Have a shower and sit (or better yet, stand) at your computer and you will feel awesome and ready to go.\n\nKnowing what to go on with is the subject of part 2!\n\nI hope this article has provided you with some inspiration to explore what habits you have that might be effecting the quality of your sleep. I hope itâ€™s at least made you take a closer look at the quality of your sleep. There are plenty of people out there that complain they are still tired after 8 hours sleep, but they never seem to look to other areas of their life to solve that problem. They are convinced they are doing all the right steps by getting the required number of hours and itâ€™s obviously out of their hands and not their fault.\n\n\n","html":"<h1 id=\"part1sleep\">Part 1 â€“ Sleep</h1>\n\n<p>Â </p>\n\n<p>Welcome to part one in a little series of posts Iâ€™m going to do over the next few weeks on time management for the part time indie. Let me first explain the title. I consider myself a Full Time/Part Time because I have a full time job, I have a young family with two kids under 5 and I have my own little indie studio. This usually feels like at least 3 jobs and the sheer number of things to do can feel overwhelming at times. But it can be managed.</p>\n\n<p>In this intro post, weâ€™ll talk about what my days are like personally, talk about the needs I have commitment-wise and weâ€™ll talk a little bit about the arch nemesis of the Indie: Sleep. Ainâ€™t nobody got time for that.</p>\n\n<p>Iâ€™d like to quickly point out that despite the fact Iâ€™m a developer in my day job, this series is in no way aimed at programmers in that same situation. This is for anyone that works full time and find they have a ton of ideas rolling around their head that they just canâ€™t get to because work sucks up all their time. I was just speaking to a young man last night who was saying that with the 2 hour commute to work, and 6 day work week, he has no time left to do anything. He is exactly who this series is aimed at.</p>\n\n<p>So letâ€™s talk quickly about my life. This is in part in the hope that youâ€™ll find some aspect of what I manage thatâ€™s relatable to you and drive home the point that the techniques Iâ€™ll talk about can benefit you, and in part to add credibility to these techniques at all. Although, full disclosure, there is nothing here that I came up with. This is just a combination of techniques and lessons learned that have helped me and will hopefully help you.</p>\n\n<p>Firstly, I work full time. So thatâ€™s Monday to Friday, 9 till 5. I commute to work and that takes 30-40 minutes of pure train time (depending on the train I catch). By pure time I mean there is more time buffered around getting to and from the train station. Itâ€™s important to keep in mind â€œdeadâ€ time. It still comes out of your 24 hours obviously. Yes, the time I spend getting to work might be closer to an hour, but only the time spent on the train itself has the potential to be productive. Weâ€™ll talk more about â€œfilling in the cracksâ€ in a future post though.</p>\n\n<p>I have a young family. A beautiful wife, Lauren, who rightly expects some attention every now and then. And to be fair is a big part of why I can manage as much as I do. I rarely have to think about making my own dinner for instance and thatâ€™s a huge deal. I have two awesome kids, Harrison, aged 4 and a half (the halves are important at that age) and Eliza, whoâ€™s a little over 1. These guys not only demand, but deserve my attention as much as possible. And I mean actually possible. Not the â€œIâ€™ve got a ton to do, itâ€™s just not possibleâ€ kind of possible. On the priority list, these three sit above almost everything. Itâ€™s worth keeping in mind though that you can make compromises with them. My son loves making deals (though heâ€™s not keen on keeping his side of them) and thatâ€™s absolutely ok in my opinion. So long as you never renege on a deal you make.</p>\n\n<p>I am also the programmer for an amazing bitpop band called 7Bit Hero. We incorporate multiplayer gaming into our live performances. The audience can use our app to connect to our server and when certain songs come on, a game fires up on a big screen behind the band. The audienceâ€™s phone turns into a big join button and they race each other to get into the game. Some games have 8 players, some can go as high as 32. They are all simple, one button games, but the pure fun of seeing your little custom person up on the stage, responding to your commands to jump the jars or avoid the giant cactus slamming into the ground is awesome. This technology is still a very early prototype, and I try to allocate time to work on it each week.</p>\n\n<p>On top of that Iâ€™m also the director and programmer of my own indie studio called Sly Budgie. We are 4 friends that really want to make the type of games we love to play. But none of us live in the same city as another, so itâ€™s all remote work. Plus, two of us have day jobs and other businesses and families while the other two live off contract work that can require a truck load of hours poured into them. Usually way outside the â€œnormalâ€ 9 to 5. So Sly Budgie exists in the cracks (which as I mentioned Iâ€™ll talk more about another day). We have actually decided to work on a non-game application weâ€™re calling Flock of Pain for a few reasons. To find out more on what that is all about feel free to check out <a href=\"http://www.slybudgie.com\">www.slybudgie.com</a></p>\n\n<p>I like to dedicate one day a week, usually Friday, to prototyping and exploring new programming techniques (which is where the application idea for Sly Budgie came from) but at the moment Iâ€™ve just launched a new collaboration with another mate. Weâ€™re calling ourselves One Coin and are working on a super hero choose-your-own-adventure comicâ€¦strategyâ€¦RPG-ish kinda thing. Itâ€™s called Exemplar and you can find out more about that one at <a href=\"http://www.onecoin.azurewebsites.net\">www.onecoin.azurewebsites.net</a></p>\n\n<p>With three projects being worked on outside of work hours (and kids bed times), Iâ€™ve also temporarily shelved the day I was putting into working through online courses and learning new skills. I had just started a Udemy course on learning professional game art. As a coder it can be a huge block in productivity to not be able to slap out your own placeholder/prototype art, so I plan to fix that. Iâ€™ve temporarily reallocated that day to either Sly Budgie or One Coin, whichever needs the attention most that week.</p>\n\n<p>So I have a lot of plates spinning here. And there is only so much time in a day. Letâ€™s broadly talk about an average day. My morning usually kicks off around 5.30, when the alarm goes off. Unless one of the kids decides earlier looks better. This happens more in the summer though, when the sun is up earlier. The morning routine keeps us going till we head for daycare about 7. By the time the drop off has been completed Iâ€™m probably over at the train station by about 7.30, though some days itâ€™s as late as 8. Around a 40 minute train trip into the city, then 5-10 minute walk to work depending on traffic (have to cross a big, busy road). Finish work at 5, usually manage to make it to the train station in time for the 5.12 express, so that gets into my station by about 5.45ish. Wait for my bus, that shows up about 10 to 6 and itâ€™s about 15 past by the time I walk in the front door.</p>\n\n<p>Once there, weâ€™re in the night routine. Dinner, baths, stories, walking the little one to sleep, cleaning the kitchen, making lunches for the next day then odd jobs like folding washing, tidying etc. By the time I sit down to work, itâ€™s usually somewhere between 8.30 and 9.30. Some nights it might be as late as 10. Then Iâ€™ll work till around 11 or midnight. Most nights, at this stage, this work is punctuated with a baby waking up a few times and needing to be comforted back to sleep. Then up again at 5 or 5.30 to do it all again.</p>\n\n<p>Weekends are rarely work time, and if they are, itâ€™s only of a night, once the kids are asleep and anything we need to do around the house is done. Just like a week day. The days are dedicated to the family unless Iâ€™ve got a deadline looming that needs some extra time resource allocated to it.</p>\n\n<p>My sleep is still punctuated by waking children, usually the baby these days, so itâ€™s not straight through. According to my FitBit, I usually get between 3 and 5 hours of sleep a night. And here we find the problem we are going to attempt to address today. I have read many, many blog posts on maximizing productivity. I get almost one a day from some source in my inbox. And almost every single one of them starts with â€œmake sure you get 8 hours sleep every nightâ€ or â€œhereâ€™s what time you have to go to bed to wake up rightâ€.</p>\n\n<p>The problem is, what do you do if thatâ€™s just not an option? Obviously long term, thatâ€™s going to be your goal. You donâ€™t want to have as many balls in the air as I have forever. The plan is for at least one to land on a big pile of money that will take the pressure off ;). And you wonâ€™t always be woken by the kids. Right? They do sleep eventually donâ€™t they!? And although most nights I might only get 4 hours sleep, I canâ€™t keep that up indefinitely. At least once a fortnight, sometimes once a week if itâ€™s a physically big week, I will crash early. Often while trying to sooth one of the children to sleep. Itâ€™s surprisingly hard to calm another human being into sleep without putting yourself to sleep too (Iâ€™d love to see the results of a study where insomniacs were asked to do this).</p>\n\n<p>So let me share with you my own rules on sleep.</p>\n\n<h3 id=\"rulenumber1\">Rule number 1:</h3>\n\n<h4 id=\"dontsetyourselfupforalateone\">Donâ€™t set yourself up for a late one</h4>\n\n<p>Never put yourself in a position where the work you plan on doing tonight needs to be done tonight (unless that choice is taken out of your hands. Not much you can do there). You need to accept that your body will need to make up for lost time at some point. That 8 hours sleep thing isnâ€™t a desirable. Itâ€™s something your body needs. What Iâ€™m talking about in this post is how to maintain as much alertness and productivity as possible while in what is technically a sleep deprived state. If you canâ€™t afford to pass out tonight because you need to finish what is due tomorrow, you are adding a ton of stress to your plate. On the flip side, being able to casually make the decision to do nothing tonight and accept your bodyâ€™s screaming desire to sleep has an opposite effect and youâ€™ll feel the stress fade away as you drift off to an early sleep.</p>\n\n<h3 id=\"rulenumber2\">Rule number 2:</h3>\n\n<h4 id=\"eatcorrectly\">Eat correctly</h4>\n\n<p>Diet. I donâ€™t mean the type of diet you â€œgo onâ€ to achieve some sort of goal. I mean diet in the actual meaning of the word. â€œThe kinds of food that a person, animal, or community habitually eatsâ€ <a href=\"www.oxforddictionaries.com/definition/english/diet\">Oxford Dictionaries</a>. The Oxford Dictionary also describes the origin of the word as deriving from the original latin <em>diaita</em> meaning â€˜a way of lifeâ€™.</p>\n\n<p>It is hugely important that you eat well. The trick to maximizing the efficiency of your sleep is just to have a healthy body. A healthy body is better at repairing itself, which includes the process of rejuvenation that occurs as we sleep. On top of that, junk food has a poor psychological effect on you. You are going to feel worse, even if you arenâ€™t conscious of the fact. That has an effect on your productivity, which will affect how much you get done in your limited time, which will affect the stress levels you have when you go to sleep (or simply how late you go to sleep). Also watch how much you eat. Over eating will leave you feeling heavy and slow. When your body feels slow, your mind follows suit. Finally, a little rule of thumb I try to stick to is donâ€™t eat after about 8pm. Give your body time to digest food before you lay down to sleep. Iâ€™ve found it has a positive effect on both the quality of my sleep and how long it takes me to get to sleep. Please note these are all anecdotal observations from both my personal experience and others Iâ€™ve worked and spoken with. Check out a 48 hour Game Jam to see it all in action.</p>\n\n<h3 id=\"rulenumber3\">Rule number 3:</h3>\n\n<h4 id=\"exercise\">Exercise</h4>\n\n<p>Last rule. Exercise. Of a night. Before you sit down to work. Before you eat if possible, itâ€™s hard to push yourself hard with a full stomach, but after is ok if it canâ€™t be avoided. It might sound counterproductive to spend some of what little time you have exercising instead of working, but I have found that it has multiple benefits. Firstly, the endorphin kick right after boosts creativity and motivation. Secondly, I feel more energetic with less sleep after exercising consistently for about a week. If you are inconsistent, it could well take you longer than that to feel the benefit when you wake up in the morning, same if you are well out of shape. So you need to commit to it and be consistent.</p>\n\n<p>As for what exercise. Thatâ€™s pretty much up to you, but make it reasonably high intensity. Donâ€™t go for a stroll. Go for a job. Or even a power walk. Make sure you when you finish you have some elevation to heart rate and breathing rate or â€œpuffednessâ€ as I like to call it. The application I mentioned we are working on at Sly Budgie is actually a fitness application designed to give you High Intensity Interval Training circuits at home. Make it as simple as possible to get a really solid workout with minimal preparation time. That idea came from my own needs when trying to meet this rule. But you can find any bodyweight routine from a fitness magazine or online somewhere and use it. It doesnâ€™t need to be different every night, and it doesnâ€™t need to use all the latest gym equipment. Just so long as your heart and breathing ends up working harder than it is right now as youâ€™re reading this. If you can do something that makes you say â€œcome on!â€ as you work to push one more rep out, all the better. When youâ€™re done. Have a shower and sit (or better yet, stand) at your computer and you will feel awesome and ready to go.</p>\n\n<p>Knowing what to go on with is the subject of part 2!</p>\n\n<p>I hope this article has provided you with some inspiration to explore what habits you have that might be effecting the quality of your sleep. I hope itâ€™s at least made you take a closer look at the quality of your sleep. There are plenty of people out there that complain they are still tired after 8 hours sleep, but they never seem to look to other areas of their life to solve that problem. They are convinced they are doing all the right steps by getting the required number of hours and itâ€™s obviously out of their hands and not their fault.</p>","image":"http://res.cloudinary.com/adamsingle/image/upload/v1443437640/EllieHarrySleep_bp9w38.jpg","featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2015-08-06T12:00:12.000Z","created_by":1,"updated_at":"2018-04-11T05:02:31.000Z","updated_by":1,"published_at":"2015-08-06T12:00:12.000Z","published_by":1},{"id":37,"uuid":"49c2c92b-6ad9-4d29-b815-4b2e42d9999e","title":"Time Management for the full time Dev, full time parent, part time Indie","slug":"time-cracks","markdown":"\n\n# Part 2 â€“ Cracks in time\n\nInÂ [part 1](http://adamsingle.com/time-management-sleep/)Â I talked about how to get the most out of minimal sleep. I discussed a little about my average day and how and where the hours go and why I get minimal sleep in the first place. I also talked about the number of projects I have on the go at any given time.\n\n\n## Living in the cracks\n\n  \n Letâ€™s talk about maximising the efficiency of the small amounts of dev time that can be found in between other time commitments. Last post I spoke of the idea of â€œthe cracksâ€ of time in our day. For me, a lot of my day is accounted for before I even think about things like running my own business. Thereâ€™s full time work and the commute to and from it. There are the kids and getting them ready for day care in the mornings and bed at night. Thereâ€™s making time to talk to my wife, sometimes just about whatâ€™s on TV or something that we read about that day. For anyone with a partner, this is critical. If you want to fit being an indie around having a family and full time job, you must build in time for them. That time is not the flexible kind. Thatâ€™s part of what you are fitting the dev work around. So the cracks for my day are the times that fall in between all that. Which is usually the commute on the train in to work, which is where Iâ€™m writing this right now, my lunch hour, though today that is given over to a meeting of organisers for the Game Technology and Game Development Brisbane meet ups. The commute home. And maybe, a couple of hours between getting the important night routine things done and going to bed. All up, I might be able to find 4 hours, if Iâ€™m lucky, scattered around the day. On the weekends, itâ€™s often less. I dedicate most of that time to being with my family.\n\n\n## Identifying the traps\n\n  \n### 1. Distractions\n\n  \n Any programmer will tell you, a continuous block of time is way more efficient than a shattered one. There is an excellent description on why programmers seem to get way more put out by interruptions than seems fair in a post calledÂ *Why Programmers Work At Night*Â which you canÂ [read here](http://swizec.com/blog/why-programmers-work-at-night/swizec/3198). Thatâ€™s darn accurate. Attempting to put down a half coded thought to pick up again later can be very frustrating. Sometimes you can feel your train of thought crumbling the second someone starts talking to you. Or in my case, as the train voice over says the next station is my station and I have to quickly save and pack up my mini â€œoffice-in-a-lapâ€ before the train stops. Weâ€™ll talk about ways to manage distractions shortly.\n\n### 2. Planning (or lack thereof)\n\n  \n[![planning](http://res.cloudinary.com/adamsingle/image/upload/v1443437639/planning_scjalj.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437639/planning_scjalj.jpg)When working in the cracks, you are going to find youself sitting down to do some work on a project and knowing you only have a couple of hours, or perhaps as little as 30 minutes, to be productive. The next thing you know youâ€™ve spent half that time either thinking about the best thing to work on, or being distracted by other things like emails and Facebook notifications. Both of these are side effects of the same problem. You havenâ€™t planned your time. You must know what you are going to work on before you sit down to do it. In the next couple of chapters of this series Iâ€™ll talk about how you can do that from a higher level. But for the sake of this article, Iâ€™ll just say, know exactly what tasks you plan on tackling before you sit down to do them.\n\nFactor in the amount of time you have. If you have a 30 minute commute, then donâ€™t give yourself the task of writing the dialogue system for your RPG. If thatâ€™s what you want to work on, you can certainly do it, but spend some time breaking that system down into components that are smaller and can be completed and signed off in a relatively short amount of time. In fact, that planning is a perfect task for a commute.\n\nOne advantage to breaking a system or large task down like that is that the pieces become much easier to put down if you do need to. If something turns out to be trickier than you expected (and letâ€™s be honest, it usually does) then you can usually make a couple of quick comments on where you were headed and pick it up again later without it being a panic inducing issue. To refer to the link earlier, the construct you have in your head is simpler and less likely to shatter as soon as you have to drop it.\n\n##Solutions\n### 1. Pomodoro\n\n[![pomodoro](http://res.cloudinary.com/adamsingle/image/upload/v1443437638/pomodoro_glwtxr.jpg)](http://res.cloudinary.com/adamsingle/image/upload/v1443437638/pomodoro_glwtxr.jpg)\n\nPomodoro is a time management technique. There is plenty [written about it online](http://pomodorotechnique.com/) and in books. But to put it in very simple terms, there are two rules. Work without interruption for 25 minutes. Take a break for 5 minutes.\n\n#### Focus\n\nIn the Pomodoro technique, you set yourself a timer for 25 minutes. During that 25 minutes you do not let yourself be interrupted. By that I mean, you flat out ignore them if you can. If you work with other people, make sure your timer is very visible and let them know that while the timer is running, they arenâ€™t to interrupt you except in the case of emergencies (like the building is on fire). For anything less, they can either send you a message or email, or wait till the timer runs out (preferably not by standing behind you watching the clock).\n\nAny notification you receive, be it email, text message, Facebook chat, Google Hangouts, Skype, Viber, Slack, the postman or God Almighty speaking to you directly, is ignored (or noted down quickly on a list) while that timer is running and you focus completely on the task at hand.  \n In an ideal world you would try to break your tasks down into ones that can be completed in 25 minutes. But that is rarely practical, and itâ€™s perfectly fine that a task run over the 25 minutes.\n\n#### Relax\n\nAt the end of each 25 minute block, you take a break. No matter what. Even for a task that is extending into the next Pomodoro. For this time you have some options. Either spend that time actioning some of your interruptions list (maybe respond to that text message), or do something completely unrelated. Relax. Do some small exercise. Stand up and step away from your desk. Stare out the window. Anything except think about what you were working on.\n\n#### Re-evaluate\n\nAt the beginning of the next Pomodoro, take a few minutes to re-evaluate your plan. Were you side tracked during that last pomodoro working on something that isnâ€™t technically necessary for what you are doing right now? Is your original solution or idea still the most viable? Regardless of whether you completed the last task, or are still working on it, spend a few minutes reflecting on what you got done in the last Pomodoro and evaluating the direction to go with in the next Pomodoro.\n\nIf your timeframe to work within is less than an hour, I personally recommend you just treat that as a single Pomodoro. The train ride in, for instance, for me is around 30-40 minutes. I just treat that as a single, focused session and the break comes when I stop and get off the train.\n\nYou have the option, depending on how long your total work session is, to take a long break every third or fourth break. Taking 15 minutes, you can make yourself a coffee. Read a blog post youâ€™ve been meaning to read, send some emails. Whatever you like, just like the 5 minute break.\n\n### Test Driven Development\n\nI would like to mentionÂ [Test Driven Development (TDD)](http://agiledata.org/essays/tdd.html)Â at this point. TDD is a programming technique in which you write unit tests for your code before writing the code to pass that test. You then write the next test and then the code to pass it, making sure all previous tests still pass and so on until you are complete. There are a number of benefits to TDD. Your code becomes more robust and better designed because you design the classes feature requirements when figuring out what tests will be needed, before any of the class code is even started. Itâ€™s less prone to bugs and if any do show up, they are usually cases you forgot to test for. For that reason, it is often easier to debug, as you know most of the places that the bug isnâ€™t. The down side is that it will take longer to write a class and it takes some practice to learn how to write good tests and what to test.\n\n[![tdd_robots](http://res.cloudinary.com/adamsingle/image/upload/v1443437638/tdd_robots_aohh6t.png)](http://res.cloudinary.com/adamsingle/image/upload/v1443437638/tdd_robots_aohh6t.png)\n\nI mention it because I believe itâ€™s an excellent productivity tool despite it adding development time. Iâ€™ve mentioned itâ€™s benefits above, but the one I want to reiterate is improved design. By making a list of the functionality you want to test, you are breaking your already broken down task into an even smaller list of units. Ones that can very easily be recognised as completed as you go. To the point where you can usually get a test runner that will give you a little green tick right there next to the test name. There couldnâ€™t be a clearer representation of a todo list. If you havenâ€™t used TDD before, I highly recommend you learn more about it. Especially readÂ [Test Driven Development by example](http://www.amazon.com/Test-Driven-Development-By-Example/dp/0321146530)Â by Kent Beck. Itâ€™s an easy and enjoyable read and does a fantastic job of using a practical example to take you through the process.\n\n\n## Recap\n\nLetâ€™s quickly cover the main points again:\n\nâ€“Â Â Â Â Take advantage of any time you have thatâ€™s at least half an hour can be dedicated to your work. Itâ€™s all valuable.  \n â€“Â Â Â Â Break down your todo list as small as you can. Treat this break down process as the first task on your list. If you want to be effective at using 30 minute â€œwideâ€ cracks of time in your day, you need to be able to sit down and begin actioning a task instantly. And to do that, you need to know exactly what they will be.  \n â€“Â Â Â Â Embrace the Pomodoro technique.  \n â€“Â Â Â Â Dedicate yourself to a task for 25 minutes, ignoring all interruptions (within reason. If the train is being evacuated, donâ€™t wait for your timer to sound before actioning that).\n\nâ€“Â Â Â Â Always take the 5 minutes. The break away from your current task is as important as the 25 minute focused attention youâ€™re giving it the rest of the time.  \n â€“Â Â Â Â If youâ€™re a programmer, consider at least learning more about TDD. Itâ€™s a valuable tool in itâ€™s own right, but I believe itâ€™s also an effective productivity tool.\n\nIâ€™m hoping that the ideas here inspire you to embrace those smaller times of the day that we so often write off as not usable. Iâ€™m telling you they absolutely are.\n\nHave you ever added up how much time you just let slide past? Commute times, the time between when you sit down to work of an evening and when you start actually working. Try keeping track of it for a week and let me know what you come up with.\n\n</h2solutions>\n\n\n","html":"<h1 id=\"part2cracksintime\">Part 2 â€“ Cracks in time</h1>\n\n<p>InÂ <a href=\"http://adamsingle.com/time-management-sleep/\">part 1</a>Â I talked about how to get the most out of minimal sleep. I discussed a little about my average day and how and where the hours go and why I get minimal sleep in the first place. I also talked about the number of projects I have on the go at any given time.</p>\n\n<h2 id=\"livinginthecracks\">Living in the cracks</h2>\n\n<p>Letâ€™s talk about maximising the efficiency of the small amounts of dev time that can be found in between other time commitments. Last post I spoke of the idea of â€œthe cracksâ€ of time in our day. For me, a lot of my day is accounted for before I even think about things like running my own business. Thereâ€™s full time work and the commute to and from it. There are the kids and getting them ready for day care in the mornings and bed at night. Thereâ€™s making time to talk to my wife, sometimes just about whatâ€™s on TV or something that we read about that day. For anyone with a partner, this is critical. If you want to fit being an indie around having a family and full time job, you must build in time for them. That time is not the flexible kind. Thatâ€™s part of what you are fitting the dev work around. So the cracks for my day are the times that fall in between all that. Which is usually the commute on the train in to work, which is where Iâ€™m writing this right now, my lunch hour, though today that is given over to a meeting of organisers for the Game Technology and Game Development Brisbane meet ups. The commute home. And maybe, a couple of hours between getting the important night routine things done and going to bed. All up, I might be able to find 4 hours, if Iâ€™m lucky, scattered around the day. On the weekends, itâ€™s often less. I dedicate most of that time to being with my family.</p>\n\n<h2 id=\"identifyingthetraps\">Identifying the traps</h2>\n\n<h3 id=\"1distractions\">1. Distractions</h3>\n\n<p>Any programmer will tell you, a continuous block of time is way more efficient than a shattered one. There is an excellent description on why programmers seem to get way more put out by interruptions than seems fair in a post calledÂ <em>Why Programmers Work At Night</em>Â which you canÂ <a href=\"http://swizec.com/blog/why-programmers-work-at-night/swizec/3198\">read here</a>. Thatâ€™s darn accurate. Attempting to put down a half coded thought to pick up again later can be very frustrating. Sometimes you can feel your train of thought crumbling the second someone starts talking to you. Or in my case, as the train voice over says the next station is my station and I have to quickly save and pack up my mini â€œoffice-in-a-lapâ€ before the train stops. Weâ€™ll talk about ways to manage distractions shortly.</p>\n\n<h3 id=\"2planningorlackthereof\">2. Planning (or lack thereof)</h3>\n\n<p><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437639/planning_scjalj.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437639/planning_scjalj.jpg\" alt=\"planning\" title=\"\" /></a>When working in the cracks, you are going to find youself sitting down to do some work on a project and knowing you only have a couple of hours, or perhaps as little as 30 minutes, to be productive. The next thing you know youâ€™ve spent half that time either thinking about the best thing to work on, or being distracted by other things like emails and Facebook notifications. Both of these are side effects of the same problem. You havenâ€™t planned your time. You must know what you are going to work on before you sit down to do it. In the next couple of chapters of this series Iâ€™ll talk about how you can do that from a higher level. But for the sake of this article, Iâ€™ll just say, know exactly what tasks you plan on tackling before you sit down to do them.</p>\n\n<p>Factor in the amount of time you have. If you have a 30 minute commute, then donâ€™t give yourself the task of writing the dialogue system for your RPG. If thatâ€™s what you want to work on, you can certainly do it, but spend some time breaking that system down into components that are smaller and can be completed and signed off in a relatively short amount of time. In fact, that planning is a perfect task for a commute.</p>\n\n<p>One advantage to breaking a system or large task down like that is that the pieces become much easier to put down if you do need to. If something turns out to be trickier than you expected (and letâ€™s be honest, it usually does) then you can usually make a couple of quick comments on where you were headed and pick it up again later without it being a panic inducing issue. To refer to the link earlier, the construct you have in your head is simpler and less likely to shatter as soon as you have to drop it.</p>\n\n<h2 id=\"solutions\">Solutions</h2>\n\n<h3 id=\"1pomodoro\">1. Pomodoro</h3>\n\n<p><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437638/pomodoro_glwtxr.jpg\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437638/pomodoro_glwtxr.jpg\" alt=\"pomodoro\" title=\"\" /></a></p>\n\n<p>Pomodoro is a time management technique. There is plenty <a href=\"http://pomodorotechnique.com/\">written about it online</a> and in books. But to put it in very simple terms, there are two rules. Work without interruption for 25 minutes. Take a break for 5 minutes.</p>\n\n<h4 id=\"focus\">Focus</h4>\n\n<p>In the Pomodoro technique, you set yourself a timer for 25 minutes. During that 25 minutes you do not let yourself be interrupted. By that I mean, you flat out ignore them if you can. If you work with other people, make sure your timer is very visible and let them know that while the timer is running, they arenâ€™t to interrupt you except in the case of emergencies (like the building is on fire). For anything less, they can either send you a message or email, or wait till the timer runs out (preferably not by standing behind you watching the clock).</p>\n\n<p>Any notification you receive, be it email, text message, Facebook chat, Google Hangouts, Skype, Viber, Slack, the postman or God Almighty speaking to you directly, is ignored (or noted down quickly on a list) while that timer is running and you focus completely on the task at hand. <br />\n In an ideal world you would try to break your tasks down into ones that can be completed in 25 minutes. But that is rarely practical, and itâ€™s perfectly fine that a task run over the 25 minutes.</p>\n\n<h4 id=\"relax\">Relax</h4>\n\n<p>At the end of each 25 minute block, you take a break. No matter what. Even for a task that is extending into the next Pomodoro. For this time you have some options. Either spend that time actioning some of your interruptions list (maybe respond to that text message), or do something completely unrelated. Relax. Do some small exercise. Stand up and step away from your desk. Stare out the window. Anything except think about what you were working on.</p>\n\n<h4 id=\"reevaluate\">Re-evaluate</h4>\n\n<p>At the beginning of the next Pomodoro, take a few minutes to re-evaluate your plan. Were you side tracked during that last pomodoro working on something that isnâ€™t technically necessary for what you are doing right now? Is your original solution or idea still the most viable? Regardless of whether you completed the last task, or are still working on it, spend a few minutes reflecting on what you got done in the last Pomodoro and evaluating the direction to go with in the next Pomodoro.</p>\n\n<p>If your timeframe to work within is less than an hour, I personally recommend you just treat that as a single Pomodoro. The train ride in, for instance, for me is around 30-40 minutes. I just treat that as a single, focused session and the break comes when I stop and get off the train.</p>\n\n<p>You have the option, depending on how long your total work session is, to take a long break every third or fourth break. Taking 15 minutes, you can make yourself a coffee. Read a blog post youâ€™ve been meaning to read, send some emails. Whatever you like, just like the 5 minute break.</p>\n\n<h3 id=\"testdrivendevelopment\">Test Driven Development</h3>\n\n<p>I would like to mentionÂ <a href=\"http://agiledata.org/essays/tdd.html\">Test Driven Development (TDD)</a>Â at this point. TDD is a programming technique in which you write unit tests for your code before writing the code to pass that test. You then write the next test and then the code to pass it, making sure all previous tests still pass and so on until you are complete. There are a number of benefits to TDD. Your code becomes more robust and better designed because you design the classes feature requirements when figuring out what tests will be needed, before any of the class code is even started. Itâ€™s less prone to bugs and if any do show up, they are usually cases you forgot to test for. For that reason, it is often easier to debug, as you know most of the places that the bug isnâ€™t. The down side is that it will take longer to write a class and it takes some practice to learn how to write good tests and what to test.</p>\n\n<p><a href=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437638/tdd_robots_aohh6t.png\"><img src=\"http://res.cloudinary.com/adamsingle/image/upload/v1443437638/tdd_robots_aohh6t.png\" alt=\"tdd_robots\" title=\"\" /></a></p>\n\n<p>I mention it because I believe itâ€™s an excellent productivity tool despite it adding development time. Iâ€™ve mentioned itâ€™s benefits above, but the one I want to reiterate is improved design. By making a list of the functionality you want to test, you are breaking your already broken down task into an even smaller list of units. Ones that can very easily be recognised as completed as you go. To the point where you can usually get a test runner that will give you a little green tick right there next to the test name. There couldnâ€™t be a clearer representation of a todo list. If you havenâ€™t used TDD before, I highly recommend you learn more about it. Especially readÂ <a href=\"http://www.amazon.com/Test-Driven-Development-By-Example/dp/0321146530\">Test Driven Development by example</a>Â by Kent Beck. Itâ€™s an easy and enjoyable read and does a fantastic job of using a practical example to take you through the process.</p>\n\n<h2 id=\"recap\">Recap</h2>\n\n<p>Letâ€™s quickly cover the main points again:</p>\n\n<p>â€“Â Â Â Â Take advantage of any time you have thatâ€™s at least half an hour can be dedicated to your work. Itâ€™s all valuable. <br />\n â€“Â Â Â Â Break down your todo list as small as you can. Treat this break down process as the first task on your list. If you want to be effective at using 30 minute â€œwideâ€ cracks of time in your day, you need to be able to sit down and begin actioning a task instantly. And to do that, you need to know exactly what they will be. <br />\n â€“Â Â Â Â Embrace the Pomodoro technique. <br />\n â€“Â Â Â Â Dedicate yourself to a task for 25 minutes, ignoring all interruptions (within reason. If the train is being evacuated, donâ€™t wait for your timer to sound before actioning that).</p>\n\n<p>â€“Â Â Â Â Always take the 5 minutes. The break away from your current task is as important as the 25 minute focused attention youâ€™re giving it the rest of the time. <br />\n â€“Â Â Â Â If youâ€™re a programmer, consider at least learning more about TDD. Itâ€™s a valuable tool in itâ€™s own right, but I believe itâ€™s also an effective productivity tool.</p>\n\n<p>Iâ€™m hoping that the ideas here inspire you to embrace those smaller times of the day that we so often write off as not usable. Iâ€™m telling you they absolutely are.</p>\n\n<p>Have you ever added up how much time you just let slide past? Commute times, the time between when you sit down to work of an evening and when you start actually working. Try keeping track of it for a week and let me know what you come up with.</p>\n\n<p></h2solutions></p>","image":"http://res.cloudinary.com/adamsingle/image/upload/v1443437639/cracks_pc0kop.jpg","featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2015-09-28T20:53:59.000Z","created_by":1,"updated_at":"2018-04-11T05:02:19.000Z","updated_by":1,"published_at":"2015-09-29T02:08:00.000Z","published_by":1},{"id":38,"uuid":"f1ed41c0-33e4-4ad5-a03f-4b05d056adf1","title":"Unit testing Unity and UniRX with Zenject and Moq","slug":"unit-testing-in-unity-with-zenject-unirx-and-moq","markdown":"The following article is a tutorial of sorts and will make the most sense if you follow along in Unity.\n\nI recently started working on a new game in my own time. I won't talk much about it right now, as there isn't much to show yet, but I will soon.\n\nFor this game, I was determined to have some solidly tested code. In previous work places I've used [Dependency Injection](https://en.wikipedia.org/wiki/Dependency_injection) and am well aware of the power of [Inversion of Control](https://en.wikipedia.org/wiki/Inversion_of_control), not to mention the benefits it provides when writing unit tests. I've played with the Dependency Injection system [*Zenject*](https://github.com/svermeulen/Zenject) before, but not on anything that went out at production level. Reading the docs, I was delighted to see that *Zenject* has added support for both [*Moq*](https://github.com/Moq/moq4/wiki/Quickstart) and [*UniRX*](https://github.com/neuecc/UniRx) since the last time I used it. This cemented for me that not only would I give *Zenject* a serious crack, but that I would also attempt to use Reactive Extensions (RX) in a game. \n\nI won't go much into what RX is in this post. If you want to know more about it, I highly recommend you check out these videos from [Infallible Code](https://www.youtube.com/watch?v=kFoBvjwzbNA&list=PLKERDLXpXl_gdZ7NAHkAxKf12g3oNjTAc), they are excellent. \n\nI also won't go too much into explaining Zenject and Dependency Injection. Again, check out [Infallible Code](https://www.youtube.com/watch?v=IS2YUIb_w_M&list=PLKERDLXpXl_jNJPY2czQcfPXW4BJaGZc_). \n\n[*Moq*](https://github.com/moq/moq4) is a Mocking framework. It is extremely useful when writing tests, I couldn't imagine trying to write them without mocking. \n\nBasically, I'm assuming if you have clicked on the link to read this blog, you have an idea on at least some of the things mentioned in the title. So let's get straight to the process.\n\n######Versions\nI'm writing this blog using the following versions:\nUnity - 2018.2.0f2\nZenject - 7.2.0\nMoq - 4.7.99\nUniRx - 6.2.1\n######Installation\n\nLet's start with *Zenject*. Inside the *Unity Editor*, open the Asset Store window (Ctrl + 9) and search for *Zenject*. Select Download, and when that's done, Import. This will open an Editor Window showing all the files in the *Zenject* package with another Import button in the bottom right corner. Go ahead and click it.\n\n![](/content/images/2018/08/ImportZenject.PNG)\n\nYou will now find a **Plugins** directory has been added to your project, inside of which is the **Zenject** directory. There's an **Optional Extras** directory and a **Source** directory. You now actually have everything you need to write unit tests with *Zenject* as the TestFramework classes are already in the **Optional Extras** directory. But we don't have *Moq* yet. If you navigate to **Plugins/Zenject/OptionalExtras/TestFramework/Editor** you'll find a zip called **AutoMocking**. \n\nExtract the contents of this zip directly into that **Plugins/Zenject/OptionalExtras/TestFramework/Editor** directory. This will add some scripts and two more zips. *Moq-Net35.zip* and *Moq-Net46.zip*. You need to select one based on the Scripting Runtime Version you have selected in the Player Settings. Unzip Moq-Net35 (again, directly into the **Editor** directory) if you are using .NET 3.5 Equivalent\n![](/content/images/2018/08/net35.PNG)\nOr Moq-Net46 if you are using .NET 4.x Equivalent\n![](/content/images/2018/08/net46.PNG)\n\nI'm going to switch to .NET 4.x. If you also change your project, you'll notice the Editor needs to restart. Go ahead and do that. I'll wait here.\n\nOK. If we open Visual Studio (***Assets->Open C# Project***) you may notice that the Solution Explorer shows many projects in your solution\n![](/content/images/2018/08/SolutionExplorer.PNG)\n\nThis has to do with Unity adding support for Assembly Definition files. *Zenject* has been set up to use them also. So far, I've found them quite painful. I've had issues with trying to get project references to show up in the projects I need them in. So my solution for now is to kill all the *asmdef* files and go back to thye \"old way\". For *Zenject*, these are found in the following places:\n\n- Plugins/Zenject/zenject.asmdef\n- Plugins/Zenject/Source/Editor/Zenject-Editor.asmdef\n- Plugins/Zenject/OptionalExtras/TestFramework/Zenject-TestFramework.asmdef\n- Plugins/Zenject/OptionalExtras/TestFramework/Editor/Zenject-TestFramework-Editor.asmdef\n- Plugins/Zenject/OptionalExtras/MemoryPoolMonitor/Editor/Zenject-PoolMonitor-Editor.asmdef\n\nOnce you delete these files, your Solution Explorer will look like this\n\n![](/content/images/2018/08/SolutionExplorer_NoASMDEF.PNG)\n\nYou will have some compile errors now though, as there are a couple of files in **Plugins/Zenject/OptionalExtras/TestFramework** that need to be in an **Editor** directory for Unity to put them into the `Assembly-CSharp-Editor-firstpass` project that they need to be in to get a reference to the `UnityEngine.TestTools` and `NUnit` namespaces. This was being handled by the asmdef file before now. Simply locate the files \n\n- SceneTestFixture.cs\n- SceneTestFixtureSceneReference.cs\n- ZenjectIntegrationTestFixture.cs\n- ZenjectUnitTestFixture.cs\n\nand drag them into the **Editor** directory that's sitting next to them\n\n![](/content/images/2018/08/CompileErrorSolution.PNG)\n\nNow at this point, I've done this a few times, and each time I get a ton of compile errors in Unity, but not in Visual Studio. Simply shut down Unity and boot up your project again if you're seeing them too and they seem to magically disappear. \n\nWe now have *Zenject* and *Moq* installed and ready to write unit tests with. Let's quickly add in *UniRX* and we can start looking at some code. \n\nTo install it, simply search for it in the Asset Store and import like we did with *Zenject*. You will find that *UniRX* also has some asmdef files. \n\nPlugins/UniRx/Scripts/UniRx.asmdef\nPlugins/UniRx/Async/Unirx.Async.asmdef\nPlugins/UniRx/Async/Editor/UniRx.Async.Editor.asmdef\nPlugins/UniRx/Examples/UniRx.Examples.asmdef\n\nIf you remove these files you'll be back to the two projects in your solution. Keep in mind that these projects are basically Plugins and Plugins/Editor. Once we ad our own code we'll get two more projects. Essentially you can think of those two as Game and Editor. \n\n> As a quick explanation, anything in a directory called **Editor** in your project Unity bundles into a special project in the visual studio solution that has a reference to the UnityEditor assembly and isn't built into your game when you build. **Plugins** is another special directory that is separated out to minimise compile time, and any **Editor** directory in **Plugins** also gets it 's own project that is not built into your game. In this way, when you change any of your code and it has to be recompiled by Unity, it doesn't bother compiling the **Plugins** or **Plugins/Editor** code unless they also had code changes made. The use of Assembly Definitions to create more projects in the solution is an extension of this. You can limit parts of your code from having reference access to others as well as minimise recompile times by having smaller projects to compile. But so far I've found this more complication than it's worth. \n\n#####Laying the foundation\nLet's take this one step at a time. Let's set up some foundation code first, ready to test. Before that, let's get some folder structure in place. Create a new directory in **Assets** called **Code**. Inside that make one called **Editor** and in that, one called **Tests**.\n\n![](/content/images/2018/08/FolderStructure.PNG)\n\nWe put the tests in an **Editor** directory so that Unity doesn't include them in our build. For this post we're only interested in writing Editor tests, not Playmode tests. This means we won't, at any point, run the game in the editor. We'll just run the tests from the Test Runner. We will also need a reference to the UnityEngine.TestTools and NUnit, neither of which are referenced by Unity in Assembly-CSharp I believe, so being in an **Editor** directory gives us this.\n\nInside the **Code** directory, create a new script. Let's call it `MessageServiceManager`. What we're going to do is emulate a central class that communicates with a third party messaging API of some sort. This won't be a `MonoBehaviour`, just a straight C# class. Let's pretend internally this class has an API and a Client that it needs to talk to that are a part of the third party message service we plan on using. For the sake of an interesting test, let us say the Client needs to be initialised with the API. So let's add a reference to an `IMessageClient` and `IMessageAPI` to our `MessageServiceManager`.\n\n![](/content/images/2018/08/MessageService1.PNG)\n\nAs expected, our solution has no idea what these two things are. We can create them from this file however, using Visual Studio's code generation. \n>Either right click on `IMessageClient` -> select *Quick Actions and Refactoring* -> *Generate Interface 'IMessageClient' in new File*\n\nOR\n>with the caret on `IMessageClient` hold Ctrl and press . to bring up the quick actions menu and select *Generate Interface 'IMessageClient' in new file*\n\n![](/content/images/2018/08/MessageService2.png)\n\nDo the same for `IMessageAPI`. \nFor now, we don't need code in there. We can generate that in a similar fashion as we write our `MessageServiceManager` class.\n\nThis `MessageServiceManager` is intended to be a singleton that can be injected into our other classes for handling messages. What those classes are aren't important, other than to think about how they might want to use this class. At the very least they will need a way to connect to something and a way to get messages. Let's add our connect method.\n\n`public void Connect(string Channel)\n{\n}`\n\nNotice we take in a string for the channel we want to connect to. We'll assume for simplicity, that we're only able to connect to a single channel at a time. In reality, a use case for something like this might be one for each channel you want to connect to, and the class that uses these might collate all the messages from all the channels into a single UI feed. In that case you wouldn't make it a singleton and it's creation may come from a *Zenject* factory.\n\nWe almost have enough to write our first test. We're just missing one thing for our scenario. The dependency injection. We need a way to get the `IMessageClient` and `IMessageAPI` into this class. That's what *Zenject* does for us. We're using interfaces so that we can use *Moq* in our tests. We'll see why soon. \n\nTo set these up for *Zenject* to know they need to be injected, we simply use the `[Inject]` attribute above our two fields. This will again throw us an error as this class has no idea what the Inject attribute is. It's a part of the *Zenject* namespace.\n![](/content/images/2018/08/MessageService3.png)\n To resolve this, we need to add the appropriate using statement, and the fastest way to do that is to again use the Visual Studio quick actions menu. With the caret on the Inject word, press *Ctrl+.* and select `using Zenject`. This will add the using statement to the top of the file and remove the red squiggly line.\n\n![](/content/images/2018/08/MessageService2-1.png)\n\n>It's worth noting at this point that we haven't actually wired Zenject or our Unity project/scene to know how to inject these, and we don't need to to write unit tests. We will set up something very similar in our test, but actually setting up Zenject in your scene is a topic for another day or Infallible Code's videos linked in the introduction.\n\nThat's our foundation complete. Let's write some tests.\n\n#####First test\nNow we need a test class. In Code/Editor/Tests add a new script called `MessageServiceManagerTests.cs`. \n>By now you'll see that we have the other two projects I mentioned earlier. The scripts we added in the Code directory caused Unity to create the `Assembly-CSharp` project and the test script we just created (which you'll notice is contained within a directory named Editor) caused the creation of `Assembly-CSharp-Editor`. \n\nOpen the test script. If you made it from within Unity, the class will inherit from `MonoBehaviour`, if you made it directly from Visual Studio, it won't inherit from anything. In Either case, we need to change it so that it inherits from `ZenjectUnitTestFixture`. Again, this will have the red squiggly and need the Zenject using statement added. If Unity made your script, remove the Start and Update methods also.\n\nNUnit is the testing framework that Unity uses to run unit tests in the editor. It uses attributes to find classes that are test classes, and the methods within it that are tests to run. So we need to add the `[TestFixture]` attribute to the class itself to start with. This will need the `NUnit.Framework` using statement. We have now told NUnit that there is a class here that contains tests, and the test runner in Unity will go looking in here for some. But currently, it won't find anything, so let's add one that does nothing. For the test runner to recognise a method as a test, it must be decorated with the `[Test]` attribute.\n\n![](/content/images/2018/08/MessageServiceTest1.PNG)\n\nI have a little personal rule when writing a test. I always try to write it in a way I expect to fail first and make sure it does. Early on in my learning for writing unit tests I had a few situations with false positives, usually to do with how the tests were written. So make sure you can make a test fail first. For our test case here we just want to see the flow into the Editor, so let's do the simplest of fails.\n\n![](/content/images/2018/08/MessageServiceTest2.PNG)\n\nThere is no way this test can pass. We're asking the test to only pass when the statement `false` is true. \n\nReturn to the Unity Editor now, and open the Test Runner. It's found in the Window menu. In Unity 2018, it's under the General sub menu. Dock this window somewhere. It should look something like this\n![](/content/images/2018/08/TestRunner1.PNG)\nYou'll see that there are a couple of Zenject tests here also. These are only separated from yours because they are in a different assembly, the Plugins/Editor one. If they were in the same one as yours, they would be separated by Class name only. \n>You can optionally add a category name to the TestFixture attribute like this: `[TestFixture(Category = \"MyTestCategory\")]`. This will allow you to filter the Test Runner window from the drop down to the right of the search bar. It should currently say 'nothing'.\n\nYou can either delete the file **Plugins/Zenject/OptionalExtras/TestFramework/Editor/TestAutoMocking.cs** to completely remove the tests, or collapse the Assembly-CSharp-Editor-firstpass.dll portion of the Test Runner. \n\nPress 'Run All' in the top left to run all tests. \n>You can right click on any part of the tree structure in the Test Runner to just run the tests from there down.\n\nYou should find that the Zenject example tests pass (if you didn't delete them) and yours failed.\n![](/content/images/2018/08/TestRunner2.PNG)\n\nBefore we celebrate, let's quickly change our test to pass in the most stupid way. Just to test our workflow is solid. Modify your test to `Assert.IsTrue(true)`, come back to Unity, either 'Run All' or 'Rerun Failed' and watch everything turn green. The more you write tests, the more you'll grow to love all those green ticks. And curse those little red circles!\n\nGreat! Welcome to tested code!\n\n#####Write a real test\nSo we have a test, but it doesn't really test anything. So let's write a real test. We want to test that when the `MessageServiceManager` has `Connect()` called on it, it calls `Connect()` on the `IMessageAPI`. So let's write a test for that. \n\n>There are a number of test naming conventions out there. Ultimately you can choose whatever you like, but personally, I like to just use the feature being tested with lowercase and underscores for readability and differentiation from non-test methods. I try to word it in a way that when read in the test runner, the green tick or red circle make sense. \n\n![](/content/images/2018/08/MessageServiceTest3.PNG)\n\nThe first thing we'll do is write out our test, even though the things we're referencing don't exist yet. \n![](/content/images/2018/08/MessageServiceTest4.PNG)\n\nnow at the top of the class, let's add a field for our `MessageServiceManager` called `_testObject` this is another naming convention I like. It makes it very clear in my tests what's being tested. \n\nWe also need to create a mock of our `IMessageAPI` interface. This is where *Moq* comes in. *Moq* essentially creates an inherited class, adding functionality to it that we can use. We can mock out method return values, verify methods are called (including things like verifying with certain arguments as we'll see and verifying a specific number of times). This is why we need to use interfaces. If we were using concrete classes, *Moq* could only create mock versions of things labelled as virtual. This isn't an issue when using interfaces. To create a mock, we simple declare a member of type `Mock<T>`. In our case\n\n`Mock<IMessageAPI> _mockApi;`\n\nThis will require `using Moq`.\n\n>You may find that your class has an error under `IMessageAPI`. This is most likely due to Visual Studio generating the interface with the accessibility keyword `internal` which essentially means \"public inside this assembly\" but it's not in the editor assembly that our test is. So change `internal` to `public` in `IMessageAPI.cs` \n\nWe now only have one error left. There should be a red squiggly under the `Connect()` in `_mockApi.Verify(m => m.Connect());`. If you hover over it, you'll see the error states something along the lines of *IMessageAPI does not contain a definition for 'Connect'* which is 100% correct. Our `IMessageAPI` class is an empty interface. Again, we can add this with the *Quick Actions* menu. Ctrl+. on it and select the top option, which should be *Generate Method 'IMessageAPI.Connect'*. Our error goes away, and if you press F12 on the Connect call, it will take you to the `IMessageAPI` file where you can see it.\n\nSo what does our test do exactly? It calls Connect on the concrete class that we're testing `MessageServiceManager`. Notice I'm passing in an empty string. That's fine, because we're not testing how we handle the channel variable yet. Then we are using a Moq method called Verify() on our Mock `IMessageAPI`. Verify will fail an Assertion if the method we call in the lambda argument hasn't been called. There are 12 overloads for Verify. But usually you'll just use this default one. The other common one includes a Times instance. This is a class in Moq used for defining various call count conditions. Such as `Times.AtLeast(int count)`, `Times.NoMoreThan(int count)`, `Times.AtMost(int count)`, `Times.Never()`, `Times.Exactly(int count_)` and `Times.Between(int min, int max, Range RangeKind)`. As you can see, this is quite flexible.\n\nYou may have noticed a couple of issues here. \n1. `_testObject` and `_mockApi` are null\nand\n2. `_mockApi` isn't injected into `_testObject` in any way\n\nThe first one is easy enough to solve. At the top of our test we initialise them.\n\n![](/content/images/2018/08/MessageServiceTest5.PNG)\n\nnow *Zenject*. Hopefully you've either used *Zenject* before, or you watched the video linked at the start of this post and you understand that *Zenject* uses installers. An installer has a reference to a Container, and the Container is responsible for maintaining the bindings that are looked up for dependency injection. Containers and installers allow for different Contexts. Meaning bindings can be different in different situations, such as scenes. By inheriting from `ZenjectUnitTestFixture` we get access to a Container set up just for this class. In fact, you can look at the code for `ZenjectUnitTestFixture`. You'll see it's literally just new'ing up a `DiContainer` with a closed context. In this way we can feed it our mock versions to inject into the concrete class we're testing. This means that at run time, when we use the game installer which has bound concrete classes to `IMessageAPI` and `IMessageClient`, those will be injected instead. And since we tested our concrete `MessageServiceManager`'s interaction with the `IMessageAPI` and `IMessageClient`, we can trust our class will behave exactly the same way in production as it did in our tests. Neat huh?\n>You may have notices another advantage here. Since we have no concrete class for IMessageAPI and IMessageClient yet, and in fact we have no content in those interfaces, we are building them from the tested functionality of MessageServiceManager. More than that, we are building the content of MessageServiceManager from the tests we write a little bit at a time. This is the basis of Test Driven Development or TDD. If you'd like ot know more about that, feel free to check out an article I wrote with [Ash Davis](http://www.what-could-possibly-go-wrong.com/) on [Testing for Game Development](https://www.gamasutra.com/blogs/AshDavis/20160726/277825/Testing_for_Game_Development.php)\n\nOne caveat to Dependency Injection is that you can't simply new up an object that has dependencies. You have to use the system to get new instances of the object so that it can fulfil the dependencies.\n\nThis means we need to remove the line where we new up the _testObject and instead put the `[Inject]` attribute on it. This way we are telling our DiContainer to inject it into this class. But if it's a dependency for this test class, how do we get the container to fulfil it? Luckily, we can do that with the following line\n`Container.Inject(this);`\n![](/content/images/2018/08/MessageServiceTest6.PNG)\n\n\nThis straight up tells the container that you have a reference to, in this case the one created in `ZenjectUnitTestFixture`, to fulfil any dependencies in the class passed in. Here that's this test class.\nPerfect, but we're missing something. If we try to run this test it will fail. In the Test Runner, you can see the reason that the test failed. This is always good to look at. Sometimes the reason is something you didn't think of (another great advantage to testing, find the bugs before they're bugs). In this case, the fail message says \n`\"Zenject.ZenjectException: Unable to resolve type 'MessageServiceManager' while building object with type 'MessageServiceManagerTest\"`\n\nThis is telling us that when trying to fullfil the dependencies of `MessageServiceManagerTest` it failed to resolve the `[Inject]` attribute on `MessageServiceManager` because it didn't know how to make one of those. \nFair call, our DiContainer is empty. We haven't bound anything to it. Pretty simple, let's add `Container.Bind<MessageServiceManager>().AsSingle();`\nwe could also call `AsTransient()` instead of `AsSingle()` and this would give a new instance each time a class requested it as a dependency. Make sure you put this before calling `Inject()`\n\n![](/content/images/2018/08/MessageServiceTest7.PNG)\n\nNow our test still doesn't pass but our fail message has changed. Now *Zenject* is unable to resolve `IMessageClient`. If you look at our `MessageServiceManager` class, you'll see that the top most injected field is `IMessageClient`, so it's the first to fail. We can assume that once fixed, `IMessageAPI` will then fail, so let's just fix both now. \n\nWe need to add a `Mock<IMessageClient>` to our test, and then add them both to the `DiContainer`. \n\n![](/content/images/2018/08/MessageServiceTest8.PNG)\n\nThe binding we've used here says take an instance of a type and bind it to an interface such that any time a class asks for that interface to be injected, you provide it with this given instance. Specifically, we're saying when you Inject this class, and attempt to fulfil the dependencies of `MessageServiceManager` it's going to want an `IMessageAPI`. When it asks for that, give it `_mockApi.Object`. `Object` is a reference to the wrapped type. Since `Mock<IMessageAPI>` is obviously going to be of type `Mock<IMessageAPI>` while the `MessageServiceManager` needs an `IMessageAPI` object. The same for the binding on `IMessageClient`.\n\nLet's run our test again. We have a new fail message. One that is closer to a real fail. \n`Moq.MockException : \nExpected invocation on the mock at least once, but was never performed: m => m.Connect()`\n\nThat's nice and readable. Calling `Verify()` tells the test runner that we expect the method Connect() to have been called on our mock api at least once, but it has not been called at all. Great! this is the meat of the test. This is what we want to ensure happens. So let's fix it. \n\nOpen `MessageServiceManager` and inside the `Connect()` method, add `_api.Connect();`\nSave, jump back to Unity, rerun your tests and bask in the light of green ticks.\n\n#####Testing method call with argument\nOK, let's get cracking on our next test. Let's test that when we call `Connect()` on our `MessageServiceManager` we call Connect on our `IMessageClient` with the correct arguments. \nLet's add a new test called `calling_connect_calls_connect_on_client_with_api_and_channel`. In my book, you can never be too verbose with test method names. You're never going to have to call them, so you don't have to worry about the awkwardness of typing that in code. You just have to worry about readibility in the test runner. Go ahead and make this method, don't forget the `[Test]` attribute. If you've thought ahead to writing the test, you'll quickly realise you need to set up all those bindings again. They only existed in the scope of the last test we wrote. We need everything to be fresh for this test. We could rewrite that at the start of each test. But we're programmers, we're better than that. So we could extract it all to a method, maybe called `Init()` or `Initialise()`. Let's do that. Extract out the initialisation code from `calling_connect_calls_connecton_on_api()` to a method called `Init()`\n\nYou can again use Visual Studio's Quick Actions menu. Highlight the code, Ctrl+. and select Extract Method\n![](/content/images/2018/08/MessageServiceTest9.png)\nYou'll now see an `Init()` method. And where the code was, is now a call to it.\n![](/content/images/2018/08/MessageServiceTest10.PNG)\n\nBut this still means we have to remember to call Init() at the start of each test. NUnit has thought of this for us, and can call an initialisation method before every test if there is one decorated with the `[SetUp]` attribute. So add that to `Init()` and remove the call from `calling_connect_calls_connect_on_api()`\n\n> IMPORTANT: there's a good chance the auto generated code made the method private. If that's the case, `[SetUp]` will not get called and in fact the test will not be run. The test runner will not give any log, warning or error about it. It will just show your tests as having not run. Make sure your `[SetUp]` method is **public**!\n\n![](/content/images/2018/08/MessageServiceTest11-1.PNG)\n\nNow we don't need to call that every time. We can just write the meat of the next test. We want to verify that when `Connect()` is called on `MessageServiceManager`, `Connect()` is called on the `IMessageClient` with `channelName` and the API object that was injected, in this case our mock one. To do that, we define the variable in the `.Verify()` method called in the test.\n\n![](/content/images/2018/08/MessageServiceTest12.PNG)\n \nLike before, with our `IMessageAPI`, we don't have a Connect method defined in our `IMessageClient`. Generate it like previously using the Quick Options. Make sure you switch over to `IMessageClient` and check what the auto generation created. Sometimes Visual Studio doesn't get it right. Especially with naming, so make sure your names are good argument names. `@object` is not great. Change it to `api` or something similar.\n\nNow we can run our test and watch it fail. \n\nSo to pass the test we need to call Connect on our IMessageClient in our `MessageServiceManager.Connect()` method and pass in the right values. Pretty straight forward, below `_api.Connect();` call `_client.Connect(_api, channel);`. Our test should now pass.\n\n#####Verifying method call order\nWhat if we need to be sure that Connect is called on the API before it's called on Client for whatever reason? We can test for that. This way, if another developer comes along one day, does some refactoring in this class, and without realising the implications, swaps the order of those calls, our test will immediately break and we'll know what caused the problem we're no doubt about to experience in our latest builds. There is a built in way to test if methods on a particular mock are called in a sequence. But not between two mocks. The easiest way I've found for this is to use the `Callback()` method and booleans. \n\nIn this test, we want a boolean to show that the api method has been called, and another to show that the client method was called after. This is the one we'll assert on. `Callback()` can be chained on the back of `Setup()` which is another Mock method we haven't used yet. It's more commonly used to define a known return value, but you can use `Callback()` to define an Action that will run after the method is called on a mock. You write it like this\n\n`mockObject.Setup(m => m.MethodToCall()).Callback(() => dosomething);`\n\nWith fluent API's like Moq, I like to put each method on it's own line for readability. So we'll add a boolean `apiConnectCalled` and `callOrderCorrect`. Then we'll set up `_mockApi` to set `apiConnectCalled` to true when it's `Connect()` method is called.\n\n![](/content/images/2018/08/MessageServiceTest13.PNG)\n\nNow we can mock out the mock client to do something similar, but it sets the value of `callOrderCorrect` to equal `apiConnectCalled`. This way, if `IMessageClient.Connect()` is called before `IMessageAPI.Connect()` then `callOrderCorrect` will be false. Another thing we can do when calling mock methods but don't care about the specifics of the arguments is use the `It` class. We can write `It.IsAny<string>()` and the mock method (Verify, SetUp or whatever) will not care what's passed into the mock. This saves making dummy values just to pass in. \n![](/content/images/2018/09/MessageServiceTest15.PNG)\nOnce our callbacks are setup, we can call `_testObject.Connect()` with an empty string and `Assert` that `callOrderCorrect` is true. Now, since we have already written the code in `MessageServiceManager` in this order, we would expect our test to pass. So let's try and keep to our rule of failing a test first, and quickly swap the order of the calls. Now when we run this test, we would expect it to fail. \n\nOnce you've verified that the test does indeed fail, swap them back and smile at the screenfull of green ticks. Maybe take a break, grab a coffee and just sit back and look at them for a while. A board full of passing tests is a bloody satisfying sight to behold.\n\n#####Event testing\nThere are many more tests that a service like this would have. Like connection error handling. Let's add an `OnConnectionError` event to `IMessageClient` and test that our `MessageServiceManager` throws an exception. This isn't the best handling, but demonstrates a few more features nicely. \n\nFirst, let's add the event to `IMessageClient`.\n![](/content/images/2018/08/IMessageClient_Event.PNG)\nNotice that we had to add the System using statemnt. \n\nThis is a fairly short test to write. Let's call it `exception_thrown_when_client_failed_connection_event_fired`. The trick is we need to call some code that we know will throw an exception. Normally that would halt execution. NUnit allows us to wrap the code that we expect to throw in an Assert. Assert is generic and needs to be told what type of exception to expect. For simplicity, we will just use the basic Exception class, but you could write tests to ensure that specific exceptions are being thrown if you wanted to. \n\n`Assert.Throws<Exception>(() => {});`\n\nNow the code that we want to cause an exception is when the event on the mock is thrown. We can use the `Raise()` method to cause that. We don't need to worry about the sender or the EventArgs in this scenario, but again, you could mock out an event with specific args passed into it for testing how that's handled. Raise looks like this\n\n`_mockClient.Raise(m => m.OnConnectionFailedEvent += null, new EventArgs());`\n\nso our whole test is pretty simple looking.\n![](/content/images/2018/08/MessageServiceTest14.PNG)\n\nWhen we run it, it should fail. The fail message says that the Assert expected a System.Exception but got null. This makes sense. We aren't even handling the event in our MessageServiceManager, let alone throwing anything yet.\n\nSo let's add a handler. Seems pretty simple, but we probably shouldn't do it in the Connect method. What if that method is called more than once? we'll end up leaking memory by adding listeners to the event over and over. We have two options here. The easiest one, is to add a new method to `MessageServiceManager` called Init and mark it with the `[Inject]` attribute in the same way we marked the field memebers we wanted injected. This is called *method injection*. Any arguments passed into this method will attempt to be filled out by *Zenject* and fail if it can't do it. More importantly, it happens after all other types of injection, and is perfect for initialisation logic. This is what we'll do. The other option would be to change the `IMessageClient` to be injected using *constructor injection*. In this case we would remove the `[Inject]` attribute from the field memeber, add a constructor that took an `IMessageClient` as an argument, and assign the passed in one to the field member. Like this\n\n`public void MessageServiceManager(IMessageClient client)\n{\n    _client = client;\n}`\n\nKeep in mind, constructor injection isn't an option on MonoBehaviours as you can't access their constructors.\n\nSo let's add our initialisation method and subscribe to the event in there\n\n![](/content/images/2018/08/IMessageClient_Initialise.PNG)\n\nAt this point our test will still fail as we haven't thrown our exception yet. All we need to do is throw it in our event handler.\n![](/content/images/2018/09/MessageServiceTest16.PNG)\n\nAnd now we have a green light. \n\n#####RX Testing\nLast test. I know this has been a long post, thanks for sticking with me. The one bit of tech I haven't touched on yet is RX. As I mentioned in the introduction, if you don't know what Reactive Extensions are, or specifically UniRX, check out Infallible Code's videos. We're going to look at a simple example. We're going to generate a stream of messages that are coming from an event in the Client.\n\nFirst we'll write our test.\n![](/content/images/2018/09/MessageServiceTest17.PNG)\n\nLet's walk through this. We are establishing a boolean to know if our stream has emmitted a value. We subscribe here in the test to the RX Observable called `MessageReceivedObservable` on our test object; the `MessageServiceManager`. Notice this doesn't exist yet. That's OK, we'll generate it shortly. We then mock out our mockClient to raise an event called `OnMessageReceivedEvent` (which doesn't exist) which uses a delegate that takes a child class of `EventArgs` called `OnMessageReceivedArgs` (which also doesn't exist).\n\nSo let's generate some code. First the event. Ctrl+. on the `OnMessageReceivedEvent`. You're only real option is to generate a property. This is the best VS can do when guessing what this is. Just accept that, and then F12 on it and we'll fix it. You'll see it's guessed you wanted an int property. Delete the int type, and the get and set and replace it with our event code like so.\n![](/content/images/2018/09/MessageServiceTest18.PNG)\n![](/content/images/2018/09/MessageServiceTest19.PNG)\n\nNow let's generate our event args, again using Ctrl+. The top option should be to generate the class in a new file. If you want to take your tests further, you can flesh out this class to contain a message string and test the contents are propagated into the stream properly if you like. For the purpose of this post, I won't go any further than this basic test though.\n\nWe now need to generate our `MessageReceivedObservable`. Back in our test we'll use Ctrl+. on it and Generate Variable. You'll notice however that the best VS can do is give you an `object` property. So we'll redo this one too. The way I normally handle these types of RX streams, is to have a publicly exposed `IObservable`. This has a very limited amount of functionality. This way any external classes can basically just subscribe to it. Internally however, this will most likely be linked to a `Subject`. \n\nChange our `object` property to an `IObservable<OnMessageReceivedArgs>` property (which will require the `System` using statement). This is the object that external classes will use to subscribe to, to receive events as they are pushed into the stream. This is what we subscribe to in our test to set the boolean to true to know that our code is working. We don't want a setter on this, so let's remove that from here and flesh out the getter to return a variable called `_messageReceivedSubject`. Now we need to create this, so add `private Subject<OnMessageReceivedArgs> _messageReceivedSubject;`\n![](/content/images/2018/09/MessageServiceTest20.PNG)\n\nNow we just need to hook up our subject to the event that comes from `IMessageClient`. Up till now our test should still have been failing nicely. Now this last step should flick it to a pass. First create and hook up the handler next to the one we made for handling the error message. \n\nYou can use a little code generation short cut by typeing `_client.OnMessageReceivedEvent += ` and then pressing `tab` twice. This will auto create the handler method, with the correct arguments and put you in a position to type a new name if you don't like the one VS created for you. Once you're happy with the name, press enter. VS will automatically add a line in your new method throwing a not implemented exception so that if you do this and forget to fill out the method, your program will throw a clear error that that's the case. We'll replace that throw with our code, converting the event to a new event in our stream.\n\nThis is quite simple, we take our subject and call `OnNext()` on it, passing in the event args that `IMessageClient` just gave us. This is the main reason why I use the `public IObservable` abstraction in my classes. `OnNext()` doesn't exist in `IObservable`, so external classes can't mess with this stream in any way, that can literally just observe and react. \n\n![](/content/images/2018/09/MessageServiceTest22.PNG)\n\nAt this point you may notice a compile error that I missed. In our test class, we're being told that we `\"cannot convert lambda expression to type 'IObservable<OnMessageReceivedArgs>' because it's not a delegate type\"`. This is because although `IObservable` exists in the `System` namespace, UniRX provides some handy extensions that allow us to use lambdas here. This error is solved by simply adding the `using UniRX` line to the top of our test class.\n\nNow back in Unity our test should still be failing, but the error message should make it super clear why. We have a null reference exception. We've all seen them. In this case it's on the line in our test where we are trying to subscribe to our stream. I'll point out at this moment that you can debug your tests like any other code. Place a break point on that line, attach the debugger to unity and run the test. It will break and you can step through the code. If you do that, you'll reliase that our `Subject` `_messageReceivedSubject` is `null`. Fair call, we never initialised it. We can do that in the constructor or inline with it's declaration. That's a personal preference that is entirely up to you. But for this post I'll place it inline since we haven't needed to make a constructor for any other reason. So mine now looks like this\n\n![](/content/images/2018/09/MessageServiceTest21.PNG)\n\nReturn to *Unity*, run your test and you should see that beautiful green tick. \n\n![](/content/images/2018/09/CompletedTests.PNG)\n\n#####Conclusion\nThis post barely scratches the surface of unit testing, but it has hopefully given you the tools to create them in *Unity* using some great technology like *UniRX* and *Zenject*. I hope I've managed to display the power of unit testing as a development tool, especially when used to facilitate code design, and not just as an afterthought. \nI've also attempted to display the power of mocking libraries like Moq and how they can be used with Dependency Injection to decouple your code and test it for peace of mind. There are many more unit tests a class like our `MessageServiceManager` would need to be covered completely, and there are also other forms of testing than unit testing, such as integration testing, UI testing and scene testing (a type of *Unity* specific integration runtime test) to name a few. *Zenject* has some ability to facilitate both integration and scene testing, and they have some [documentation](https://github.com/svermeulen/Zenject/blob/master/Documentation/WritingAutomatedTests.md) on that. UI testing is a trickier subject. There is a library I found recently designed for *Unity*, and I'll be experimenting with that on my game. So I suspect there'll be another post on here in the near future on that. Hopefully not as long as this one was. \n\nI'll put up some links again, since you've managed to stick through this article. \nFor some insight on [Zenject](https://github.com/svermeulen/Zenject) check out [Infallible Code](https://www.youtube.com/watch?v=IS2YUIb_w_M&list=PLKERDLXpXl_jNJPY2czQcfPXW4BJaGZc_)\nFor more information on [UniRX](https://github.com/neuecc/UniRx), again, take a look at [Infallible Code](https://www.youtube.com/watch?v=kFoBvjwzbNA&list=PLKERDLXpXl_gdZ7NAHkAxKf12g3oNjTAc). He also has a [Discord](https://discord.gg/NjjQ3BU) server, come and join me in there and try to convince him to continue the video series.\nFor more on testing for Game Development, you can attempt [another massive article](https://www.gamasutra.com/blogs/AshDavis/20160726/277825/Testing_for_Game_Development.php) written by myself and Ash Davis from [what-could-possibly-go-wrong.com](http://www.what-could-possibly-go-wrong.com/)\nAnd to follow me in a more general sense, I hang out on a [twitter](https://twitter.com/AdamSingle) a little\n\nFeel free to comment if you have anything you'd like to add to the discussion or any questions on anything I've written here. I didn't touch on testing `MonoBehaviours`, so if that's something you'd like to see, let me know. \n\nThank you for your time,\nAdam","html":"<p>The following article is a tutorial of sorts and will make the most sense if you follow along in Unity.</p>\n\n<p>I recently started working on a new game in my own time. I won't talk much about it right now, as there isn't much to show yet, but I will soon.</p>\n\n<p>For this game, I was determined to have some solidly tested code. In previous work places I've used <a href=\"https://en.wikipedia.org/wiki/Dependency_injection\">Dependency Injection</a> and am well aware of the power of <a href=\"https://en.wikipedia.org/wiki/Inversion_of_control\">Inversion of Control</a>, not to mention the benefits it provides when writing unit tests. I've played with the Dependency Injection system <a href=\"https://github.com/svermeulen/Zenject\"><em>Zenject</em></a> before, but not on anything that went out at production level. Reading the docs, I was delighted to see that <em>Zenject</em> has added support for both <a href=\"https://github.com/Moq/moq4/wiki/Quickstart\"><em>Moq</em></a> and <a href=\"https://github.com/neuecc/UniRx\"><em>UniRX</em></a> since the last time I used it. This cemented for me that not only would I give <em>Zenject</em> a serious crack, but that I would also attempt to use Reactive Extensions (RX) in a game. </p>\n\n<p>I won't go much into what RX is in this post. If you want to know more about it, I highly recommend you check out these videos from <a href=\"https://www.youtube.com/watch?v=kFoBvjwzbNA&amp;list=PLKERDLXpXl_gdZ7NAHkAxKf12g3oNjTAc\">Infallible Code</a>, they are excellent. </p>\n\n<p>I also won't go too much into explaining Zenject and Dependency Injection. Again, check out <a href=\"https://www.youtube.com/watch?v=IS2YUIb_w_M&amp;list=PLKERDLXpXl_jNJPY2czQcfPXW4BJaGZc_\">Infallible Code</a>. </p>\n\n<p><a href=\"https://github.com/moq/moq4\"><em>Moq</em></a> is a Mocking framework. It is extremely useful when writing tests, I couldn't imagine trying to write them without mocking. </p>\n\n<p>Basically, I'm assuming if you have clicked on the link to read this blog, you have an idea on at least some of the things mentioned in the title. So let's get straight to the process.</p>\n\n<h6 id=\"versions\">Versions</h6>\n\n<p>I'm writing this blog using the following versions: <br />\nUnity - 2018.2.0f2 <br />\nZenject - 7.2.0 <br />\nMoq - 4.7.99 <br />\nUniRx - 6.2.1  </p>\n\n<h6 id=\"installation\">Installation</h6>\n\n<p>Let's start with <em>Zenject</em>. Inside the <em>Unity Editor</em>, open the Asset Store window (Ctrl + 9) and search for <em>Zenject</em>. Select Download, and when that's done, Import. This will open an Editor Window showing all the files in the <em>Zenject</em> package with another Import button in the bottom right corner. Go ahead and click it.</p>\n\n<p><img src=\"/content/images/2018/08/ImportZenject.PNG\" alt=\"\" /></p>\n\n<p>You will now find a <strong>Plugins</strong> directory has been added to your project, inside of which is the <strong>Zenject</strong> directory. There's an <strong>Optional Extras</strong> directory and a <strong>Source</strong> directory. You now actually have everything you need to write unit tests with <em>Zenject</em> as the TestFramework classes are already in the <strong>Optional Extras</strong> directory. But we don't have <em>Moq</em> yet. If you navigate to <strong>Plugins/Zenject/OptionalExtras/TestFramework/Editor</strong> you'll find a zip called <strong>AutoMocking</strong>. </p>\n\n<p>Extract the contents of this zip directly into that <strong>Plugins/Zenject/OptionalExtras/TestFramework/Editor</strong> directory. This will add some scripts and two more zips. <em>Moq-Net35.zip</em> and <em>Moq-Net46.zip</em>. You need to select one based on the Scripting Runtime Version you have selected in the Player Settings. Unzip Moq-Net35 (again, directly into the <strong>Editor</strong> directory) if you are using .NET 3.5 Equivalent <br />\n<img src=\"/content/images/2018/08/net35.PNG\" alt=\"\" />\nOr Moq-Net46 if you are using .NET 4.x Equivalent <br />\n<img src=\"/content/images/2018/08/net46.PNG\" alt=\"\" /></p>\n\n<p>I'm going to switch to .NET 4.x. If you also change your project, you'll notice the Editor needs to restart. Go ahead and do that. I'll wait here.</p>\n\n<p>OK. If we open Visual Studio (<strong><em>Assets->Open C# Project</em></strong>) you may notice that the Solution Explorer shows many projects in your solution <br />\n<img src=\"/content/images/2018/08/SolutionExplorer.PNG\" alt=\"\" /></p>\n\n<p>This has to do with Unity adding support for Assembly Definition files. <em>Zenject</em> has been set up to use them also. So far, I've found them quite painful. I've had issues with trying to get project references to show up in the projects I need them in. So my solution for now is to kill all the <em>asmdef</em> files and go back to thye \"old way\". For <em>Zenject</em>, these are found in the following places:</p>\n\n<ul>\n<li>Plugins/Zenject/zenject.asmdef</li>\n<li>Plugins/Zenject/Source/Editor/Zenject-Editor.asmdef</li>\n<li>Plugins/Zenject/OptionalExtras/TestFramework/Zenject-TestFramework.asmdef</li>\n<li>Plugins/Zenject/OptionalExtras/TestFramework/Editor/Zenject-TestFramework-Editor.asmdef</li>\n<li>Plugins/Zenject/OptionalExtras/MemoryPoolMonitor/Editor/Zenject-PoolMonitor-Editor.asmdef</li>\n</ul>\n\n<p>Once you delete these files, your Solution Explorer will look like this</p>\n\n<p><img src=\"/content/images/2018/08/SolutionExplorer_NoASMDEF.PNG\" alt=\"\" /></p>\n\n<p>You will have some compile errors now though, as there are a couple of files in <strong>Plugins/Zenject/OptionalExtras/TestFramework</strong> that need to be in an <strong>Editor</strong> directory for Unity to put them into the <code>Assembly-CSharp-Editor-firstpass</code> project that they need to be in to get a reference to the <code>UnityEngine.TestTools</code> and <code>NUnit</code> namespaces. This was being handled by the asmdef file before now. Simply locate the files </p>\n\n<ul>\n<li>SceneTestFixture.cs</li>\n<li>SceneTestFixtureSceneReference.cs</li>\n<li>ZenjectIntegrationTestFixture.cs</li>\n<li>ZenjectUnitTestFixture.cs</li>\n</ul>\n\n<p>and drag them into the <strong>Editor</strong> directory that's sitting next to them</p>\n\n<p><img src=\"/content/images/2018/08/CompileErrorSolution.PNG\" alt=\"\" /></p>\n\n<p>Now at this point, I've done this a few times, and each time I get a ton of compile errors in Unity, but not in Visual Studio. Simply shut down Unity and boot up your project again if you're seeing them too and they seem to magically disappear. </p>\n\n<p>We now have <em>Zenject</em> and <em>Moq</em> installed and ready to write unit tests with. Let's quickly add in <em>UniRX</em> and we can start looking at some code. </p>\n\n<p>To install it, simply search for it in the Asset Store and import like we did with <em>Zenject</em>. You will find that <em>UniRX</em> also has some asmdef files. </p>\n\n<p>Plugins/UniRx/Scripts/UniRx.asmdef <br />\nPlugins/UniRx/Async/Unirx.Async.asmdef <br />\nPlugins/UniRx/Async/Editor/UniRx.Async.Editor.asmdef <br />\nPlugins/UniRx/Examples/UniRx.Examples.asmdef</p>\n\n<p>If you remove these files you'll be back to the two projects in your solution. Keep in mind that these projects are basically Plugins and Plugins/Editor. Once we ad our own code we'll get two more projects. Essentially you can think of those two as Game and Editor. </p>\n\n<blockquote>\n  <p>As a quick explanation, anything in a directory called <strong>Editor</strong> in your project Unity bundles into a special project in the visual studio solution that has a reference to the UnityEditor assembly and isn't built into your game when you build. <strong>Plugins</strong> is another special directory that is separated out to minimise compile time, and any <strong>Editor</strong> directory in <strong>Plugins</strong> also gets it 's own project that is not built into your game. In this way, when you change any of your code and it has to be recompiled by Unity, it doesn't bother compiling the <strong>Plugins</strong> or <strong>Plugins/Editor</strong> code unless they also had code changes made. The use of Assembly Definitions to create more projects in the solution is an extension of this. You can limit parts of your code from having reference access to others as well as minimise recompile times by having smaller projects to compile. But so far I've found this more complication than it's worth. </p>\n</blockquote>\n\n<h5 id=\"layingthefoundation\">Laying the foundation</h5>\n\n<p>Let's take this one step at a time. Let's set up some foundation code first, ready to test. Before that, let's get some folder structure in place. Create a new directory in <strong>Assets</strong> called <strong>Code</strong>. Inside that make one called <strong>Editor</strong> and in that, one called <strong>Tests</strong>.</p>\n\n<p><img src=\"/content/images/2018/08/FolderStructure.PNG\" alt=\"\" /></p>\n\n<p>We put the tests in an <strong>Editor</strong> directory so that Unity doesn't include them in our build. For this post we're only interested in writing Editor tests, not Playmode tests. This means we won't, at any point, run the game in the editor. We'll just run the tests from the Test Runner. We will also need a reference to the UnityEngine.TestTools and NUnit, neither of which are referenced by Unity in Assembly-CSharp I believe, so being in an <strong>Editor</strong> directory gives us this.</p>\n\n<p>Inside the <strong>Code</strong> directory, create a new script. Let's call it <code>MessageServiceManager</code>. What we're going to do is emulate a central class that communicates with a third party messaging API of some sort. This won't be a <code>MonoBehaviour</code>, just a straight C# class. Let's pretend internally this class has an API and a Client that it needs to talk to that are a part of the third party message service we plan on using. For the sake of an interesting test, let us say the Client needs to be initialised with the API. So let's add a reference to an <code>IMessageClient</code> and <code>IMessageAPI</code> to our <code>MessageServiceManager</code>.</p>\n\n<p><img src=\"/content/images/2018/08/MessageService1.PNG\" alt=\"\" /></p>\n\n<p>As expected, our solution has no idea what these two things are. We can create them from this file however, using Visual Studio's code generation.  </p>\n\n<blockquote>\n  <p>Either right click on <code>IMessageClient</code> -> select <em>Quick Actions and Refactoring</em> -> <em>Generate Interface 'IMessageClient' in new File</em></p>\n</blockquote>\n\n<p>OR  </p>\n\n<blockquote>\n  <p>with the caret on <code>IMessageClient</code> hold Ctrl and press . to bring up the quick actions menu and select <em>Generate Interface 'IMessageClient' in new file</em></p>\n</blockquote>\n\n<p><img src=\"/content/images/2018/08/MessageService2.png\" alt=\"\" /></p>\n\n<p>Do the same for <code>IMessageAPI</code>. <br />\nFor now, we don't need code in there. We can generate that in a similar fashion as we write our <code>MessageServiceManager</code> class.</p>\n\n<p>This <code>MessageServiceManager</code> is intended to be a singleton that can be injected into our other classes for handling messages. What those classes are aren't important, other than to think about how they might want to use this class. At the very least they will need a way to connect to something and a way to get messages. Let's add our connect method.</p>\n\n<p><code>public void Connect(string Channel)\n{\n}</code></p>\n\n<p>Notice we take in a string for the channel we want to connect to. We'll assume for simplicity, that we're only able to connect to a single channel at a time. In reality, a use case for something like this might be one for each channel you want to connect to, and the class that uses these might collate all the messages from all the channels into a single UI feed. In that case you wouldn't make it a singleton and it's creation may come from a <em>Zenject</em> factory.</p>\n\n<p>We almost have enough to write our first test. We're just missing one thing for our scenario. The dependency injection. We need a way to get the <code>IMessageClient</code> and <code>IMessageAPI</code> into this class. That's what <em>Zenject</em> does for us. We're using interfaces so that we can use <em>Moq</em> in our tests. We'll see why soon. </p>\n\n<p>To set these up for <em>Zenject</em> to know they need to be injected, we simply use the <code>[Inject]</code> attribute above our two fields. This will again throw us an error as this class has no idea what the Inject attribute is. It's a part of the <em>Zenject</em> namespace. <br />\n<img src=\"/content/images/2018/08/MessageService3.png\" alt=\"\" />\n To resolve this, we need to add the appropriate using statement, and the fastest way to do that is to again use the Visual Studio quick actions menu. With the caret on the Inject word, press <em>Ctrl+.</em> and select <code>using Zenject</code>. This will add the using statement to the top of the file and remove the red squiggly line.</p>\n\n<p><img src=\"/content/images/2018/08/MessageService2-1.png\" alt=\"\" /></p>\n\n<blockquote>\n  <p>It's worth noting at this point that we haven't actually wired Zenject or our Unity project/scene to know how to inject these, and we don't need to to write unit tests. We will set up something very similar in our test, but actually setting up Zenject in your scene is a topic for another day or Infallible Code's videos linked in the introduction.</p>\n</blockquote>\n\n<p>That's our foundation complete. Let's write some tests.</p>\n\n<h5 id=\"firsttest\">First test</h5>\n\n<p>Now we need a test class. In Code/Editor/Tests add a new script called <code>MessageServiceManagerTests.cs</code>.  </p>\n\n<blockquote>\n  <p>By now you'll see that we have the other two projects I mentioned earlier. The scripts we added in the Code directory caused Unity to create the <code>Assembly-CSharp</code> project and the test script we just created (which you'll notice is contained within a directory named Editor) caused the creation of <code>Assembly-CSharp-Editor</code>. </p>\n</blockquote>\n\n<p>Open the test script. If you made it from within Unity, the class will inherit from <code>MonoBehaviour</code>, if you made it directly from Visual Studio, it won't inherit from anything. In Either case, we need to change it so that it inherits from <code>ZenjectUnitTestFixture</code>. Again, this will have the red squiggly and need the Zenject using statement added. If Unity made your script, remove the Start and Update methods also.</p>\n\n<p>NUnit is the testing framework that Unity uses to run unit tests in the editor. It uses attributes to find classes that are test classes, and the methods within it that are tests to run. So we need to add the <code>[TestFixture]</code> attribute to the class itself to start with. This will need the <code>NUnit.Framework</code> using statement. We have now told NUnit that there is a class here that contains tests, and the test runner in Unity will go looking in here for some. But currently, it won't find anything, so let's add one that does nothing. For the test runner to recognise a method as a test, it must be decorated with the <code>[Test]</code> attribute.</p>\n\n<p><img src=\"/content/images/2018/08/MessageServiceTest1.PNG\" alt=\"\" /></p>\n\n<p>I have a little personal rule when writing a test. I always try to write it in a way I expect to fail first and make sure it does. Early on in my learning for writing unit tests I had a few situations with false positives, usually to do with how the tests were written. So make sure you can make a test fail first. For our test case here we just want to see the flow into the Editor, so let's do the simplest of fails.</p>\n\n<p><img src=\"/content/images/2018/08/MessageServiceTest2.PNG\" alt=\"\" /></p>\n\n<p>There is no way this test can pass. We're asking the test to only pass when the statement <code>false</code> is true. </p>\n\n<p>Return to the Unity Editor now, and open the Test Runner. It's found in the Window menu. In Unity 2018, it's under the General sub menu. Dock this window somewhere. It should look something like this <br />\n<img src=\"/content/images/2018/08/TestRunner1.PNG\" alt=\"\" />\nYou'll see that there are a couple of Zenject tests here also. These are only separated from yours because they are in a different assembly, the Plugins/Editor one. If they were in the same one as yours, they would be separated by Class name only.  </p>\n\n<blockquote>\n  <p>You can optionally add a category name to the TestFixture attribute like this: <code>[TestFixture(Category = \"MyTestCategory\")]</code>. This will allow you to filter the Test Runner window from the drop down to the right of the search bar. It should currently say 'nothing'.</p>\n</blockquote>\n\n<p>You can either delete the file <strong>Plugins/Zenject/OptionalExtras/TestFramework/Editor/TestAutoMocking.cs</strong> to completely remove the tests, or collapse the Assembly-CSharp-Editor-firstpass.dll portion of the Test Runner. </p>\n\n<p>Press 'Run All' in the top left to run all tests.  </p>\n\n<blockquote>\n  <p>You can right click on any part of the tree structure in the Test Runner to just run the tests from there down.</p>\n</blockquote>\n\n<p>You should find that the Zenject example tests pass (if you didn't delete them) and yours failed. <br />\n<img src=\"/content/images/2018/08/TestRunner2.PNG\" alt=\"\" /></p>\n\n<p>Before we celebrate, let's quickly change our test to pass in the most stupid way. Just to test our workflow is solid. Modify your test to <code>Assert.IsTrue(true)</code>, come back to Unity, either 'Run All' or 'Rerun Failed' and watch everything turn green. The more you write tests, the more you'll grow to love all those green ticks. And curse those little red circles!</p>\n\n<p>Great! Welcome to tested code!</p>\n\n<h5 id=\"writearealtest\">Write a real test</h5>\n\n<p>So we have a test, but it doesn't really test anything. So let's write a real test. We want to test that when the <code>MessageServiceManager</code> has <code>Connect()</code> called on it, it calls <code>Connect()</code> on the <code>IMessageAPI</code>. So let's write a test for that. </p>\n\n<blockquote>\n  <p>There are a number of test naming conventions out there. Ultimately you can choose whatever you like, but personally, I like to just use the feature being tested with lowercase and underscores for readability and differentiation from non-test methods. I try to word it in a way that when read in the test runner, the green tick or red circle make sense. </p>\n</blockquote>\n\n<p><img src=\"/content/images/2018/08/MessageServiceTest3.PNG\" alt=\"\" /></p>\n\n<p>The first thing we'll do is write out our test, even though the things we're referencing don't exist yet. <br />\n<img src=\"/content/images/2018/08/MessageServiceTest4.PNG\" alt=\"\" /></p>\n\n<p>now at the top of the class, let's add a field for our <code>MessageServiceManager</code> called <code>_testObject</code> this is another naming convention I like. It makes it very clear in my tests what's being tested. </p>\n\n<p>We also need to create a mock of our <code>IMessageAPI</code> interface. This is where <em>Moq</em> comes in. <em>Moq</em> essentially creates an inherited class, adding functionality to it that we can use. We can mock out method return values, verify methods are called (including things like verifying with certain arguments as we'll see and verifying a specific number of times). This is why we need to use interfaces. If we were using concrete classes, <em>Moq</em> could only create mock versions of things labelled as virtual. This isn't an issue when using interfaces. To create a mock, we simple declare a member of type <code>Mock&lt;T&gt;</code>. In our case</p>\n\n<p><code>Mock&lt;IMessageAPI&gt; _mockApi;</code></p>\n\n<p>This will require <code>using Moq</code>.</p>\n\n<blockquote>\n  <p>You may find that your class has an error under <code>IMessageAPI</code>. This is most likely due to Visual Studio generating the interface with the accessibility keyword <code>internal</code> which essentially means \"public inside this assembly\" but it's not in the editor assembly that our test is. So change <code>internal</code> to <code>public</code> in <code>IMessageAPI.cs</code> </p>\n</blockquote>\n\n<p>We now only have one error left. There should be a red squiggly under the <code>Connect()</code> in <code>_mockApi.Verify(m =&gt; m.Connect());</code>. If you hover over it, you'll see the error states something along the lines of <em>IMessageAPI does not contain a definition for 'Connect'</em> which is 100% correct. Our <code>IMessageAPI</code> class is an empty interface. Again, we can add this with the <em>Quick Actions</em> menu. Ctrl+. on it and select the top option, which should be <em>Generate Method 'IMessageAPI.Connect'</em>. Our error goes away, and if you press F12 on the Connect call, it will take you to the <code>IMessageAPI</code> file where you can see it.</p>\n\n<p>So what does our test do exactly? It calls Connect on the concrete class that we're testing <code>MessageServiceManager</code>. Notice I'm passing in an empty string. That's fine, because we're not testing how we handle the channel variable yet. Then we are using a Moq method called Verify() on our Mock <code>IMessageAPI</code>. Verify will fail an Assertion if the method we call in the lambda argument hasn't been called. There are 12 overloads for Verify. But usually you'll just use this default one. The other common one includes a Times instance. This is a class in Moq used for defining various call count conditions. Such as <code>Times.AtLeast(int count)</code>, <code>Times.NoMoreThan(int count)</code>, <code>Times.AtMost(int count)</code>, <code>Times.Never()</code>, <code>Times.Exactly(int count_)</code> and <code>Times.Between(int min, int max, Range RangeKind)</code>. As you can see, this is quite flexible.</p>\n\n<p>You may have noticed a couple of issues here. <br />\n1. <code>_testObject</code> and <code>_mockApi</code> are null <br />\nand <br />\n2. <code>_mockApi</code> isn't injected into <code>_testObject</code> in any way</p>\n\n<p>The first one is easy enough to solve. At the top of our test we initialise them.</p>\n\n<p><img src=\"/content/images/2018/08/MessageServiceTest5.PNG\" alt=\"\" /></p>\n\n<p>now <em>Zenject</em>. Hopefully you've either used <em>Zenject</em> before, or you watched the video linked at the start of this post and you understand that <em>Zenject</em> uses installers. An installer has a reference to a Container, and the Container is responsible for maintaining the bindings that are looked up for dependency injection. Containers and installers allow for different Contexts. Meaning bindings can be different in different situations, such as scenes. By inheriting from <code>ZenjectUnitTestFixture</code> we get access to a Container set up just for this class. In fact, you can look at the code for <code>ZenjectUnitTestFixture</code>. You'll see it's literally just new'ing up a <code>DiContainer</code> with a closed context. In this way we can feed it our mock versions to inject into the concrete class we're testing. This means that at run time, when we use the game installer which has bound concrete classes to <code>IMessageAPI</code> and <code>IMessageClient</code>, those will be injected instead. And since we tested our concrete <code>MessageServiceManager</code>'s interaction with the <code>IMessageAPI</code> and <code>IMessageClient</code>, we can trust our class will behave exactly the same way in production as it did in our tests. Neat huh?  </p>\n\n<blockquote>\n  <p>You may have notices another advantage here. Since we have no concrete class for IMessageAPI and IMessageClient yet, and in fact we have no content in those interfaces, we are building them from the tested functionality of MessageServiceManager. More than that, we are building the content of MessageServiceManager from the tests we write a little bit at a time. This is the basis of Test Driven Development or TDD. If you'd like ot know more about that, feel free to check out an article I wrote with <a href=\"http://www.what-could-possibly-go-wrong.com/\">Ash Davis</a> on <a href=\"https://www.gamasutra.com/blogs/AshDavis/20160726/277825/Testing_for_Game_Development.php\">Testing for Game Development</a></p>\n</blockquote>\n\n<p>One caveat to Dependency Injection is that you can't simply new up an object that has dependencies. You have to use the system to get new instances of the object so that it can fulfil the dependencies.</p>\n\n<p>This means we need to remove the line where we new up the _testObject and instead put the <code>[Inject]</code> attribute on it. This way we are telling our DiContainer to inject it into this class. But if it's a dependency for this test class, how do we get the container to fulfil it? Luckily, we can do that with the following line <br />\n<code>Container.Inject(this);</code>\n<img src=\"/content/images/2018/08/MessageServiceTest6.PNG\" alt=\"\" /></p>\n\n<p>This straight up tells the container that you have a reference to, in this case the one created in <code>ZenjectUnitTestFixture</code>, to fulfil any dependencies in the class passed in. Here that's this test class. <br />\nPerfect, but we're missing something. If we try to run this test it will fail. In the Test Runner, you can see the reason that the test failed. This is always good to look at. Sometimes the reason is something you didn't think of (another great advantage to testing, find the bugs before they're bugs). In this case, the fail message says <br />\n<code>\"Zenject.ZenjectException: Unable to resolve type 'MessageServiceManager' while building object with type 'MessageServiceManagerTest\"</code></p>\n\n<p>This is telling us that when trying to fullfil the dependencies of <code>MessageServiceManagerTest</code> it failed to resolve the <code>[Inject]</code> attribute on <code>MessageServiceManager</code> because it didn't know how to make one of those. <br />\nFair call, our DiContainer is empty. We haven't bound anything to it. Pretty simple, let's add <code>Container.Bind&lt;MessageServiceManager&gt;().AsSingle();</code> <br />\nwe could also call <code>AsTransient()</code> instead of <code>AsSingle()</code> and this would give a new instance each time a class requested it as a dependency. Make sure you put this before calling <code>Inject()</code></p>\n\n<p><img src=\"/content/images/2018/08/MessageServiceTest7.PNG\" alt=\"\" /></p>\n\n<p>Now our test still doesn't pass but our fail message has changed. Now <em>Zenject</em> is unable to resolve <code>IMessageClient</code>. If you look at our <code>MessageServiceManager</code> class, you'll see that the top most injected field is <code>IMessageClient</code>, so it's the first to fail. We can assume that once fixed, <code>IMessageAPI</code> will then fail, so let's just fix both now. </p>\n\n<p>We need to add a <code>Mock&lt;IMessageClient&gt;</code> to our test, and then add them both to the <code>DiContainer</code>. </p>\n\n<p><img src=\"/content/images/2018/08/MessageServiceTest8.PNG\" alt=\"\" /></p>\n\n<p>The binding we've used here says take an instance of a type and bind it to an interface such that any time a class asks for that interface to be injected, you provide it with this given instance. Specifically, we're saying when you Inject this class, and attempt to fulfil the dependencies of <code>MessageServiceManager</code> it's going to want an <code>IMessageAPI</code>. When it asks for that, give it <code>_mockApi.Object</code>. <code>Object</code> is a reference to the wrapped type. Since <code>Mock&lt;IMessageAPI&gt;</code> is obviously going to be of type <code>Mock&lt;IMessageAPI&gt;</code> while the <code>MessageServiceManager</code> needs an <code>IMessageAPI</code> object. The same for the binding on <code>IMessageClient</code>.</p>\n\n<p>Let's run our test again. We have a new fail message. One that is closer to a real fail. <br />\n<code>Moq.MockException : \nExpected invocation on the mock at least once, but was never performed: m =&gt; m.Connect()</code></p>\n\n<p>That's nice and readable. Calling <code>Verify()</code> tells the test runner that we expect the method Connect() to have been called on our mock api at least once, but it has not been called at all. Great! this is the meat of the test. This is what we want to ensure happens. So let's fix it. </p>\n\n<p>Open <code>MessageServiceManager</code> and inside the <code>Connect()</code> method, add <code>_api.Connect();</code> <br />\nSave, jump back to Unity, rerun your tests and bask in the light of green ticks.</p>\n\n<h5 id=\"testingmethodcallwithargument\">Testing method call with argument</h5>\n\n<p>OK, let's get cracking on our next test. Let's test that when we call <code>Connect()</code> on our <code>MessageServiceManager</code> we call Connect on our <code>IMessageClient</code> with the correct arguments. <br />\nLet's add a new test called <code>calling_connect_calls_connect_on_client_with_api_and_channel</code>. In my book, you can never be too verbose with test method names. You're never going to have to call them, so you don't have to worry about the awkwardness of typing that in code. You just have to worry about readibility in the test runner. Go ahead and make this method, don't forget the <code>[Test]</code> attribute. If you've thought ahead to writing the test, you'll quickly realise you need to set up all those bindings again. They only existed in the scope of the last test we wrote. We need everything to be fresh for this test. We could rewrite that at the start of each test. But we're programmers, we're better than that. So we could extract it all to a method, maybe called <code>Init()</code> or <code>Initialise()</code>. Let's do that. Extract out the initialisation code from <code>calling_connect_calls_connecton_on_api()</code> to a method called <code>Init()</code></p>\n\n<p>You can again use Visual Studio's Quick Actions menu. Highlight the code, Ctrl+. and select Extract Method <br />\n<img src=\"/content/images/2018/08/MessageServiceTest9.png\" alt=\"\" />\nYou'll now see an <code>Init()</code> method. And where the code was, is now a call to it. <br />\n<img src=\"/content/images/2018/08/MessageServiceTest10.PNG\" alt=\"\" /></p>\n\n<p>But this still means we have to remember to call Init() at the start of each test. NUnit has thought of this for us, and can call an initialisation method before every test if there is one decorated with the <code>[SetUp]</code> attribute. So add that to <code>Init()</code> and remove the call from <code>calling_connect_calls_connect_on_api()</code></p>\n\n<blockquote>\n  <p>IMPORTANT: there's a good chance the auto generated code made the method private. If that's the case, <code>[SetUp]</code> will not get called and in fact the test will not be run. The test runner will not give any log, warning or error about it. It will just show your tests as having not run. Make sure your <code>[SetUp]</code> method is <strong>public</strong>!</p>\n</blockquote>\n\n<p><img src=\"/content/images/2018/08/MessageServiceTest11-1.PNG\" alt=\"\" /></p>\n\n<p>Now we don't need to call that every time. We can just write the meat of the next test. We want to verify that when <code>Connect()</code> is called on <code>MessageServiceManager</code>, <code>Connect()</code> is called on the <code>IMessageClient</code> with <code>channelName</code> and the API object that was injected, in this case our mock one. To do that, we define the variable in the <code>.Verify()</code> method called in the test.</p>\n\n<p><img src=\"/content/images/2018/08/MessageServiceTest12.PNG\" alt=\"\" /></p>\n\n<p>Like before, with our <code>IMessageAPI</code>, we don't have a Connect method defined in our <code>IMessageClient</code>. Generate it like previously using the Quick Options. Make sure you switch over to <code>IMessageClient</code> and check what the auto generation created. Sometimes Visual Studio doesn't get it right. Especially with naming, so make sure your names are good argument names. <code>@object</code> is not great. Change it to <code>api</code> or something similar.</p>\n\n<p>Now we can run our test and watch it fail. </p>\n\n<p>So to pass the test we need to call Connect on our IMessageClient in our <code>MessageServiceManager.Connect()</code> method and pass in the right values. Pretty straight forward, below <code>_api.Connect();</code> call <code>_client.Connect(_api, channel);</code>. Our test should now pass.</p>\n\n<h5 id=\"verifyingmethodcallorder\">Verifying method call order</h5>\n\n<p>What if we need to be sure that Connect is called on the API before it's called on Client for whatever reason? We can test for that. This way, if another developer comes along one day, does some refactoring in this class, and without realising the implications, swaps the order of those calls, our test will immediately break and we'll know what caused the problem we're no doubt about to experience in our latest builds. There is a built in way to test if methods on a particular mock are called in a sequence. But not between two mocks. The easiest way I've found for this is to use the <code>Callback()</code> method and booleans. </p>\n\n<p>In this test, we want a boolean to show that the api method has been called, and another to show that the client method was called after. This is the one we'll assert on. <code>Callback()</code> can be chained on the back of <code>Setup()</code> which is another Mock method we haven't used yet. It's more commonly used to define a known return value, but you can use <code>Callback()</code> to define an Action that will run after the method is called on a mock. You write it like this</p>\n\n<p><code>mockObject.Setup(m =&gt; m.MethodToCall()).Callback(() =&gt; dosomething);</code></p>\n\n<p>With fluent API's like Moq, I like to put each method on it's own line for readability. So we'll add a boolean <code>apiConnectCalled</code> and <code>callOrderCorrect</code>. Then we'll set up <code>_mockApi</code> to set <code>apiConnectCalled</code> to true when it's <code>Connect()</code> method is called.</p>\n\n<p><img src=\"/content/images/2018/08/MessageServiceTest13.PNG\" alt=\"\" /></p>\n\n<p>Now we can mock out the mock client to do something similar, but it sets the value of <code>callOrderCorrect</code> to equal <code>apiConnectCalled</code>. This way, if <code>IMessageClient.Connect()</code> is called before <code>IMessageAPI.Connect()</code> then <code>callOrderCorrect</code> will be false. Another thing we can do when calling mock methods but don't care about the specifics of the arguments is use the <code>It</code> class. We can write <code>It.IsAny&lt;string&gt;()</code> and the mock method (Verify, SetUp or whatever) will not care what's passed into the mock. This saves making dummy values just to pass in. <br />\n<img src=\"/content/images/2018/09/MessageServiceTest15.PNG\" alt=\"\" />\nOnce our callbacks are setup, we can call <code>_testObject.Connect()</code> with an empty string and <code>Assert</code> that <code>callOrderCorrect</code> is true. Now, since we have already written the code in <code>MessageServiceManager</code> in this order, we would expect our test to pass. So let's try and keep to our rule of failing a test first, and quickly swap the order of the calls. Now when we run this test, we would expect it to fail. </p>\n\n<p>Once you've verified that the test does indeed fail, swap them back and smile at the screenfull of green ticks. Maybe take a break, grab a coffee and just sit back and look at them for a while. A board full of passing tests is a bloody satisfying sight to behold.</p>\n\n<h5 id=\"eventtesting\">Event testing</h5>\n\n<p>There are many more tests that a service like this would have. Like connection error handling. Let's add an <code>OnConnectionError</code> event to <code>IMessageClient</code> and test that our <code>MessageServiceManager</code> throws an exception. This isn't the best handling, but demonstrates a few more features nicely. </p>\n\n<p>First, let's add the event to <code>IMessageClient</code>. <br />\n<img src=\"/content/images/2018/08/IMessageClient_Event.PNG\" alt=\"\" />\nNotice that we had to add the System using statemnt. </p>\n\n<p>This is a fairly short test to write. Let's call it <code>exception_thrown_when_client_failed_connection_event_fired</code>. The trick is we need to call some code that we know will throw an exception. Normally that would halt execution. NUnit allows us to wrap the code that we expect to throw in an Assert. Assert is generic and needs to be told what type of exception to expect. For simplicity, we will just use the basic Exception class, but you could write tests to ensure that specific exceptions are being thrown if you wanted to. </p>\n\n<p><code>Assert.Throws&lt;Exception&gt;(() =&gt; {});</code></p>\n\n<p>Now the code that we want to cause an exception is when the event on the mock is thrown. We can use the <code>Raise()</code> method to cause that. We don't need to worry about the sender or the EventArgs in this scenario, but again, you could mock out an event with specific args passed into it for testing how that's handled. Raise looks like this</p>\n\n<p><code>_mockClient.Raise(m =&gt; m.OnConnectionFailedEvent += null, new EventArgs());</code></p>\n\n<p>so our whole test is pretty simple looking. <br />\n<img src=\"/content/images/2018/08/MessageServiceTest14.PNG\" alt=\"\" /></p>\n\n<p>When we run it, it should fail. The fail message says that the Assert expected a System.Exception but got null. This makes sense. We aren't even handling the event in our MessageServiceManager, let alone throwing anything yet.</p>\n\n<p>So let's add a handler. Seems pretty simple, but we probably shouldn't do it in the Connect method. What if that method is called more than once? we'll end up leaking memory by adding listeners to the event over and over. We have two options here. The easiest one, is to add a new method to <code>MessageServiceManager</code> called Init and mark it with the <code>[Inject]</code> attribute in the same way we marked the field memebers we wanted injected. This is called <em>method injection</em>. Any arguments passed into this method will attempt to be filled out by <em>Zenject</em> and fail if it can't do it. More importantly, it happens after all other types of injection, and is perfect for initialisation logic. This is what we'll do. The other option would be to change the <code>IMessageClient</code> to be injected using <em>constructor injection</em>. In this case we would remove the <code>[Inject]</code> attribute from the field memeber, add a constructor that took an <code>IMessageClient</code> as an argument, and assign the passed in one to the field member. Like this</p>\n\n<p><code>public void MessageServiceManager(IMessageClient client)\n{\n    _client = client;\n}</code></p>\n\n<p>Keep in mind, constructor injection isn't an option on MonoBehaviours as you can't access their constructors.</p>\n\n<p>So let's add our initialisation method and subscribe to the event in there</p>\n\n<p><img src=\"/content/images/2018/08/IMessageClient_Initialise.PNG\" alt=\"\" /></p>\n\n<p>At this point our test will still fail as we haven't thrown our exception yet. All we need to do is throw it in our event handler. <br />\n<img src=\"/content/images/2018/09/MessageServiceTest16.PNG\" alt=\"\" /></p>\n\n<p>And now we have a green light. </p>\n\n<h5 id=\"rxtesting\">RX Testing</h5>\n\n<p>Last test. I know this has been a long post, thanks for sticking with me. The one bit of tech I haven't touched on yet is RX. As I mentioned in the introduction, if you don't know what Reactive Extensions are, or specifically UniRX, check out Infallible Code's videos. We're going to look at a simple example. We're going to generate a stream of messages that are coming from an event in the Client.</p>\n\n<p>First we'll write our test. <br />\n<img src=\"/content/images/2018/09/MessageServiceTest17.PNG\" alt=\"\" /></p>\n\n<p>Let's walk through this. We are establishing a boolean to know if our stream has emmitted a value. We subscribe here in the test to the RX Observable called <code>MessageReceivedObservable</code> on our test object; the <code>MessageServiceManager</code>. Notice this doesn't exist yet. That's OK, we'll generate it shortly. We then mock out our mockClient to raise an event called <code>OnMessageReceivedEvent</code> (which doesn't exist) which uses a delegate that takes a child class of <code>EventArgs</code> called <code>OnMessageReceivedArgs</code> (which also doesn't exist).</p>\n\n<p>So let's generate some code. First the event. Ctrl+. on the <code>OnMessageReceivedEvent</code>. You're only real option is to generate a property. This is the best VS can do when guessing what this is. Just accept that, and then F12 on it and we'll fix it. You'll see it's guessed you wanted an int property. Delete the int type, and the get and set and replace it with our event code like so. <br />\n<img src=\"/content/images/2018/09/MessageServiceTest18.PNG\" alt=\"\" />\n<img src=\"/content/images/2018/09/MessageServiceTest19.PNG\" alt=\"\" /></p>\n\n<p>Now let's generate our event args, again using Ctrl+. The top option should be to generate the class in a new file. If you want to take your tests further, you can flesh out this class to contain a message string and test the contents are propagated into the stream properly if you like. For the purpose of this post, I won't go any further than this basic test though.</p>\n\n<p>We now need to generate our <code>MessageReceivedObservable</code>. Back in our test we'll use Ctrl+. on it and Generate Variable. You'll notice however that the best VS can do is give you an <code>object</code> property. So we'll redo this one too. The way I normally handle these types of RX streams, is to have a publicly exposed <code>IObservable</code>. This has a very limited amount of functionality. This way any external classes can basically just subscribe to it. Internally however, this will most likely be linked to a <code>Subject</code>. </p>\n\n<p>Change our <code>object</code> property to an <code>IObservable&lt;OnMessageReceivedArgs&gt;</code> property (which will require the <code>System</code> using statement). This is the object that external classes will use to subscribe to, to receive events as they are pushed into the stream. This is what we subscribe to in our test to set the boolean to true to know that our code is working. We don't want a setter on this, so let's remove that from here and flesh out the getter to return a variable called <code>_messageReceivedSubject</code>. Now we need to create this, so add <code>private Subject&lt;OnMessageReceivedArgs&gt; _messageReceivedSubject;</code> <br />\n<img src=\"/content/images/2018/09/MessageServiceTest20.PNG\" alt=\"\" /></p>\n\n<p>Now we just need to hook up our subject to the event that comes from <code>IMessageClient</code>. Up till now our test should still have been failing nicely. Now this last step should flick it to a pass. First create and hook up the handler next to the one we made for handling the error message. </p>\n\n<p>You can use a little code generation short cut by typeing <code>_client.OnMessageReceivedEvent +=</code> and then pressing <code>tab</code> twice. This will auto create the handler method, with the correct arguments and put you in a position to type a new name if you don't like the one VS created for you. Once you're happy with the name, press enter. VS will automatically add a line in your new method throwing a not implemented exception so that if you do this and forget to fill out the method, your program will throw a clear error that that's the case. We'll replace that throw with our code, converting the event to a new event in our stream.</p>\n\n<p>This is quite simple, we take our subject and call <code>OnNext()</code> on it, passing in the event args that <code>IMessageClient</code> just gave us. This is the main reason why I use the <code>public IObservable</code> abstraction in my classes. <code>OnNext()</code> doesn't exist in <code>IObservable</code>, so external classes can't mess with this stream in any way, that can literally just observe and react. </p>\n\n<p><img src=\"/content/images/2018/09/MessageServiceTest22.PNG\" alt=\"\" /></p>\n\n<p>At this point you may notice a compile error that I missed. In our test class, we're being told that we <code>\"cannot convert lambda expression to type 'IObservable&lt;OnMessageReceivedArgs&gt;' because it's not a delegate type\"</code>. This is because although <code>IObservable</code> exists in the <code>System</code> namespace, UniRX provides some handy extensions that allow us to use lambdas here. This error is solved by simply adding the <code>using UniRX</code> line to the top of our test class.</p>\n\n<p>Now back in Unity our test should still be failing, but the error message should make it super clear why. We have a null reference exception. We've all seen them. In this case it's on the line in our test where we are trying to subscribe to our stream. I'll point out at this moment that you can debug your tests like any other code. Place a break point on that line, attach the debugger to unity and run the test. It will break and you can step through the code. If you do that, you'll reliase that our <code>Subject</code> <code>_messageReceivedSubject</code> is <code>null</code>. Fair call, we never initialised it. We can do that in the constructor or inline with it's declaration. That's a personal preference that is entirely up to you. But for this post I'll place it inline since we haven't needed to make a constructor for any other reason. So mine now looks like this</p>\n\n<p><img src=\"/content/images/2018/09/MessageServiceTest21.PNG\" alt=\"\" /></p>\n\n<p>Return to <em>Unity</em>, run your test and you should see that beautiful green tick. </p>\n\n<p><img src=\"/content/images/2018/09/CompletedTests.PNG\" alt=\"\" /></p>\n\n<h5 id=\"conclusion\">Conclusion</h5>\n\n<p>This post barely scratches the surface of unit testing, but it has hopefully given you the tools to create them in <em>Unity</em> using some great technology like <em>UniRX</em> and <em>Zenject</em>. I hope I've managed to display the power of unit testing as a development tool, especially when used to facilitate code design, and not just as an afterthought. <br />\nI've also attempted to display the power of mocking libraries like Moq and how they can be used with Dependency Injection to decouple your code and test it for peace of mind. There are many more unit tests a class like our <code>MessageServiceManager</code> would need to be covered completely, and there are also other forms of testing than unit testing, such as integration testing, UI testing and scene testing (a type of <em>Unity</em> specific integration runtime test) to name a few. <em>Zenject</em> has some ability to facilitate both integration and scene testing, and they have some <a href=\"https://github.com/svermeulen/Zenject/blob/master/Documentation/WritingAutomatedTests.md\">documentation</a> on that. UI testing is a trickier subject. There is a library I found recently designed for <em>Unity</em>, and I'll be experimenting with that on my game. So I suspect there'll be another post on here in the near future on that. Hopefully not as long as this one was. </p>\n\n<p>I'll put up some links again, since you've managed to stick through this article. <br />\nFor some insight on <a href=\"https://github.com/svermeulen/Zenject\">Zenject</a> check out <a href=\"https://www.youtube.com/watch?v=IS2YUIb_w_M&amp;list=PLKERDLXpXl_jNJPY2czQcfPXW4BJaGZc_\">Infallible Code</a> <br />\nFor more information on <a href=\"https://github.com/neuecc/UniRx\">UniRX</a>, again, take a look at <a href=\"https://www.youtube.com/watch?v=kFoBvjwzbNA&amp;list=PLKERDLXpXl_gdZ7NAHkAxKf12g3oNjTAc\">Infallible Code</a>. He also has a <a href=\"https://discord.gg/NjjQ3BU\">Discord</a> server, come and join me in there and try to convince him to continue the video series. <br />\nFor more on testing for Game Development, you can attempt <a href=\"https://www.gamasutra.com/blogs/AshDavis/20160726/277825/Testing_for_Game_Development.php\">another massive article</a> written by myself and Ash Davis from <a href=\"http://www.what-could-possibly-go-wrong.com/\">what-could-possibly-go-wrong.com</a> <br />\nAnd to follow me in a more general sense, I hang out on a <a href=\"https://twitter.com/AdamSingle\">twitter</a> a little</p>\n\n<p>Feel free to comment if you have anything you'd like to add to the discussion or any questions on anything I've written here. I didn't touch on testing <code>MonoBehaviours</code>, so if that's something you'd like to see, let me know. </p>\n\n<p>Thank you for your time, <br />\nAdam</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":"Testing Unity and UniRX with Zenject and Moq","meta_description":"Do you want to unit test your Unity games? Do you use Zenject? or UniRX? Do you want to? Then join me for a little introductory journey into how to do that.","author_id":1,"created_at":"2018-08-30T10:49:31.000Z","created_by":1,"updated_at":"2018-09-25T06:32:19.000Z","updated_by":1,"published_at":"2018-09-25T06:32:19.000Z","published_by":1}],"posts_tags":[{"id":2,"post_id":4,"tag_id":6,"sort_order":0},{"id":3,"post_id":5,"tag_id":7,"sort_order":0},{"id":4,"post_id":6,"tag_id":7,"sort_order":0},{"id":5,"post_id":9,"tag_id":7,"sort_order":0},{"id":6,"post_id":10,"tag_id":2,"sort_order":0},{"id":7,"post_id":11,"tag_id":2,"sort_order":0},{"id":8,"post_id":12,"tag_id":7,"sort_order":0},{"id":9,"post_id":13,"tag_id":7,"sort_order":0},{"id":10,"post_id":14,"tag_id":4,"sort_order":0},{"id":11,"post_id":15,"tag_id":8,"sort_order":0},{"id":12,"post_id":16,"tag_id":8,"sort_order":0},{"id":13,"post_id":17,"tag_id":2,"sort_order":0},{"id":14,"post_id":18,"tag_id":5,"sort_order":0},{"id":15,"post_id":19,"tag_id":8,"sort_order":0},{"id":16,"post_id":20,"tag_id":8,"sort_order":0},{"id":17,"post_id":21,"tag_id":8,"sort_order":0},{"id":18,"post_id":22,"tag_id":8,"sort_order":0},{"id":19,"post_id":23,"tag_id":8,"sort_order":0},{"id":20,"post_id":24,"tag_id":8,"sort_order":0},{"id":21,"post_id":25,"tag_id":8,"sort_order":0},{"id":22,"post_id":27,"tag_id":9,"sort_order":0},{"id":23,"post_id":28,"tag_id":8,"sort_order":0},{"id":24,"post_id":29,"tag_id":8,"sort_order":0},{"id":25,"post_id":30,"tag_id":8,"sort_order":0},{"id":26,"post_id":31,"tag_id":8,"sort_order":0},{"id":27,"post_id":32,"tag_id":8,"sort_order":0},{"id":28,"post_id":35,"tag_id":8,"sort_order":0},{"id":29,"post_id":36,"tag_id":8,"sort_order":0},{"id":30,"post_id":37,"tag_id":8,"sort_order":0},{"id":31,"post_id":4,"tag_id":8,"sort_order":1},{"id":32,"post_id":5,"tag_id":12,"sort_order":1},{"id":33,"post_id":6,"tag_id":12,"sort_order":1},{"id":34,"post_id":9,"tag_id":12,"sort_order":1},{"id":35,"post_id":10,"tag_id":3,"sort_order":1},{"id":36,"post_id":11,"tag_id":3,"sort_order":1},{"id":37,"post_id":12,"tag_id":12,"sort_order":1},{"id":38,"post_id":13,"tag_id":12,"sort_order":1},{"id":39,"post_id":14,"tag_id":8,"sort_order":1},{"id":40,"post_id":15,"tag_id":15,"sort_order":1},{"id":41,"post_id":16,"tag_id":17,"sort_order":1},{"id":42,"post_id":17,"tag_id":3,"sort_order":1},{"id":43,"post_id":18,"tag_id":8,"sort_order":1},{"id":44,"post_id":19,"tag_id":10,"sort_order":1},{"id":45,"post_id":23,"tag_id":10,"sort_order":1},{"id":46,"post_id":24,"tag_id":22,"sort_order":1},{"id":47,"post_id":25,"tag_id":22,"sort_order":1},{"id":48,"post_id":27,"tag_id":20,"sort_order":1},{"id":49,"post_id":28,"tag_id":9,"sort_order":1},{"id":50,"post_id":29,"tag_id":23,"sort_order":1},{"id":51,"post_id":30,"tag_id":23,"sort_order":1},{"id":52,"post_id":31,"tag_id":23,"sort_order":1},{"id":53,"post_id":32,"tag_id":23,"sort_order":1},{"id":54,"post_id":35,"tag_id":23,"sort_order":1},{"id":55,"post_id":36,"tag_id":17,"sort_order":1},{"id":56,"post_id":37,"tag_id":17,"sort_order":1},{"id":57,"post_id":4,"tag_id":10,"sort_order":2},{"id":58,"post_id":5,"tag_id":13,"sort_order":2},{"id":59,"post_id":6,"tag_id":20,"sort_order":2},{"id":60,"post_id":9,"tag_id":19,"sort_order":2},{"id":61,"post_id":10,"tag_id":8,"sort_order":2},{"id":62,"post_id":11,"tag_id":6,"sort_order":2},{"id":63,"post_id":12,"tag_id":20,"sort_order":2},{"id":64,"post_id":13,"tag_id":20,"sort_order":2},{"id":65,"post_id":14,"tag_id":11,"sort_order":2},{"id":66,"post_id":15,"tag_id":17,"sort_order":2},{"id":67,"post_id":16,"tag_id":18,"sort_order":2},{"id":68,"post_id":17,"tag_id":8,"sort_order":2},{"id":69,"post_id":18,"tag_id":9,"sort_order":2},{"id":70,"post_id":19,"tag_id":17,"sort_order":2},{"id":71,"post_id":27,"tag_id":21,"sort_order":2},{"id":72,"post_id":28,"tag_id":20,"sort_order":2},{"id":73,"post_id":4,"tag_id":12,"sort_order":3},{"id":74,"post_id":5,"tag_id":20,"sort_order":3},{"id":75,"post_id":6,"tag_id":21,"sort_order":3},{"id":76,"post_id":9,"tag_id":20,"sort_order":3},{"id":77,"post_id":10,"tag_id":12,"sort_order":3},{"id":78,"post_id":11,"tag_id":8,"sort_order":3},{"id":79,"post_id":12,"tag_id":25,"sort_order":3},{"id":80,"post_id":13,"tag_id":21,"sort_order":3},{"id":81,"post_id":14,"tag_id":12,"sort_order":3},{"id":82,"post_id":15,"tag_id":18,"sort_order":3},{"id":83,"post_id":17,"tag_id":12,"sort_order":3},{"id":84,"post_id":18,"tag_id":12,"sort_order":3},{"id":85,"post_id":28,"tag_id":23,"sort_order":3},{"id":86,"post_id":4,"tag_id":16,"sort_order":4},{"id":87,"post_id":5,"tag_id":21,"sort_order":4},{"id":88,"post_id":6,"tag_id":25,"sort_order":4},{"id":89,"post_id":9,"tag_id":21,"sort_order":4},{"id":90,"post_id":10,"tag_id":25,"sort_order":4},{"id":91,"post_id":11,"tag_id":12,"sort_order":4},{"id":92,"post_id":12,"tag_id":26,"sort_order":4},{"id":93,"post_id":13,"tag_id":25,"sort_order":4},{"id":94,"post_id":14,"tag_id":25,"sort_order":4},{"id":95,"post_id":17,"tag_id":25,"sort_order":4},{"id":96,"post_id":18,"tag_id":14,"sort_order":4},{"id":97,"post_id":4,"tag_id":24,"sort_order":5},{"id":98,"post_id":5,"tag_id":25,"sort_order":5},{"id":99,"post_id":6,"tag_id":28,"sort_order":5},{"id":100,"post_id":9,"tag_id":25,"sort_order":5},{"id":101,"post_id":11,"tag_id":25,"sort_order":5},{"id":102,"post_id":13,"tag_id":27,"sort_order":5},{"id":103,"post_id":18,"tag_id":20,"sort_order":5},{"id":104,"post_id":4,"tag_id":25,"sort_order":6},{"id":105,"post_id":18,"tag_id":21,"sort_order":6},{"id":106,"post_id":18,"tag_id":25,"sort_order":7},{"id":107,"post_id":38,"tag_id":25,"sort_order":0},{"id":108,"post_id":38,"tag_id":31,"sort_order":1},{"id":109,"post_id":38,"tag_id":32,"sort_order":2},{"id":110,"post_id":38,"tag_id":8,"sort_order":3},{"id":111,"post_id":38,"tag_id":35,"sort_order":4},{"id":112,"post_id":38,"tag_id":36,"sort_order":5},{"id":113,"post_id":38,"tag_id":37,"sort_order":6},{"id":114,"post_id":38,"tag_id":38,"sort_order":7},{"id":115,"post_id":38,"tag_id":39,"sort_order":8}],"roles":[{"id":1,"uuid":"bdecd102-dab6-499c-92fe-1c458bfa8a43","name":"Administrator","description":"Administrators","created_at":"2015-09-29T01:55:27.000Z","created_by":1,"updated_at":"2015-09-29T01:55:27.000Z","updated_by":1},{"id":2,"uuid":"e6d5d1f8-9c0e-4328-93cd-8502757f1f88","name":"Editor","description":"Editors","created_at":"2015-09-29T01:55:27.000Z","created_by":1,"updated_at":"2015-09-29T01:55:27.000Z","updated_by":1},{"id":3,"uuid":"5a2c2f16-30fa-4381-841d-589b4fcca9fb","name":"Author","description":"Authors","created_at":"2015-09-29T01:55:27.000Z","created_by":1,"updated_at":"2015-09-29T01:55:27.000Z","updated_by":1},{"id":4,"uuid":"c689135a-a2fb-4fe0-9fca-c7b925a8fa6d","name":"Owner","description":"Blog Owner","created_at":"2015-09-29T01:55:27.000Z","created_by":1,"updated_at":"2015-09-29T01:55:27.000Z","updated_by":1}],"roles_users":[{"id":1,"role_id":4,"user_id":1}],"settings":[{"id":1,"uuid":"5fa58b2a-06e4-413b-b8d8-bce28460e710","key":"databaseVersion","value":"004","type":"core","created_at":"2015-09-29T01:55:27.000Z","created_by":1,"updated_at":"2015-09-29T01:55:27.000Z","updated_by":1},{"id":2,"uuid":"ed5a02e1-ef8d-411e-b743-974de348d4d2","key":"dbHash","value":"f6c058ee-dbb6-484b-9470-8c2208c6a98b","type":"core","created_at":"2015-09-29T01:55:27.000Z","created_by":1,"updated_at":"2015-09-29T01:55:27.000Z","updated_by":1},{"id":3,"uuid":"8fa08668-3bd3-4534-b0fd-89000d2e22e2","key":"nextUpdateCheck","value":"1538025687","type":"core","created_at":"2015-09-29T01:55:27.000Z","created_by":1,"updated_at":"2018-09-26T05:21:26.000Z","updated_by":1},{"id":4,"uuid":"2ed3eb1d-2943-407d-aa53-2789012f29c0","key":"displayUpdateNotification","value":"0.11.13","type":"core","created_at":"2015-09-29T01:55:27.000Z","created_by":1,"updated_at":"2018-09-26T05:21:26.000Z","updated_by":1},{"id":5,"uuid":"b73c8142-898d-4545-ac95-6e8d8d276730","key":"title","value":"Adam Single","type":"blog","created_at":"2015-09-29T01:55:27.000Z","created_by":1,"updated_at":"2018-09-26T06:29:47.000Z","updated_by":1},{"id":6,"uuid":"83628aac-446a-4bc2-9967-957e5e66edd4","key":"description","value":"Indie Developer, Streamer, Husband, Father","type":"blog","created_at":"2015-09-29T01:55:27.000Z","created_by":1,"updated_at":"2018-09-26T06:29:47.000Z","updated_by":1},{"id":7,"uuid":"72c71f62-b2d9-47d0-b6ef-8795723d0924","key":"email","value":"adam@adamsingle.com","type":"blog","created_at":"2015-09-29T01:55:27.000Z","created_by":1,"updated_at":"2015-09-29T01:55:27.000Z","updated_by":1},{"id":8,"uuid":"ff52270d-cdbe-4a48-a9e3-49a577feda4f","key":"logo","value":"/content/images/2015/09/Adam_initials.png","type":"blog","created_at":"2015-09-29T01:55:27.000Z","created_by":1,"updated_at":"2018-09-26T06:29:47.000Z","updated_by":1},{"id":9,"uuid":"af7f1560-5f84-4e32-aad0-37f07420421d","key":"cover","value":"/content/images/2018/09/classconcept_groupphoto.png","type":"blog","created_at":"2015-09-29T01:55:27.000Z","created_by":1,"updated_at":"2018-09-26T06:29:47.000Z","updated_by":1},{"id":10,"uuid":"0db786b4-a4f3-4e3a-ba1a-16459d421f93","key":"defaultLang","value":"en_US","type":"blog","created_at":"2015-09-29T01:55:27.000Z","created_by":1,"updated_at":"2018-09-26T06:29:47.000Z","updated_by":1},{"id":11,"uuid":"588814c4-8958-409f-a843-597f8d2d2ac3","key":"postsPerPage","value":"5","type":"blog","created_at":"2015-09-29T01:55:27.000Z","created_by":1,"updated_at":"2018-09-26T06:29:47.000Z","updated_by":1},{"id":12,"uuid":"7356280b-8f3f-4c35-933a-15cb6d8adc9e","key":"forceI18n","value":"true","type":"blog","created_at":"2015-09-29T01:55:27.000Z","created_by":1,"updated_at":"2018-09-26T06:29:47.000Z","updated_by":1},{"id":13,"uuid":"75719b01-f429-4138-b8ab-c5175b21803b","key":"permalinks","value":"/:slug/","type":"blog","created_at":"2015-09-29T01:55:27.000Z","created_by":1,"updated_at":"2018-09-26T06:29:47.000Z","updated_by":1},{"id":14,"uuid":"6d4583a8-8b22-407d-a4a4-f5c55daef916","key":"activeTheme","value":"The-Shell-master","type":"theme","created_at":"2015-09-29T01:55:27.000Z","created_by":1,"updated_at":"2018-09-26T06:29:47.000Z","updated_by":1},{"id":15,"uuid":"27163872-e211-45c8-bc32-248211d21bc8","key":"activeApps","value":"[]","type":"app","created_at":"2015-09-29T01:55:27.000Z","created_by":1,"updated_at":"2015-09-29T01:55:27.000Z","updated_by":1},{"id":16,"uuid":"5897f84d-1a83-4f65-98ec-6afbae1638ce","key":"installedApps","value":"[]","type":"app","created_at":"2015-09-29T01:55:27.000Z","created_by":1,"updated_at":"2018-09-27T04:08:42.000Z","updated_by":1},{"id":17,"uuid":"bd7175c3-cc42-40f7-9525-6d91251e23c1","key":"ghost_head","value":"","type":"blog","created_at":"2015-09-28T22:06:23.000Z","created_by":1,"updated_at":"2018-09-26T06:29:47.000Z","updated_by":1},{"id":18,"uuid":"b94a2028-e2c6-48bb-b380-91f18d578d92","key":"ghost_foot","value":"<!-- You can safely delete this line if your theme does not require jQuery -->\n<script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-1.11.3.min.js\"></script>\n\n","type":"blog","created_at":"2015-09-28T22:06:23.000Z","created_by":1,"updated_at":"2018-09-26T06:29:47.000Z","updated_by":1},{"id":19,"uuid":"78dd1e5a-9bc7-488a-8dc3-2829df6e0f36","key":"labs","value":"{}","type":"blog","created_at":"2015-09-28T22:06:23.000Z","created_by":1,"updated_at":"2018-09-26T06:29:47.000Z","updated_by":1},{"id":20,"uuid":"8833a07a-38fd-4970-9825-95d2bbd7ea82","key":"navigation","value":"[{\"label\":\"Home\",\"url\":\"/\"},{\"label\":\"DevBlog\",\"url\":\"/tag/devblog/\"}]","type":"blog","created_at":"2015-09-28T22:06:23.000Z","created_by":1,"updated_at":"2018-09-26T06:29:47.000Z","updated_by":1},{"id":21,"uuid":"de646653-8bb0-465d-a911-d5a70d28230f","key":"isPrivate","value":"false","type":"private","created_at":"2015-09-28T22:06:23.000Z","created_by":1,"updated_at":"2018-09-26T06:29:47.000Z","updated_by":1},{"id":22,"uuid":"a40f3ba6-dc40-45dd-8e23-aee0886de3e7","key":"password","value":"","type":"private","created_at":"2015-09-28T22:06:23.000Z","created_by":1,"updated_at":"2018-09-26T06:29:47.000Z","updated_by":1}],"tags":[{"id":1,"uuid":"995ec0be-855c-4ec1-af9c-697555b53aba","name":"Getting Started","slug":"getting-started","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:55:27.000Z","created_by":1,"updated_at":"2015-09-29T01:55:27.000Z","updated_by":1},{"id":2,"uuid":"c534964f-410b-4878-88af-be5121c53945","name":"#1GAM","slug":"1gam","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:18:41.000Z","created_by":1,"updated_at":"2015-09-29T01:18:41.000Z","updated_by":1},{"id":3,"uuid":"73e97c63-2ad7-4736-9bf7-fd2af23705ae","name":"1GAM","slug":"1gam-2","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:18:42.000Z","created_by":1,"updated_at":"2015-09-29T01:18:42.000Z","updated_by":1},{"id":4,"uuid":"ef1d8397-9656-4750-9d7c-b1d03d5d8e80","name":"48hr","slug":"48hr","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:18:42.000Z","created_by":1,"updated_at":"2015-09-29T01:18:42.000Z","updated_by":1},{"id":5,"uuid":"36301555-be9a-4eac-943b-f5bcd890b1e2","name":"7BitHero","slug":"7bithero","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:18:42.000Z","created_by":1,"updated_at":"2015-09-29T01:18:42.000Z","updated_by":1},{"id":6,"uuid":"5e3679ac-5d22-4178-850f-799e6f8c6066","name":"AI","slug":"ai","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:18:42.000Z","created_by":1,"updated_at":"2015-09-29T01:18:42.000Z","updated_by":1},{"id":7,"uuid":"4ebee54a-50a1-471f-aa95-774b1f45682c","name":"Bifrost Studios","slug":"bifrost-studios","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:18:42.000Z","created_by":1,"updated_at":"2015-09-29T01:18:42.000Z","updated_by":1},{"id":8,"uuid":"c1f929fc-5b2f-4bcb-81a1-77876ea00691","name":"Blog","slug":"blog","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:18:42.000Z","created_by":1,"updated_at":"2015-09-29T01:18:42.000Z","updated_by":1},{"id":9,"uuid":"f187eb6c-24a4-4960-b31f-4587a84e3082","name":"Contract","slug":"contract","description":"Games, Apps and blog posts written for contracts I've taken on.","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:18:42.000Z","created_by":1,"updated_at":"2015-09-29T01:18:42.000Z","updated_by":1},{"id":10,"uuid":"da9c7797-c9a1-4233-b77b-cd315209d6f1","name":"Design","slug":"design","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:18:42.000Z","created_by":1,"updated_at":"2015-09-29T01:18:42.000Z","updated_by":1},{"id":11,"uuid":"6cf837bb-8e29-4665-914b-a066b81d4313","name":"Fab48","slug":"fab48","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:18:42.000Z","created_by":1,"updated_at":"2015-09-29T01:18:42.000Z","updated_by":1},{"id":12,"uuid":"0523f092-ebe1-4721-be11-56c8c40db247","name":"Games","slug":"games","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:18:42.000Z","created_by":1,"updated_at":"2015-09-29T01:18:42.000Z","updated_by":1},{"id":13,"uuid":"6d9b6303-7917-43d1-b3a4-4a347782eb5a","name":"Hot Tail","slug":"hot-tail","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:18:42.000Z","created_by":1,"updated_at":"2015-09-29T01:18:42.000Z","updated_by":1},{"id":14,"uuid":"6f0fa06e-1f4e-4cdc-baaf-4a2e90271c9b","name":"Music","slug":"music","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:18:42.000Z","created_by":1,"updated_at":"2015-09-29T01:18:42.000Z","updated_by":1},{"id":15,"uuid":"16f93852-a64c-4fac-8a70-04b896592e3e","name":"Nerd Fitness","slug":"nerd-fitness","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:18:42.000Z","created_by":1,"updated_at":"2015-09-29T01:18:42.000Z","updated_by":1},{"id":16,"uuid":"12a60d61-ebaf-44ea-9175-b3081bd3076e","name":"OUYA","slug":"ouya","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:18:42.000Z","created_by":1,"updated_at":"2015-09-29T01:18:42.000Z","updated_by":1},{"id":17,"uuid":"1c48b41c-92ca-425c-b57a-9a5a2798bf1f","name":"Personal Development","slug":"personal-development","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:18:42.000Z","created_by":1,"updated_at":"2015-09-29T01:18:42.000Z","updated_by":1},{"id":18,"uuid":"47e5f3f5-0e34-463e-854e-ce8d5e045d03","name":"Personal Growth","slug":"personal-growth","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:18:42.000Z","created_by":1,"updated_at":"2015-09-29T01:18:42.000Z","updated_by":1},{"id":19,"uuid":"321f1915-f9ed-4618-b9bc-68a21e7ecda0","name":"Photon","slug":"photon","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:18:42.000Z","created_by":1,"updated_at":"2015-09-29T01:18:42.000Z","updated_by":1},{"id":20,"uuid":"c38434e7-5473-4808-98d8-8e7641e155fe","name":"Portfolio","slug":"portfolio","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:18:42.000Z","created_by":1,"updated_at":"2015-09-29T01:18:42.000Z","updated_by":1},{"id":21,"uuid":"64c1486a-1551-41fc-a6d2-9ac693997735","name":"Releases","slug":"releases","description":"Posts about actual releases. Includes promo art.","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:18:42.000Z","created_by":1,"updated_at":"2015-09-29T01:18:42.000Z","updated_by":1},{"id":22,"uuid":"acb73e21-f923-49b5-8870-8db947844622","name":"Resource","slug":"resource","description":"Any blog post that has a link to, or contains within itself, useful information for developers or coders.","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:18:42.000Z","created_by":1,"updated_at":"2015-09-29T01:18:42.000Z","updated_by":1},{"id":23,"uuid":"9a7020c4-9391-4d0e-84ed-1ae0a864c675","name":"Robot University","slug":"robot-university","description":"Robot University is a public, interactive installation at QUT's amazing facility known as The Cube in Brisbane Australia.","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:18:42.000Z","created_by":1,"updated_at":"2015-09-29T01:18:42.000Z","updated_by":1},{"id":24,"uuid":"816a980b-b177-40ad-933f-c4cdb5a257ff","name":"Solo Work","slug":"solo","description":"Games and blog posts written for my own business.","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:18:42.000Z","created_by":1,"updated_at":"2015-09-29T01:18:42.000Z","updated_by":1},{"id":25,"uuid":"34945a72-e85c-4e2d-a7ca-152f1c8bfc92","name":"Unity3D","slug":"unity3d","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:18:42.000Z","created_by":1,"updated_at":"2015-09-29T01:18:42.000Z","updated_by":1},{"id":26,"uuid":"9978ecfe-054d-4a50-94eb-0a16c0fa7624","name":"Unreleased","slug":"unreleased","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:18:42.000Z","created_by":1,"updated_at":"2015-09-29T01:18:42.000Z","updated_by":1},{"id":27,"uuid":"5b5dbbba-c687-4351-a084-536142c4d709","name":"Valkyrie","slug":"valkyrie","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:18:42.000Z","created_by":1,"updated_at":"2015-09-29T01:18:42.000Z","updated_by":1},{"id":28,"uuid":"200e01d6-d6f9-4c11-bee0-86538e6e26ca","name":"Zombie Juice","slug":"zombie-juice","description":"","image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-09-29T01:18:42.000Z","created_by":1,"updated_at":"2015-09-29T01:18:42.000Z","updated_by":1},{"id":29,"uuid":"51d275f3-008c-4e12-866a-82ba4bd4d34a","name":"Twitch","slug":"twitch","description":null,"image":"/content/images/2017/07/HMB-banner-mushroom-bg-2.png","hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2017-07-07T01:03:58.000Z","created_by":1,"updated_at":"2017-07-23T10:58:52.000Z","updated_by":1},{"id":30,"uuid":"3c11dee1-547f-45a1-af13-55e120f35bb0","name":"Runner","slug":"runner","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2017-07-07T01:03:58.000Z","created_by":1,"updated_at":"2017-07-07T01:03:58.000Z","updated_by":1},{"id":31,"uuid":"a978eb84-b3d9-4d88-8163-6b2ef64c763e","name":"GameDev","slug":"gamedev","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2017-07-07T01:03:58.000Z","created_by":1,"updated_at":"2017-07-07T01:03:58.000Z","updated_by":1},{"id":32,"uuid":"5269d443-f596-4b2a-ba5f-365f94836c0f","name":"Game Development","slug":"game-development","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2017-07-07T01:03:58.000Z","created_by":1,"updated_at":"2017-07-07T01:03:58.000Z","updated_by":1},{"id":33,"uuid":"106c2511-3058-4793-8a6d-96bb8b8cfa85","name":"Game Dev","slug":"game-dev","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2017-07-07T01:03:58.000Z","created_by":1,"updated_at":"2017-07-07T01:03:58.000Z","updated_by":1},{"id":34,"uuid":"894644fa-a689-4402-a14b-62ef3e19ed03","name":"DevBlog","slug":"devblog","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2018-04-10T23:40:43.000Z","created_by":1,"updated_at":"2018-04-10T23:40:43.000Z","updated_by":1},{"id":35,"uuid":"9f30d459-aac6-43ec-82c5-dfa495c4cecd","name":"zenject","slug":"zenject","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2018-09-03T01:14:23.000Z","created_by":1,"updated_at":"2018-09-03T01:14:23.000Z","updated_by":1},{"id":36,"uuid":"9b1b92fa-3a04-48f9-93e4-c9966b1f7fbb","name":"unirx","slug":"unirx","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2018-09-03T01:14:23.000Z","created_by":1,"updated_at":"2018-09-03T01:14:23.000Z","updated_by":1},{"id":37,"uuid":"f4420344-62fa-451e-a5c1-f582b328a186","name":"moq","slug":"moq","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2018-09-03T01:14:23.000Z","created_by":1,"updated_at":"2018-09-03T01:14:23.000Z","updated_by":1},{"id":38,"uuid":"931bf664-be15-4e24-adbf-3113665cb4ed","name":"UnitTesting","slug":"unittesting","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2018-09-03T01:14:23.000Z","created_by":1,"updated_at":"2018-09-03T01:14:23.000Z","updated_by":1},{"id":39,"uuid":"2aafcd20-1972-491d-a79e-08db829ebeaf","name":"Testing","slug":"testing","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2018-09-03T01:14:23.000Z","created_by":1,"updated_at":"2018-09-03T01:14:23.000Z","updated_by":1}],"users":[{"id":1,"uuid":"c8844e3c-4495-474d-98d8-9dc3176ec64a","name":"Adam Single","slug":"adam-single","password":"$2a$08$ywoytiFgoTGCt6ZHsCCtFOYZKDkSUV1TimlaWn/7sLALcOODPqsD.","email":"adam@adamsingle.com","image":null,"cover":null,"bio":null,"website":null,"location":null,"accessibility":null,"status":"active","language":"en_US","meta_title":null,"meta_description":null,"last_login":"2018-09-24T22:36:04.000Z","created_at":"2015-09-29T01:55:28.000Z","created_by":1,"updated_at":"2018-09-24T22:36:04.000Z","updated_by":1,"tour":null}]}}]}